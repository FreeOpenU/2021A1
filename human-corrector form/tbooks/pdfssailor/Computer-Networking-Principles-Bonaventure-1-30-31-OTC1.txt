Computer Networking : Principles, Protocols and Practice Release 0.25 Olivier Bonaventure October30,2011 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationSaylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationContents 1 Preface 3 2 Introduction 5 2.1 Servicesandprotocols .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
11 2.2 Thereferencemodels .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
20 2.3 Organisationofthebook .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
25 3 TheapplicationLayer 27 3.1 Principles .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
27 3.2 Application-levelprotocols .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
32 3.3 Writingsimplenetworkedapplications .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
55 3.4 Summary .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
61 3.5 Exercises .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
61 4 Thetransportlayer 67 4.1 Principlesofareliabletransportprotocol .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
67 4.2 TheUserDatagramProtocol .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
87 4.3 TheTransmissionControlProtocol .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
89 4.4 Summary .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
113 4.5 Exercises .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
114 5 Thenetworklayer 127 5.1 Principles .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
127 5.2 InternetProtocol .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
140 5.3 RoutinginIPnetworks .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
170 5.4 Summary .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
195 5.5 Exercises .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
195 6 ThedatalinklayerandtheLocalAreaNetworks 211 6.1 Principles .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
211 6.2 MediumAccessControl .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
214 6.3 Datalinklayertechnologies .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
228 6.4 Summary .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
246 6.5 Exercises .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
246 7 Glossary 249 8 Bibliography 255 i Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor Foundation9 Indicesandtables 257 Bibliography 259 Index 273 ii Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Contents 1 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 2 Contents Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor Foundation1 CHAPTER Preface Thistextbookcamefromafrustrationofitsmainauthor.
Manyauthorschosetowriteatextbookbecausethere are no textbooks in their ﬁeld or because they are not satisﬁed with the existing textbooks.
This frustration has produced several excellent textbooks in the networking community.
At a time when networking textbooks weremainlytheoretical,DouglasComerchosetowriteatextbookentirelyfocusedontheTCP/IPprotocolsuite [Comer1988], a difﬁcult choice at that time.
He later extended his textbook by describing a complete TCP/IP implementation,addingpracticalconsiderationstothetheoreticaldescriptionsin[Comer1988].
RichardStevens approached the Internet like an explorer and explained the operation of protocols by looking at all the packets thatwereexchangedonthewire[Stevens1994].
JimKuroseandKeithRossreinventedthenetworkingtextbooks bystartingfromtheapplicationsthatthestudentsuseandlaterexplainedtheInternetprotocolsbyremovingone layeraftertheother[KuroseRoss09].
The frustrations that motivated this book are different.
When I started to teach networking in the late 1990s, studentswerealreadyInternetusers,buttheirusagewaslimited.Studentswerestillusingreferencetextbooksand spent time in the library.
Today’s students are completely different.
They are avid and experimented web users who ﬁnd lots of information on the web.
This is a positive attitude since they are probably more curious than theirpredecessors.
ThankstotheinformationthatisavailableontheInternet,theycancheckorobtainadditional informationaboutthetopicsexplainedbytheirteachers.
Thisabundantinformationcreatesseveralchallengesfor ateacher.Untiltheendofthenineteenthcentury,ateacherwasbydeﬁnitionmoreknowledgeablethanhisstudents and it was very difﬁcult for the students to verify the lessons given by their teachers.
Today, given the amount ofinformationavailableattheﬁngertipsofeachstudentthroughtheInternet,verifyingalessonorgettingmore informationaboutagiventopicissometimesonlyafewclicksaway.
Websitessuchaswikipediaprovidelotsof informationonvarioustopicsandstudentsoftenconsultthem.
Unfortunately,theorganisationoftheinformation onthesewebsitesisnotwellsuitedtoallowstudentstolearnfromthem.
Furthermore,therearehugedifferences inthequalityanddepthoftheinformationthatisavailablefordifferenttopics.
Thesecondreasonisthatthecomputernetworkingcommunityisastrongparticipantintheopen-sourcemove- ment.
Today,therearehigh-qualityandwidelyusedopen-sourceimplementationsformostnetworkingprotocols.
This includes the TCP/IP implementations that are part of linux, freebsd or the uIP stack running on 8bits con- trollers,butalsoserverssuchasbind,unbound,apacheorsendmailandimplementationsofroutingprotocolssuch asxorporquagga.
Furthermore,thedocumentsthatdeﬁnealmostalloftheInternetprotocolshavebeendevel- opedwithintheInternetEngineeringTaskForce(IETF)usinganopenprocess.
TheIETFpublishesitsprotocol speciﬁcationsinthepubliclyavailableRFCandnewproposalsaredescribedinInternetdrafts.
This open textbook aims to ﬁll the gap between the open-source implementations and the open-source network speciﬁcationsbyprovidingadetailedbutpedagogicaldescriptionofthekeyprinciplesthatguidetheoperationof the Internet.
The book is released under a creative commons licence.
Such an open-source license is motivated by two reasons.
The ﬁrst is that we hope that this will allow many students to use the book to learn computer networks.
The second is that I hope that other teachers will reuse, adapt and improve it.
Time will tell if it is possible to build a community of contributors to improve and develop the book further.
As a starting point, the ﬁrstreleasecontainsallthematerialforaone-semesterﬁrstupperundergraduateoragraduatenetworkingcourse.
Asofthiswriting,mostofthetexthasbeenwrittenbyOlivierBonaventure.
LaurentVanbever,VirginieVanden 3 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Schriek, Damien Saucez and Mickael Hoerdt have contributed to exercises.
Pierre Reinbold designed the icons usedtorepresentswitchesandNipaulLonghasredrawnmanyﬁguresintheSVGformat.
StephaneBortzmeyer sent many suggestions and corrections to the text.
Additional information about the textbook is available at http://inl.info.ucl.ac.be/CNP3 4 Chapter1.
Preface Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor Foundation2 CHAPTER Introduction When the ﬁrst computers were built during the second world war, they were expensive and isolated.
However, after about twenty years, as their prices gradually decreased, the ﬁrst experiments began to connect computers together.
Intheearly1960s,researchersincludingPaulBaran,DonaldDaviesorJosephLickliderindependently published the ﬁrst papers describing the idea of building computer networks [Baran] [Licklider1963] .
Given the cost of computers, sharing them over a long distance was an interesting idea.
In the US, the ARPANET started in 1969 and continued until the mid 1980s [LCCD09].
In France, Louis Pouzin developed the Cyclades network [Pouzin1975].
Many other research networks were built during the 1970s [Moore].
At the same time, thetelecommunicationandcomputerindustriesbecameinterestedincomputernetworks.
Thetelecommunication industry bet on the X25.
The computer industry took a completely different approach by designing Local Area Networks (LAN).
Many LAN technologies such as Ethernet or Token Ring were designed at that time.
During the 1980s, the need to interconnect more and more computers led most computer vendors to develop their own suiteofnetworkingprotocols.
Xeroxdeveloped[XNS],DECchoseDECNet[Malamud1991],IBMdeveloped SNA[McFadyen1976],MicrosoftintroducedNetBIOS[Winston2003],ApplebetonAppletalk[SAO1990].
In theresearchcommunity,ARPANETwasdecommissionedandreplacedbyTCP/IP[LCCD09]andthereference implementationwasdevelopedinsideBSDUnix[McKusick1999].
UniversitieswhowerealreadyrunningUnix couldthusadoptTCP/IPeasilyandvendorsofUnixworkstationssuchasSunorSiliconGraphicsincludedTCP/IP intheirvariantofUnix.
Inparallel,theISO,withsupportfromthegovernments,workedondevelopinganopen 1 Suiteofnetworkingprotocols.
Intheend,TCP/IPbecamethedefactostandardthatisnotonlyusedwithinthe research community.
During the 1990s and the early 2000s, the growth of the usage of TCP/IP continued, and today proprietary protocols are seldom used.
As shown by the ﬁgure below, that provides the estimation of the numberofhostsattachedtotheInternet,theInternethassustainedlargegrowththroughoutthelast20+years.
Figure2.1: EstimationofthenumberofhostsontheInternet 1OpeninISOtermswasincontrastwiththeproprietaryprotocolsuiteswhosespeciﬁcationwasnotalwayspubliclyavailable.
TheUS governmentevenmandatedtheusageoftheOSIprotocols(seeRFC1169),butthiswasnotsufﬁcienttoencouragealluserstoswitchtothe OSIprotocolsuitethatwasconsideredbymanyastoocomplexcomparedtootherprotocolsuites.
5 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Recent estimations of the number of hosts attached to the Internet show a continuing growth since 20+ years.
However, although the number of hosts attached to the Internet is high, it should be compared to the number of mobile phones that are in use today.
More and more of these mobile phones will be connected to the Inter- net.
Furthermore, thanks to the availability of TCP/IP implementations requiring limited resources such as uIP [Dunkels2003],wecanexpecttoseeagrowthofTCP/IPenabledembeddeddevices.
Figure2.2: Estimationofthenumberofmobilephones Before looking at the services provided by computer networks, it is useful to agree on some terminology that is widely used in networking literature.
First of all, computer networks are often classiﬁed in function of the geographicalareathattheycover • LAN:alocalareanetworktypicallyinterconnectshoststhatareuptoafewormaybeafewtensofkilome- tersapart.
• MAN :ametropolitanareanetworktypicallyinterconnectsdevicesthatareuptoafewhundredkilometers apart • WAN :awideareanetworkinterconnecthoststhatcanbelocatedanywhereonEarth2 Anotherclassiﬁcationofcomputernetworksisbasedontheirphysicaltopology.
Inthefollowingﬁgures,physical linksarerepresentedaslineswhileboxesshowcomputersorothertypesofnetworkingequipment.
Computer networks are used to allow several hosts to exchange information between themselves.
To allow any hosttosendmessagestoanyotherhostinthenetwork,theeasiestsolutionistoorganisethemasafull-mesh,with a direct and dedicated link between each pair of hosts.
Such a physical topology is sometimes used, especially whenhighperformanceandhighredundancyisrequiredforasmallnumberofhosts.
However,ithastwomajor drawbacks: • for a network containing n hosts, each host must have n-1 physical interfaces.
In practice, the number of physicalinterfacesonanodewilllimitthesizeofafull-meshnetworkthatcanbebuilt • foranetworkcontainingnhosts, n×(n−1) linksarerequired.
Thisispossiblewhenthereareafewnodes 2 inthesameroom,butrarelywhentheyarelocatedseveralkilometersapart The second possible physical organisation, which is also used inside computers to connect different extension cards, is the bus.
In a bus network, all hosts are attached to a shared medium, usually a cable through a single interface.Whenonehostsendsanelectricalsignalonthebus,thesignalisreceivedbyallhostsattachedtothebus.
Adrawbackofbus-basednetworksisthatifthebusisphysicallycut, thenthenetworkissplitintotwoisolated networks.
Forthisreason,bus-basednetworksaresometimesconsideredtobedifﬁculttooperateandmaintain, especiallywhenthecableislongandtherearemanyplaceswhereitcanbreak.
Suchabus-basedtopologywas usedinearlyEthernetnetworks.
A third organisation of a computer network is a star topology.
In such topologies, hosts have a single physical interface and there is one physical link between each host and the center of the star.
The node at the center of thestarcanbeeitherapieceofequipmentthatampliﬁesanelectricalsignal,oranactivedevice,suchasapiece 2 Inthisbook, wefocusonnetworksthatareusedonEarth.
Thesenetworkssometimesincludesatellitelinks.
Besidesthenetwork technologiesthatareusedonEarth,researchersdevelopnetworkingtechniquesthatcouldbeusedbetweennodeslocatedondifferentplanets.
SuchanInterPlanetaryInternetrequiresdifferenttechniquesthantheonesdiscussedinthisbook.
SeeRFC4838andthereferencestherein forinformationaboutthesetechniques.
6 Chapter2.
Introduction Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure2.3: AFullmeshnetwork Figure2.4: AnetworkorganisedasaBus ofequipmentthatunderstandstheformatofthemessagesexchangedthroughthenetwork.
Ofcourse,thefailure ofthecentralnodeimpliesthefailureofthenetwork.
However,ifonephysicallinkfails(e.g.
becausethecable hasbeencut),thenonlyonenodeisdisconnectedfromthenetwork.
Inpractice,star-shapednetworksareeasier to operate and maintain than bus-shaped networks.
Many network administrators also appreciate the fact that theycancontrolthenetworkfromacentralpoint.
AdministeredfromaWebinterface,orthroughaconsole-like connection, the center of the star is a useful point of control (enabling or disabling devices) and an excellent observationpoint(usagestatistics).
Figure2.5: AnetworkorganisedasaStar AfourthphysicalorganisationofanetworkistheRingtopology.
Likethebusorganisation,eachhosthasasingle physical interface connecting it to the ring.
Any signal sent by a host on the ring will be received by all hosts attached to the ring.
From a redundancy point of view, a single ring is not the best solution, as the signal only travelsinonedirectiononthering;thusifoneofthelinkscomposingtheringiscut,theentirenetworkfails.
In practice, suchringshavebeenusedinlocalareanetworks, butarenowoftenreplacedbystar-shapednetworks.
Inmetropolitannetworks,ringsareoftenusedtointerconnectmultiplelocations.
Inthiscase,twoparallellinks, composed of different cables, are often used for redundancy.
With such a dual ring, when one ring fails all the trafﬁccanbequicklyswitchedtotheotherring.
Aﬁfthphysicalorganisationofanetworkisthetree.
Suchnetworksaretypicallyusedwhenalargenumberof customersmustbeconnectedinaverycost-effectivemanner.
CableTVnetworksareoftenorganisedastrees.
Inpractice,mostrealnetworkscombinepartofthesetopologies.Forexample,acampusnetworkcanbeorganised asaringbetweenthekeybuildings,whilesmallerbuildingsareattachedasatreeorastartoimportantbuildings.
7 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure2.6: AnetworkorganisedasaRing Figure2.7: AnetworkorganisedasaTree 8 Chapter2.
Introduction Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 OranISPnetworkmayhaveafullmeshofdevicesinthecoreofitsnetwork,andtreestoconnectremoteusers.
Throughoutthisbook,ourobjectivewillbetounderstandtheprotocolsandmechanismsthatarenecessaryfora networksuchastheoneshownbelow.
S R ISP2 R beta.be alpha.com R R R ISP2 R R R ISP2 R R R S R societe.fr PSTN R ISP1 R tux@linux# ADSL Figure2.8: Asimpleinternetwork The ﬁgure above illustrates an internetwork, i.e.
a network that interconnects other networks.
Each network is illustrated as an ellipse containing a few devices.
We will explain throughout the book the different types of devicesandtheirrespectiverolesenablingallhoststoexchangeinformation.
Aswellasthis,wewilldiscusshow networks are interconnected, and the rules that guide these interconnections.
We will also analyse how the bus, ringandmeshtopologiesareusedtobuildrealnetworks.
Thelastpointofterminologyweneedtodiscussisthetransmissionmodes.Whenexchanginginformationthrough a network, we often distinguish between three transmission modes.
In TV and radio transmission, broadcast is oftenusedtoindicateatechnologythatsendsavideoorradiosignaltoallreceiversinagivengeographicalarea.
Broadcastissometimesusedincomputernetworks,butonlyinlocalareanetworkswherethenumberofrecipients islimited.
Theﬁrstandmostwidespreadtransmissionmodeiscalledunicast.Intheunicasttransmissionmode,information issentbyonesendertoonereceiver.
Mostoftoday’sInternetapplicationsrelyontheunicasttransmissionmode.
The example below shows a network with two types of devices : hosts (drawn as computers) and intermediate nodes (drawn as cubes).
Hosts exchange information via the intermediate nodes.
In the example below, when hostSusesunicasttosendinformation,itsendsitviathreeintermediatenodes.
Eachofthesenodesreceivesthe informationfromitsupstreamnodeorhost,thenprocessesandforwardsittoitsdownstreamnodeorhost.
This iscalledstoreandforwardandwewillseelaterthatthisconceptiskeyincomputernetworks.
Asecondtransmissionmodeismulticasttransmissionmode.
Thismodeisusedwhenthesameinformationmust besenttoasetofrecipients.
ItwasﬁrstusedinLANsbutlaterbecamesupportedinwideareanetworks.
When asenderusesmulticasttosendinformationtoN receivers,thesendersendsasinglecopyoftheinformationand thenetworknodesduplicatethisinformationwhenevernecessary,sothatitcanreachallrecipientsbelongingto thedestinationgroup.
To understand the importance of multicast transmission, consider source S that sends the same information to destinationsA,CandE.Withunicast,thesameinformationpassesthreetimesonintermediatenodes1and2and twice on node 4.
This is a waste of resources on the intermediate nodes and on the links between them.
With multicasttransmission,hostSsendstheinformationtonode1thatforwardsitdownstreamtonode2.
Thisnode createsacopyofthereceivedinformationandsendsonecopydirectlytohostEandtheotherdownstreamtonode 4.
Upon reception of theinformation, node 4 produces a copy and forwards one to node A and another to node C.Thankstomulticast,thesameinformationcanreachalargenumberofreceiverswhilebeingsentonlyonceon eachlink.
9 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 E A S B C D Figure2.9: Unicasttransmission E A S B C D Figure2.10: Multicasttransmission 10 Chapter2.
Introduction Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 The last transmission mode is the anycast transmission mode.
It was initially deﬁned in RFC 1542.
In this transmissionmode,asetofreceiversisidentiﬁed.
Whenasourcesendsinformationtowardsthissetofreceivers, thenetworkensuresthattheinformationisdeliveredtoonereceiverthatbelongstothisset.
Usually,thereceiver closesttothesourceistheonethatreceivestheinformationsentbythisparticularsource.Theanycasttransmission modeisusefultoensureredundancy,aswhenoneofthereceiversfails,thenetworkwillensurethatinformation will be delivered to another receiver belonging to the same group.
However, in practice supporting the anycast transmissionmodecanbedifﬁcult.
* A S B * * Figure2.11: Anycasttransmission In the example above, the three hosts marked with * are part of the same anycast group.
When host S sends informationtothisanycastgroup,thenetworkensuresthatitwillreachoneofthemembersoftheanycastgroup.
The dashed lines show a possible delivery via nodes 1, 2 and 4.
A subsequent anycast transmission from host S to the same anycast group could reach the host attached to intermediate node 3 as shown by the plain line.
Ananycasttransmissionreachesamemberoftheanycastgroupthatischosenbythenetworkinfunctionofthe currentnetworkconditions.
2.1 Services and protocols Animportantaspecttounderstandbeforestudyingcomputernetworksisthedifferencebetweenaserviceanda protocol.
Inordertounderstandthedifferencebetweenthetwo,itisusefultostartwithrealworldexamples.Thetraditional Postprovidesaservicewhereapostmandeliversletterstorecipients.
ThePostdeﬁnespreciselywhichtypesof letters (size, weight, etc) can be delivered by using the Standard Mail service.
Furthermore, the format of the envelopeisspeciﬁed(positionofthesenderandrecipientaddresses,positionofthestamp).
Someonewhowants to send a letter must either place the letter at a Post Ofﬁce or inside one of the dedicated mailboxes.
The letter will then be collected and delivered to its ﬁnal recipient.
Note that for the regular service the Post usually does notguaranteethedeliveryofeachparticularletter,somelettersmaybelost,andsomelettersaredeliveredtothe wrongmailbox.
Ifaletterisimportant,thenthesendercanusetheregisteredservicetoensurethattheletterwill bedeliveredtoitsrecipient.
SomePostservicesalsoprovideanacknowledgedserviceoranexpressmailservice thatisfasterthantheregularservice.
Incomputernetworks,thenotionofserviceismoreformallydeﬁnedin[X200].
Itcanbebetterunderstoodby consideringacomputernetwork,whateveritssizeorcomplexity,asablackboxthatprovidesaservicetousers, asshownintheﬁgurebelow.
Theseuserscouldbehumanusersorprocessesrunningonacomputersystem.
Many users can be attached to the same service provider.
Through this provider, each user must be able to exchangemessageswithanyotheruser.
Tobeabletodeliverthesemessages, theserviceprovidermustbeable tounambiguouslyidentifyeachuser.
Incomputernetworks,eachuserisidentiﬁedbyauniqueaddress,wewill discusslaterhowtheseaddressesarebuiltandused.
Atthispoint,andwhenconsideringunicasttransmission,the maincharacteristicoftheseaddressesisthattheyareunique.
Twodifferentusersattachedtothenetworkcannot usethesameaddress.
2.1.
Servicesandprotocols 11 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 User A User B Service Access Point Primitives Service provider ("the network") Figure2.12: Usersandserviceprovider Throughout this book, we will deﬁne a service as a set of capabilities provided by a system (and its underlying elements)toitsuser.Auserinteractswithaservicethroughaserviceaccesspoint.Notethatasshownintheﬁgure above,usersinteractwithoneserviceprovider.
Inpractice,theserviceproviderisdistributedoverseveralhosts, buttheseareimplementationdetailsthatarenotimportantatthisstage.
Theseinteractionsbetweenauseranda service provider are expressed in [X200] by using primitives, as show in the ﬁgure below.
These primitives are anabstractrepresentationoftheinteractionsbetweenauserandaserviceprovider.
Inpractice,theseinteractions couldbeimplementedassystemcallsforexample.
User A User B X.request X.confirm X.response X.indication Service provider ("the network") Figure2.13: Thefourtypesofprimitives Fourtypesofprimitivesaredeﬁned: • X.request.
Thistypeofprimitivecorrespondstoarequestissuedbyausertoaserviceprovider • X.indication.
This type of primitive is generated by the network provider and delivered to a user (often relatedtoanearlierandremoteX.requestprimitive) • X.response.
ThistypeofprimitiveisgeneratedbyausertoanswertoanearlierX.indicationprimitive • X.conﬁrm.
This type of primitive is delivered by the service provide to conﬁrm to a user that a previous X.requestprimitivehasbeensuccessfullyprocessed.
Primitives can be combined to model different types of services.
The simplest service in computer networks is calledtheconnectionlessservice3.
Thisservicecanbemodelledbyusingtwoprimitives: • Data.request(source,destination,SDU).
This primitive is issued by a user that speciﬁes, as parameters, its (source) address, the address of the recipient of the message and the message itself.
We will use Service DataUnit(SDU)tonamethemessagethatisexchangedtransparentlybetweentwousersofaservice.
• Data.indication(source,destination,SDU).
This primitive is delivered by a service provider to a user.
It containsasparametersaServiceDataUnitaswellastheaddressesofthesenderandthedestinationusers.
When discussing the service provided in a computer network, it is often useful to be able to describe the inter- actions between the users and the provider graphically.
A frequently used representation is the time-sequence diagram.
Inthischapterandlaterthroughoutthe book, wewilloften usediagramssuchastheﬁgurebelow.
A time-sequence diagram describes the interactions between two users and a service provider.
By convention, the usersarerepresentedintheleftandrightpartsofthediagramwhiletheserviceprovideroccupiesthemiddleofthe diagram.
Insuchatime-sequencediagram,timeﬂowsfromthetop,tothebottomofthediagram.
Eachprimitive 3Thisserviceiscalledtheconnectionlessservicebecausethereisnoneedtocreateaconnectionbeforetransmittinganydataincontrast withtheconnection-orientedservice.
12 Chapter2.
Introduction Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 is represented by a plain horizontal arrow, to which the name of the primitive is attached.
The dashed lines are usedtorepresentthepossiblerelationshipbetweentwo(ormore)primitives.Suchadiagramprovidesinformation abouttheorderingofthedifferentprimitives,butthedistancebetweentwoprimitivesdoesnotrepresentaprecise amountoftime.
Theﬁgurebelowprovidesarepresentationoftheconnectionlessserviceasatime-sequencediagram.
Theuseron theleft,havingaddressS,issuesaData.requestprimitivecontainingSDUMthatmustbedeliveredbytheservice providertodestinationD.ThedashedlinebetweenthetwoprimitivesindicatesthattheData.indicationprimitive thatisdeliveredtotheuserontherightcorrespondstotheData.requestprimitivesentbytheuserontheleft.
Source Provider Destination DATA.request(S, D, "M") DATA.indication(S, D, "M") Time Figure2.14: Asimpleconnectionlessservice Thereareseveralpossibleimplementationsoftheconnectionlessservice,whichwewilldiscusslaterinthisbook.
Beforestudyingtheserealisations,itisusefultodiscussthepossiblecharacteristicsoftheconnectionlessservice.
A reliable connectionless service is a service where the service provider guarantees that all SDUs submitted in Data.requestsbyauserwilleventuallybedeliveredtotheirdestination.
Suchaservicewouldbeveryusefulfor users,butguaranteeingperfectdeliveryisdifﬁcultinpractice.
Forthisreason,computernetworksusuallysupport anunreliableconnectionlessservice.
Anunreliableconnectionlessservicemaysufferfromvarioustypesofproblemscomparedtoareliableconnec- tionless service.
First of all, an unreliable connectionless service does not guarantee the delivery of all SDUs.
Thiscanbeexpressedgraphicallybyusingthetime-sequencediagrambelow.
Inpractice,anunreliableconnectionlessservicewillusuallydeliveralargefractionoftheSDUs.
However,since thedeliveryofSDUsisnotguaranteed,theusermustbeabletorecoverfromthelossofanySDU.
AsecondimperfectionthatmayaffectanunreliableconnectionlessserviceisthatitmayduplicateSDUs.
Some unreliable connectionless service providers may deliver an SDU sent by a user twice or even more.
This is illustratedbythetime-sequencediagrambelow.
Finally, some unreliable connectionless service providers may deliver to a destination a different SDU than the onethatwassuppliedintheData.request.
Thisisillustratedintheﬁgurebelow.
Whenauserinteractswithaserviceprovider,itmustpreciselyknowthelimitationsoftheunderlyingserviceto be able to overcome any problem that may arise.
This requires a precise deﬁnition of the characteristics of the underlyingservice.
Another important characteristic of the connectionless service is whether it preserves the ordering of the SDUs sentbyoneuser.
Fromtheuser’sviewpoint,thisisoftenadesirablecharacteristic.
Thisisillustratedintheﬁgure below.
However,manyconnectionlessservices,andinparticulartheunreliableservices,donotguaranteethattheywill alwayspreservetheorderingoftheSDUssentbyeachuser.
Thisisillustratedintheﬁgurebelow.
2.1.
Servicesandprotocols 13 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Source Provider Destination DATA.request(S, D, "Msg") Time Figure2.15: AnunreliableconnectionlessservicemaylooseSDUs Source Provider Destination DATA.request(S, D, "Msg") DATA.indication(S, D, "Msg") DATA.indication(S, D, "Msg") Time Figure2.16: AnunreliableconnectionlessservicemayduplicateSDUs 14 Chapter2.
Introduction Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Source Provider Destination DATA.request(S, D, "Msg") DATA.indication(S, D, "XYZ") Time Figure2.17: AnunreliableconnectionlessservicemaydelivererroneousSDUs Figure2.18: AconnectionlessservicethatpreservestheorderingofSDUssentbyagivenuser Source Provider Destination DATA.request(S, D, "A") DATA.request(S, D, "B") DATA.indication(S, D, "B") DATA.indication(S, D, "A") Time Figure2.19: AconnectionlessservicethatdoesnotpreservetheorderingofSDUssentbyagivenuser 2.1.
Servicesandprotocols 15 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Theconnectionlessserviceiswidelyusedincomputernetworksaswewillseelaterinthisbook.Severalvariations tothisbasicservicehavebeenproposed.
Oneoftheseistheconﬁrmedconnectionlessservice.
Thisserviceuses aData.conﬁrmprimitiveinadditiontotheclassicalData.request andData.indicationprimitives.
Thisprimitive isissuedbytheserviceprovidertoconﬁrmtoauserthedeliveryofapreviouslysentSDUtoitsrecipient.
Note that,liketheregisteredserviceofthepostofﬁce,theData.conﬁrmonlyindicatesthattheSDUhasbeendelivered tothedestinationuser.
TheData.conﬁrmprimitivedoesnotindicatewhethertheSDUhasbeenprocessedbythe destinationuser.
Thisconﬁrmedconnectionlessserviceisillustratedintheﬁgurebelow.
Source Provider Destination DATA.request(S, D, "M") DATA.indication(S, D, "M") DATA.confirm Time Figure2.20: Aconﬁrmedconnectionlessservice The connectionless service we have described earlier is frequently used by users who need to exchange small SDUs.UsersneedingtoeithersendorreceiveseveraldifferentandpotentiallylargeSDUs,orwhoneedstructured exchangesoftenprefertheconnection-orientedservice.
Aninvocationoftheconnection-orientedserviceisdividedintothreephases.
Theﬁrstphaseistheestablishment ofaconnection.
Aconnectionisatemporaryassociationbetweentwousersthroughaserviceprovider.
Several connections may exist at the same time between any pair of users.
Once established, the connection is used to transferSDUs.
ConnectionsusuallyprovideonebidirectionalstreamsupportingtheexchangeofSDUsbetween the two users that are associated through the connection.
This stream is used to transfer data during the second phaseoftheconnectioncalledthedatatransferphase.
Thethirdphaseistheterminationoftheconnection.
Once theusershaveﬁnishedexchangingSDUs,theyrequesttotheserviceprovidertoterminatetheconnection.
Aswe willseelater,therearealsosomecaseswheretheserviceprovidermayneedtoterminateaconnectionitself.
Theestablishmentofaconnectioncanbemodelledbyusingfourprimitives:Connect.request,Connect.indication, Connect.responseandConnect.conﬁrm.
TheConnect.request primitiveisusedtorequesttheestablishmentofa connection.
The main parameter of this primitive is the address of the destination user.
The service provider delivers a Connect.indication primitive to inform the destination user of the connection attempt.
If it accepts to establishaconnection,itrespondswithaConnect.responseprimitive.
Atthispoint,theconnectionisconsidered tobeopenandthedestinationusercanstartsendingSDUsovertheconnection.
Theserviceproviderprocesses the Connect.response and will deliver a Connect.conﬁrm to the user who initiated the connection.
The delivery ofthisprimitiveterminatestheconnectionestablishmentphase.
Atthispoint,theconnectionisconsideredtobe openandbothuserscansendSDUs.
Asuccessfulconnectionestablishmentisillustratedbelow.
The example above shows a successful connection establishment.
However, in practice not all connections are successfullyestablished.
Onereasonisthatthedestinationusermaynotagree,forpolicyorperformancereasons, to establish a connection with the initiating user at this time.
In this case, the destination user responds to the Connect.indication primitive by a Disconnect.request primitive that contains a parameter to indicate why the connectionhasbeenrefused.
TheserviceproviderwillthendeliveraDisconnect.indicationprimitivetoinform the initiating user.
A second reason is when the service provider is unable to reach the destination user.
This mighthappenbecausethedestinationuserisnotcurrentlyattachedtothenetworkorduetocongestion.
Inthese 16 Chapter2.
Introduction Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Source Provider Destination CONNECT.request CONNECT.indication CONNECT.response Destination considers CONNECT.confirm connection open Source considers connection open Time Figure2.21: Connectionestablishment cases,theserviceproviderrespondstotheConnect.requestwithaDisconnect.indicationprimitivewhosereason parametercontainsadditionalinformationaboutthefailureoftheconnection.
Source Provider Destination CONNECT.request CONNECT.indication DISCONNECT.request DISCONNECT.indication Connection rejected by destination CONNECT.request DISCONNECT.indication Connection rejected by provider Time Figure2.22: Twotypesofrejectionforaconnectionestablishmentattempt Oncetheconnectionhasbeenestablished, theserviceprovidersuppliestwodatastreamstothecommunicating users.
The ﬁrst data stream can be used by the initiating user to send SDUs.
The second data stream allows therespondingusertosendSDUstotheinitiatinguser.
Thedatastreamscanbeorganisedindifferentways.
A ﬁrstorganisationisthemessage-modetransfer.
Withthemessage-modetransfer,theserviceproviderguarantees thatoneandonlyoneData.indicationwillbedeliveredtotheendpointofthedatastreamforeachData.request primitive issued by the other endpoint.
The message-mode transfer is illustrated in the ﬁgure below.
The main advantageofthemessage-transfermodeisthattherecipientreceivesexactlytheSDUsthatweresentbytheother user.
If each SDU contains a command, the receiving user can process each command as soon as it receives a SDU.
Unfortunately, the message-mode transfer is not widely used on the Internet.
On the Internet, the most popular connection-orientedservicetransfersSDUsinstream-mode.Withthestream-mode,theserviceprovidersuppliesa bytestreamthatlinksthetwocommunicatingusers.ThesendingusersendsbytesbyusingData.requestprimitives thatcontainsequencesofbytesasSDUs.
TheserviceproviderdeliversSDUscontainingconsecutivebytestothe receivinguserbyusingData.indicationprimitives.
Theserviceproviderensuresthatallthebytessentatoneend 2.1.
Servicesandprotocols 17 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Source Provider Destination CONNECT.request CONNECT.indication CONNECT.response CONNECT.confirm DATA.request("A") DATA.indication("A") DATA.request("BCD") DATA.indication("BCD") DATA.request("EF") DATA.indication("EF") Time Figure2.23: Message-modetransferinaconnectionorientedservice ofthestreamaredeliveredcorrectlyinthesameorderattheotherendpoint.
However,theserviceproviderdoes notattempttopreservetheboundariesoftheSDUs.
Thereisnorelationenforcedbytheserviceproviderbetween thenumberofData.request andthenumberofData.indicationprimitives.
Thestream-modeisillustratedinthe ﬁgurebelow.
Inpractice,aconsequenceoftheutilisationofthestream-modeisthatiftheuserswanttoexchange structured SDUs, they will need to provide the mechanisms that allow the receiving user to separate successive SDUsinthebytestreamthatitreceives.
Aswewillseeinthenextchapter,applicationlayerprotocolsoftenuse speciﬁcdelimiterssuchastheendoflinecharactertodelineateSDUsinabytestream.
Source Provider Destination CONNECT.request CONNECT.indication CONNECT.response CONNECT.confirm DATA.request("AB") DATA.indication("A") DATA.request("CD") DATA.indication("B") DATA.request("EF") DATA.indication("C") DATA.indication("DEF") Time Figure2.24: Stream-modetransferinaconnectionorientedservice Thethirdphaseofaconnectioniswhenitneedstobereleased.
Asaconnectioninvolvesthreeparties(twousers and one service provider), any of them can request the termination of the connection.
Usually, connections are terminateduponrequestofoneuseroncethedatatransferisﬁnished.
However,sometimestheserviceprovider may be forced to terminate a connection.
This can be due to lack of resources inside the service provider or becauseoneoftheusersisnotreachableanymorethroughthenetwork.Inthiscase,theserviceproviderwillissue Disconnect.indication primitives to both users.
These primitives will contain, as parameter, some information about the reason for the termination of the connection.
Unfortunately, as illustrated in the ﬁgure below, when a 18 Chapter2.
Introduction Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 serviceproviderisforcedtoterminateaconnectionitcannotguaranteethatallSDUssentbyeachuserhavebeen deliveredtotheotheruser.
Thisconnectionreleaseissaidtobeabruptasitcancauselossesofdata.
Source Provider Destination Connection opened Connection opened DATA.request("A") DATA.request("B") DATA.indication("A") DATA.indication("C") DISCONNECT.indication DISCONNECT.indication Time Figure2.25: Abruptconnectionreleaseinitiatedbytheserviceprovider Anabruptconnectionreleasecanalsobetriggeredbyoneoftheusers.Ifauserneeds,foranyreason,toterminate a connection quickly, it can issue a Disconnect.request primitive and to request an abrupt release.
The service providerwillprocesstherequest,stopthetwodatastreamsanddelivertheDisconnect.indicationprimitivetothe remoteuserassoonaspossible.
Asillustratedintheﬁgurebelow,thisabruptconnectionreleasemaycauselosses ofSDUs.
Source Provider Destination Connection opened Connection opened DATA.request("A") DATA.request("B") DATA.indication("A") DISCONNECT.req(abrupt) DATA.request("C") DISCONNECT.indication Time Figure2.26: Abruptconnectionreleaseinitiatedbyauser ToensureareliabledeliveryoftheSDUssentbyeachuseroveraconnection,weneedtoconsiderthetwostreams thatcomposeaconnectionasindependent.
AusershouldbeabletoreleasethestreamthatitusestosendSDUs onceithassentalltheSDUsthatitplannedtosendoverthisconnection,butstillcontinuetoreceiveSDUsover theoppositestream.
Thisgracefulconnectionreleaseisusuallyperformedasshownintheﬁgurebelow.
Oneuser issuesaDisconnect.requestprimitivetoitsprovideronceithasissuedallitsData.requestprimitives.
Theservice providerwillwaituntilallData.indicationprimitiveshavebeendeliveredtothereceivinguserbeforeissuingthe Disconnnect.indication primitive.
This primitive informs the receiving user that it will no longer receive SDUs over this connection, but it is still able to issue Data.request primitives on the stream in the opposite direction.
OncetheuserhasissuedallofitsData.requestprimitives,itissuesaDisconnnect.requestprimitivetorequestthe terminationoftheremainingstream.
Theserviceproviderwillprocesstherequestanddeliverthecorresponding Disconnect.indication to the other user once it has delivered all the pending Data.indication primitives.
At this 2.1.
Servicesandprotocols 19 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 point, all data has been delivered and the two streams have been released successfully and the connection is completelyclosed.
Source Provider Destination Connection opened Connection opened DATA.request("A") DATA.request("B") DATA.request("C") DATA.indication("A") DISCONNECT.req(graceful) Source -> Destination DATA.indication("B") connection closed DISCONNECT.ind(graceful) DATA.indication("C") DATA.request("D") DATA.indication("D") DISCONNECT.req(graceful) DISCONNECT.ind(graceful) Connection closed Connection closed Time Figure2.27: Gracefulconnectionrelease Note: Reliabilityoftheconnection-orientedservice Animportantpointtonoteabouttheconnection-orientedserviceisitsreliability.
Aconnection-oriented service canonlyguaranteethecorrectdeliveryofallSDUsprovidedthattheconnectionhasbeenreleasedgracefully.This impliesthatwhiletheconnectionisactive,thereisnoguaranteefortheactualdeliveryoftheSDUsexchangedas theconnectionmayneedtobereleasedabruptlyatanytime.
2.2 The reference models Given the growing complexity of computer networks, during the 1970s network researchers proposed various reference models to facilitate the description of network protocols and services.
Of these, the Open Systems Interconnection (OSI) model [Zimmermann80] was probably the most inﬂuential.
It served as the basis for the standardisation work performed within the ISO to develop global computer network standards.
The reference modelthatweuseinthisbookcanbeconsideredasasimpliﬁedversionoftheOSIreferencemodel4.
2.2.1 The ﬁve layers reference model Ourreferencemodelisdividedintoﬁvelayers,asshownintheﬁgurebelow.
Starting from the bottom, the ﬁrst layer is the Physical layer.
Two communicating devices are linked through a physical medium.
This physical medium is used to transfer an electrical or optical signal between two directly connecteddevices.
Severaltypesofphysicalmediumsareusedinpractice: • electricalcable.
Informationcanbetransmittedoverdifferenttypesofelectricalcables.
Themostcommon onesarethetwistedpairsthatareusedinthetelephonenetwork,butalsoinenterprisenetworksandcoaxial cables.
CoaxialcablesarestillusedincableTVnetworks, butarenolongerusedinenterprisenetworks.
Somenetworkingtechnologiesoperateovertheclassicalelectricalcable.
• optical ﬁber.
Optical ﬁbers are frequently used in public and enterprise networks when the distance be- tweenthecommunicationdevicesislargerthanonekilometer.
Therearetwomaintypesofopticalﬁbers : multimode and monomode.
Multimode is much cheaper than monomode ﬁber because a LED can be 4AninterestinghistoricaldiscussionoftheOSI-TCP/IPdebatemaybefoundin[Russel06] 20 Chapter2.
Introduction Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Application Transport Network Datalink Physical Physical transmission medium Figure2.28: Theﬁvelayersofthereferencemodel usedtosendasignaloveramultimodeﬁberwhileamonomodeﬁbermustbedrivenbyalaser.
Duetothe differentmodesofpropagationoflight,monomodeﬁbersarelimitedtodistancesofafewkilometerswhile multimodeﬁberscanbeusedoverdistancesgreaterthanseveraltensofkilometers.
Inbothcases,repeaters canbeusedtoregeneratetheopticalsignalatoneendpointofaﬁbertosenditoveranotherﬁber.
• wireless.
In this case, a radio signal is used to encode the information exchanged between the communi- catingdevices.
Manytypesofmodulationtechniquesareusedtosendinformationoverawirelesschannel andthereislotofinnovationinthisﬁeldwithnewtechniquesappearingeveryyear.
Whilemostwireless networksrelyonradiosignals,someusealaserthatsendslightpulsestoaremotedetector.
Theseoptical techniquesallowtocreatepoint-to-pointlinkswhileradio-basedtechniques,dependingonthedirectionality oftheantennas,canbeusedtobuildnetworkscontainingdevicesspreadoverasmallgeographicalarea.
An important point to note about the Physical layer is the service that it provides.
This service is usually an unreliable connection-oriented service that allows the users of the Physical layer to exchange bits.
The unit of informationtransferinthePhysicallayeristhebit.
ThePhysicallayerserviceisunreliablebecause: • thePhysicallayermaychange,e.g.duetoelectromagneticinterferences,thevalueofabitbeingtransmitted • thePhysicallayermaydelivermorebitstothereceiverthanthebitssentbythesender • thePhysicallayermaydeliverfewerbitstothereceiverthanthebitssentbythesender The last two points may seem strange at ﬁrst glance.
When two devices are attached through a cable, how is it possibleforbitstobecreatedorlostonsuchacable?
Thisismainlyduetothefactthatthecommunicatingdevicesusetheirownclocktotransmitbitsatagivenbit rate.
Considerasenderhavingaclockthatticksonemilliontimespersecondandsendsonebiteverytick.
Every microsecond,thesendersendsanelectricaloropticalsignalthatencodesonebit.
Thesender’sbitrateisthus1 Mbps.
Ifthereceiverclockticksexactly5 everymicrosecond,itwillalsodeliver1Mbpstoitsuser.
However,if thereceiver’sclockisslightlyfaster(resp.
slower),thanitwilldeliverslightlymore(resp.
less)thanonemillion bitseverysecond.
Thisexplainswhythephysicallayermayloseorcreatebits.
Note: Bitrate Incomputernetworks,thebitrateofthephysicallayerisalwaysexpressedinbitspersecond.
OneMbpsisone million bits per second and one Gbps is one billion bits per second.
This is in contrast with memory speciﬁca- tions that are usually expressed in bytes (8 bits), KiloBytes ( 1024 bytes) or MegaBytes (1048576 bytes).
Thus transferringoneMBytethrougha1Mbpslinklasts8.39seconds.
5Havingperfectlysynchronisedclocksrunningatahighfrequencyisverydifﬁcultinpractice.However,somephysicallayersintroducea feedbackloopthatallowsthereceiver’sclocktosynchroniseitselfautomaticallytothesender’sclock.However,notallphysicallayersinclude thiskindofsynchronisation.
2.2.
Thereferencemodels 21 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Bitrate Bitspersecond 1Kbps 103 1Mbps 106 1Gbps 109 1Tbps 1012 Bits 01010010100010101001010 Physical layer Physical layer Physical transmission medium Figure2.29: ThePhysicallayer Thephysicallayerallowsthustwoormoreentitiesthataredirectlyattachedtothesametransmissionmediumto exchangebits.
Beingabletoexchangebitsisimportantasvirtuallyanyinformationcanbeencodedasasequence ofbits.
Electricalengineersareusedtoprocessingstreamsofbits,butcomputerscientistsusuallyprefertodeal withhigherlevelconcepts.
Asimilarissueariseswithﬁlestorage.
Storagedevicessuchashard-disksalsostore streams of bits.
There are hardware devices that process the bit stream produced by a hard-disk, but computer scientistshavedesignedﬁlesystemstoallowapplicationstoeasilyaccesssuchstoragedevices.
Theseﬁlesystems aretypicallydividedintoseverallayersaswell.
Hard-disksstoresectorsof512bytesormore.
Unixﬁlesystems group sectors in larger blocks that can contain data or inodes representing the structure of the ﬁlesystem.
Fi- nally,applicationsmanipulateﬁlesanddirectoriesthataretranslatedinblocks,sectorsandeventuallybitsbythe operatingsystem.
Computernetworksuseasimilarapproach.
Eachlayerprovidesaservicethatisbuiltabovetheunderlyinglayer andisclosertotheneedsoftheapplications.
The Datalink layer builds on the service provided by the underlying physical layer.
The Datalink layer allows twohoststhataredirectlyconnectedthroughthephysicallayertoexchangeinformation.
Theunitofinformation exchanged between two entities in the Datalink layer is a frame.
A frame is a ﬁnite sequence of bits.
Some Datalink layers use variable-length frames while others only use ﬁxed-length frames.
Some Datalink layers provideaconnection-orientedservicewhileothersprovideaconnectionlessservice.SomeDatalinklayersprovide reliabledeliverywhileothersdonotguaranteethecorrectdeliveryoftheinformation.
An important point to note about the Datalink layer is that although the ﬁgure below indicates that two entities oftheDatalinklayerexchangeframesdirectly,inrealitythisisslightlydifferent.
WhentheDatalinklayerentity on the left needs to transmit a frame, it issues as many Data.request primitives to the underlying physical layer as there are bits in the frame.
The physical layer will then convert the sequence of bits in an electromagnetic or optical signal that will be sent over the physical medium.
The physical layer on the right hand side of the ﬁgurewilldecodethereceivedsignal,recoverthebitsandissuethecorrespondingData.indicationprimitivesto itsDatalinklayerentity.
Iftherearenotransmissionerrors,thisentitywillreceivetheframesentearlier.
Datalink Frames Datalink Physical Physical Figure2.30: TheDatalinklayer TheDatalinklayerallowsdirectlyconnectedhoststoexchangeinformation,butitisoftennecessarytoexchange information between hosts that are not attached to the same physical medium.
This is the task of the network layer.
Thenetworklayer isbuiltabovethedatalinklayer.
Networklayerentitiesexchangepackets.
Apacketis a ﬁnite sequence of bytes that is transported by the datalink layer inside one or more frames.
A packet usually 22 Chapter2.
Introduction Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 containsinformationaboutitsoriginanditsdestination,andusuallypassesthroughseveralintermediatedevices calledroutersonitswayfromitsorigintoitsdestination.
Network Packets Network Packets Network Datalink Datalink Datalink Physical layer Physical layer Physical layer Figure2.31: Thenetworklayer Mostrealisationsofthenetworklayer, includingtheinternet, donotprovideareliableservice.
However, many applications need to exchange information reliably and so using the network layer service directly would be very difﬁcult for them.
Ensuring the reliable delivery of the data produced by applications is the task of the transport layer.
Transport layer entities exchange segments.
A segment is a ﬁnite sequence of bytes that are transportedinsideoneormorepackets.
Atransportlayerentityissuessegments(orsometimespartofsegments) asData.requesttotheunderlyingnetworklayerentity.
There are different types of transport layers.
The most widely used transport layers on the Internet are TCP ,that provides a reliable connection-oriented bytestream transport service, and UDP ,that provides an unreliable connection-lesstransportservice.
Transport Segments Transport Network Network Network Datalink Datalink Datalink Physical layer Physical layer Physical layer Figure2.32: Thetransportlayer The upper layer of our architecture is the Application layer.
This layer includes all the mechanisms and data structuresthatarenecessaryfortheapplications.
WewilluseApplicationDataUnit(ADU)toindicatethedata exchangedbetweentwoentitiesoftheApplicationlayer.
Application ADU Application Transport Transport Network Network Network Datalink Datalink Datalink Physical layer Physical layer Physical layer Figure2.33: TheApplicationlayer 2.2.2 The TCP/IP reference model IncontrastwithOSI,theTCP/IPcommunitydidnotspendalotofeffortdeﬁningadetailedreferencemodel;in fact,thegoalsoftheInternetarchitecturewereonlydocumentedafterTCP/IPhadbeendeployed[Clark88].
RFC 1122 , which deﬁnes the requirements for Internet hosts, mentions four different layers.
Starting from the top, theseare: • anApplicationlayer • aTransportlayer • anInternetlayerwhichisequivalenttothenetworklayerofourreferencemodel • aLinklayerwhichcombinesthefunctionalitiesofthephysicalanddatalinklayersofourﬁve-layerreference model Besidesthisdifferenceinthelowerlayers,theTCP/IPreferencemodelisveryclosetotheﬁvelayersthatweuse throughoutthisdocument.
2.2.
Thereferencemodels 23 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 2.2.3 The OSI reference model Compared to the ﬁve layers reference model explained above, the OSI reference model deﬁned in [X200] is divided in seven layers.
The four lower layers are similar to the four lower layers described above.
The OSI referencemodelreﬁnedtheapplicationlayerbydividingitinthreelayers: • theSessionlayer.
TheSessionlayercontainstheprotocolsandmechanismsthatarenecessarytoorganize andtosynchronizethedialogueandtomanagethedataexchangeofpresentationlayerentities.
Whileone ofthemainfunctionsofthetransportlayeristocopewiththeunreliabilityofthenetworklayer,thesession’s layerobjectiveistohidethepossiblefailuresoftransport-levelconnectionstotheupperlayerhigher.
For this,theSessionLayerprovidesservicesthatallowtoestablishasession-connection,tosupportorderlydata exchange (including mechanisms that allow to recover from the abrupt release of an underlying transport connection),andtoreleasetheconnectioninanorderlymanner.
• thePresentationlayerwasdesignedtocopewiththedifferentwaysofrepresentinginformationoncomput- ers.
Therearemanydifferencesinthewaycomputerstoreinformation.
Somecomputersstoreintegersas 32 bits ﬁeld, others use 64 bits ﬁeld and the same problem arises with ﬂoating point number.
For textual information,thisisevenmorecomplexwiththemanydifferentcharactercodesthathavebeenused6.
The situationisevenmorecomplexwhenconsideringtheexchangeofstructuredinformationsuchasdatabase records.
Tosolvethisproblem,thePresentationlayercontainsprovidesforacommonrepresentationofthe datatransferred.
TheASN.1notationwasdesignedforthePresentationlayerandisstillusedtodaybysome protocols.
• theApplicationlayerthatcontainsthemechanismsthatdonotﬁtinneitherthePresentationnortheSession layer.
TheOSIApplicationlayerwasitselffurtherdividedinseveralgenericserviceelements.
Note: WherearethemissinglayersinTCP/IPreferencemodel?
The TCP/IP reference places the Presentation and the Session layers implicitly in the Application layer.
The mainmotivationsforsimplifyingtheupperlayersintheTCP/IPreferencemodelwerepragmatic.
MostInternet applicationsstartedasprototypesthatevolvedandwerelaterstandardised.
Manyoftheseapplicationsassumed thattheywouldbeusedtoexchangeinformationwritteninAmericanEnglishandforwhichthe7bitsUS-ASCII charactercodewassufﬁcient.
Thiswasthecaseforemail,butaswe’llseeinthenextchapter,emailwasableto evolvetosupportdifferentcharacterencodings.
Someapplicationsconsideredthedifferentdatarepresentations explicitly.
For example, ftp contained mechanisms to convert a ﬁle from one format to another and the HTML language was deﬁned to represent web pages.
On the other hand, many ISO speciﬁcations were developed by committees composed of people who did not all participate in actual implementations.
ISO spent a lot of effort analysingtherequirementsanddeﬁningasolutionthatmeetsalloftheserequirements.Unfortunately,someofthe speciﬁcationsweresocomplexthatitwasdifﬁculttoimplementthemcompletelyandthestandardisationbodies deﬁnedrecommendedproﬁlesthatcontainedtheimplementedsetsofoptions... Figure2.34: ThesevenlayersoftheOSIreferencemodel 6ThereisnowaroughconsensusforthegreateruseoftheUnicodecharacterformat.Unicodecanrepresentmorethan100,000different charactersfromtheknownwrittenlanguagesonEarth.
Maybeoneday, allcomputerswillonlyuseUnicodetorepresentalltheirstored charactersandUnicodecouldbecomethestandardformattoexchangecharacters,butwearenotyetatthisstagetoday.
24 Chapter2.
Introduction Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 2.3 Organisation of the book This document is organised according to the TCP/IP reference model and follows a top-down approach.
Most oftheclassicalnetworkingtextbookschoseabottom-upapproach, i.e.
theyﬁrstexplainedalltheelectricaland opticaldetailsofthephysicallayerthenmovedtothedatalinklayer.Thisapproachworkedwellduringtheinfancy ofcomputernetworksanduntilthelate1990s.
Atthattime,moststudentswerenotusersofcomputernetworks anditwasusefultoexplaincomputernetworksbybuildingthecorrespondingprotocolsfromthesimplest,inthe physicallayer,uptotheapplicationlayer.
Today,allstudentsareactiveusersofInternetapplications,andstarting to learn computer networking by looking at bits is not very motivating.
Starting from [KuroseRoss09], many textbooks andteachers havechosen a top-downapproach.
This approachstarts fromapplications suchas email and web that students already know and explores the different layers, starting from the application layer.
This approachworksquitewellwithtoday’sstudents.
Thetraditionalbottom-upapproachcouldinfactbeconsidered asanengineeringapproachasitstartsfromthesimplenetworkthatallowstheexchangeofbits,andexplainshow tocombinedifferentprotocolsandmechanismstobuildthemostcomplexapplications.
Thetop-downapproach could on the other hand be considered as a scientiﬁc approach.
Like biologists, it starts from an existing (man- built)systemandexploresitlayerbylayer.
Besides the top-down versus bottom-up organisation, computer networking books can either aim at having an in-depthcoverageofasmallnumberoftopics,orathavingalimitedcoverageofawiderangeoftopics.
Covering awiderangeoftopicsisinterestingforintroductorycoursesorforstudentswhodonotneedadetailedknowledge of computer networks.
It allows the students to learn a little about everything and then start from this basic knowledge later if they need to understand computer networking in more detail.
This books chose to cover, in detail,asmallernumberoftopicsthanothertextbooks.
Thisismotivatedbythefactthatcomputernetworksoften needtobepushedtotheirlimits.
Understandingthedetailsofthemainnetworkingprotocolsisimportanttobe abletofullygrasphowanetworkbehavesorextendittoprovideinnovativeservices7.
Thebookisorganisedasfollows: WeﬁrstdescribetheapplicationlayerinchapterTheapplicationLayer.
Given thelargenumberofInternet-basedapplications,itisofcourseimpossibletocoverthemallindetail.
Insteadwe focus on three types of Internet-based applications.
We ﬁrst study the Domain Name System (DNS) and then explainsomeoftheprotocolsinvolvedintheexchangeofelectronicmail.
Thediscussionoftheapplicationlayer endswithadescriptionofthekeyprotocolsoftheworldwideweb.
All these applications rely on the transport layer that is explained in chapter The transport layer.
This is a key layerintoday’snetworksasitcontainsallthemechanismsnecessarytoprovideareliabledeliveryofdataoveran unreliablenetwork.
Wecoverthetransportlayerbyﬁrstdevelopingasimplereliabletransportlayerprotocoland thenexplainthedetailsoftheTCPandUDPprotocolsusedinTCP/IPnetworks.
Afterthetransportlayer,weanalysethenetworklayerinchapterThenetworklayer.
Thisisalsoaveryimportant layerasitisresponsibleforthedeliveryofpacketsfromanysourcetoanydestinationthroughintermediaterouters.
In the network layer, we describe the two possible organisations of the network layer and the routing protocols basedonlink-stateanddistancevectors.
ThenweexplainindetailtheIPv4,IPv6,RIP,OSPFandBGPprotocols thatareactuallyusedintoday’sInternet.
The last chapter of the book is devoted to the datalink layer.
In chapter The datalink layer and the Local Area Networks,webeginbyexplainingtheprinciplesofthedatalinklayersonpoint-to-pointlinks.
Then,wefocuson theLocalAreaNetworks.
WeﬁrstdescribetheMediumAccessControlalgorithmsthatallowmultiplehoststo shareonetransmissionmedium.
Weconsiderbothopportunisticanddeterministictechniques.
Wethenexplainin detailtwotypesofLANsthatareimportantfromadeploymentviewpointtoday: EthernetandWiFi.
7Apopularquotesays,thedevilisinthedetails.Thisquotereﬂectsverywelltheoperationofmanynetworkprotocols,wherethechange ofasinglebitmayhavehugeconsequences.Incomputernetworks,understandingallthedetailsissometimesnecessary.
2.3.
Organisationofthebook 25 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 26 Chapter2.
Introduction Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor Foundation3 CHAPTER The application Layer TheApplicationLayeristhemostimportantandmostvisiblelayerincomputernetworks.
Applicationsresidein thislayerandhumanusersinteractviathoseapplicationsthroughthenetwork.
In this chapter, we ﬁrst brieﬂy describe the main principles of the application layer and focus on the two most important application models : the client-server and the peer-to-peer models.
Then, we review in detail two families of protocols that have proved to be very useful in the Internet : electronic mail and the protocols that allow access to information on the world wide web.
We also describe the Domain Name System that allows humanstouseuser-friendlynameswhilethehostsuse32bitsor128bitslongIPaddresses.
3.1 Principles Thearetwoimportantmodelsusedtoorganiseanetworkedapplication.
Theﬁrstandoldestmodelistheclient- servermodel.
Inthismodel,aserverprovidesservicestoclientsthatexchangeinformationwithit.
Thismodelis highlyasymmetrical: clientssendrequestsandserversperformactionsandreturnresponses.
Itisillustratedin theﬁgurebelow.
Figure3.1: Theclient-servermodel The client-server model was the ﬁrst model to be used to develop networked applications.
This model comes naturallyfromthemainframesandminicomputersthatweretheonlynetworkedcomputersuseduntilthe1980s.
A minicomputer is a multi-user system that is used by tens or more users at the same time.
Each user interacts withtheminicomputerbyusingaterminal.Thoseterminals,weremainlyascreen,akeyboardandacabledirectly connectedtotheminicomputer.
There are various types of servers as well as various types of clients.
A web server provides information in response to the query sent by its clients.
A print server prints documents sent as queries by the client.
An email server will forward towards their recipient the email messages sent as queries while a music server will deliver the music requested by the client.
From the viewpoint of the application developer, the client and the server applications directly exchange messages (the horizontal arrows labelled Queries and Responses in the aboveﬁgure),butinpracticethesemessagesareexchangedthankstotheunderlyinglayers(theverticalarrowsin theaboveﬁgure).
Inthischapter,wefocusonthesehorizontalexchangesofmessages.
27 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Networkedapplicationsdonotexchangerandommessages.
Inordertoensurethattheserverisabletounderstand thequeriessentbyaclient,andalsothattheclientisabletounderstandtheresponsessentbytheserver,theymust bothagreeonasetofsyntacticalandsemanticrules.
Theserulesdeﬁnetheformatofthemessagesexchangedas wellastheirordering.
Thissetofrulesiscalledanapplication-levelprotocol.
Anapplication-levelprotocolissimilartoastructuredconversationbetweenhumans.
AssumethatAlicewants toknowthecurrenttimebutdoesnothaveawatch.
IfBobpassescloseby,thefollowingconversationcouldtake place: • Alice: Hello • Bob: Hello • Alice: Whattimeisit?
• Bob: 11:55 • Alice: Thankyou • Bob: You’rewelcome SuchaconversationsucceedsifbothAliceandBobspeakthesamelanguage.
IfAlicemeetsTchangwhoonly speaks Chinese, she won’t be able to ask him the current time.
A conversation between humans can be more complex.
Forexample, assumethatBobisasecurityguardwhosedutyistoonlyallowtrustedsecretagentsto enterameetingroom.
Ifallagentsknowasecretpassword,theconversationbetweenBobandTrudycouldbeas follows: • Bob: Whatisthesecretpassword?
• Trudy: 1234 • Bob: Thisisthecorrectpassword,you’rewelcome IfAlicewantstoenterthemeetingroombutdoesnotknowthepassword,herconversationcouldbeasfollows: • Bob: Whatisthesecretpassword?
• Alice: 3.1415 • Bob: Thisisnotthecorrectpassword.
Humanconversationscanbeveryformal,e.g.
whensoldierscommunicatewiththeirhierarchy,orinformalsuch aswhenfriendsdiscuss.
Computersthatcommunicatearemoreakintosoldiersandrequirewell-deﬁnedrulesto ensure an successful exchange of information.
There are two types of rules that deﬁne how information can be exchangedbetweencomputers: • syntactical rules that precisely deﬁne the format of the messages that are exchanged.
As computers only processbits,thesyntacticalrulesspecifyhowinformationisencodedasbitstrings • organisationoftheinformationﬂow.
Formanyapplications,theﬂowofinformationmustbestructuredand thereareprecedencerelationshipsbetweenthedifferenttypesofinformation.
Inthetimeexampleabove, AlicemustgreetBobbeforeaskingforthecurrenttime.
Alicewouldnotaskforthecurrenttimeﬁrstand greetBobafterwards.
Suchprecedencerelationshipsexistinnetworkedapplicationsaswell.
Forexample, aservermustreceiveausernameandavalidpasswordbeforeacceptingmorecomplexcommandsfromits clients.
Let us ﬁrst discuss the syntactical rules.
We will later explain how the information ﬂow can be organised by analysingrealnetworkedapplications.
Application-layer protocols exchange two types of messages.
Some protocols such as those used to support electronicmailexchangemessagesexpressedasstringsorlinesofcharacters.
Asthetransportlayerallowshosts toexchangebytes,theyneedtoagreeonacommonrepresentationofthecharacters.Theﬁrstandsimplestmethod toencodecharactersistousetheASCII table.
RFC20providestheASCIItablethatisusedbymanyprotocols ontheInternet.
Forexample,thetabledeﬁnesthefollowingbinaryrepresentations: • A:1000011b • 0: 0110000b • z: 1111010b 28 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • @: 1000000b • space: 0100000b In addition, the ASCII table also deﬁnes several non-printable or control characters.
These characters were de- signedtoallowanapplicationtocontrolaprinteroraterminal.
ThesecontrolcharactersincludeCRandLF,that areusedtoterminatealine,andtheBellcharacterwhichcausestheterminaltoemitasound.
• carriagereturn(CR):0001101b • linefeed(LF):0001010b • Bell: 0000111b TheASCII charactersareencodedasasevenbitsﬁeld,buttransmittedasaneight-bitsbytewhosehighorderbit isusuallysetto0.
Bytesarealwaystransmittedstartingfromthehighorderormostsigniﬁcantbit.
Most applications exchange strings that are composed of ﬁxed or variable numbers of characters.
A common solution to deﬁne the character strings that are acceptable is to deﬁne them as a grammar using a Backus-Naur Form(BNF)suchastheAugmentedBNFdeﬁnedinRFC5234.
ABNFisasetofproductionrulesthatgenerate all valid character strings.
For example, consider a networked application that uses two commands, where the usercansupplyausernameandapassword.
TheBNFforthisapplicationcouldbedeﬁnedasshownintheﬁgure below.
Figure3.2: AsimpleBNFspeciﬁcation The example above deﬁnes several terminals and two commands : usercommand and passwordcommand.
The ALPHA terminal contains all letters in upper and lower case.
In the ALPHA rule, %x41 corresponds to ASCII charactercode41inhexadecimal,i.e.
capitalA.TheCRandLF terminalscorrespondtothecarriagereturnand linefeed control characters.
The CRLF rule concatenates these two terminals to match the standard end of line termination.
TheDIGIT terminalcontainsalldigits.
TheSPterminalcorrespondstothewhitespacecharacters.
The usercommand is composed of two strings separated by white space.
In the ABNF rules that deﬁne the messages used by Internet applications, the commands are case-insensitive.
The rule “user” corresponds to all possiblecasesofthelettersthatcomposethewordbetweenbrackets,e.g.user,uSeR,USER,usER,...Ausername contains at least one letter and up to 8 letters.
User names are case-sensitive as they are not deﬁned as a string betweenbrackets.
Thepasswordruleindicatesthatapasswordstartswithaletterandcancontainanynumberof lettersordigits.Thewhitespaceandthecontrolcharacterscannotappearinapassworddeﬁnedbytheaboverule.
Besidescharacterstrings,someapplicationsalsoneedtoexchange16bitsand32bitsﬁeldssuchasintegers.
A naivesolutionwouldhavebeentosendthe16-or32-bitsﬁeldasitisencodedinthehost’smemory.Unfortunately, therearedifferentmethodstostore16-or32-bitsﬁeldsinmemory.
SomeCPUsstorethemostsigniﬁcantbyte ofa16-bitsﬁeldintheﬁrstaddressoftheﬁeldwhileothersstoretheleastsigniﬁcantbyteatthislocation.
When networkedapplicationsrunningondifferentCPUsexchange16bitsﬁelds, therearetwopossibilitiestotransfer themoverthetransportservice: • sendthemostsigniﬁcantbytefollowedbytheleastsigniﬁcantbyte • sendtheleastsigniﬁcantbytefollowedbythemostsigniﬁcantbyte Theﬁrstpossibilitywasnamedbig-endianinanotewrittenbyCohen[Cohen1980]whilethesecondwasnamed little-endian.
Vendors of CPUs that used big-endian in memory insisted on using big-endian encoding in net- worked applications while vendors of CPUs that used little-endian recommended the opposite.
Several studies werewrittenontherelativemeritsofeachtypeofencoding, butthediscussionbecamealmostareligiousissue [Cohen1980].
Eventually,theInternetchosethebig-endianencoding,i.e.
multi-byteﬁeldsarealwaystransmit- tedbysendingthemostsigniﬁcantbyteﬁrst, RFC791referstothisencodingasthenetwork-byteorder.
Most 3.1.
Principles 29 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 libraries1usedtowritenetworkedapplicationscontainfunctionstoconvertmulti-byteﬁeldsfrommemorytothe networkbyteorderandviceversa.
Besides16and32bitwords,someapplicationsneedtoexchangedatastructurescontainingbitﬁeldsofvarious lengths.
For example, a message may be composed of a 16 bits ﬁeld followed by eight, one bit ﬂags, a 24 bits ﬁeld and two 8 bits bytes.
Internet protocol speciﬁcations will deﬁne such a message by using a representation such as the one below.
In this representation, each line corresponds to 32 bits and the vertical lines are used to delineateﬁelds.
Thenumbersabovethelinesindicatethebitpositionsinthe32-bitsword,withthehighorderbit atposition0.
Figure3.3: Messageformat Themessagementionedabovewillbetransmittedstartingfromtheupper32-bitswordinnetworkbyteorder.The ﬁrstﬁeldisencodedin16bits.
Itisfollowedbyeightonebitﬂags(A-H),a24bitsﬁeldwhosehighorderbyteis shownintheﬁrstlineandthetwoloworderbytesappearinthesecondlinefollowedbytwoonebyteﬁelds.
This ASCIIrepresentationisfrequentlyusedwhendeﬁningbinaryprotocols.
Wewilluseitforallthebinaryprotocols thatarediscussedinthisbook.
Wewilldiscussseveralexamplesofapplication-levelprotocolsinthischapter.
3.1.1 The peer-to-peer model The peer-to-peer model emerged during the last ten years as another possible architecture for networked appli- cations.
Inthetraditionalclient-servermodel,hostsacteitherasserversorasclientsandaserverservesalarge number of clients.
In the peer-to-peer model, all hosts act as both servers and clients and they play both roles.
Thepeer-to-peermodelhasbeenusedtodevelopvariousnetworkedapplications,rangingfromInternettelephony to ﬁle sharing or Internet-wide ﬁlesystems.
A detailed description of peer-to-peer applications may be found in [BYL2008].
Surveysofpeer-to-peerprotocolsandapplicationsmaybefoundin[AS2004]and[LCP2005].
3.1.2 The transport services Networkedapplicationsarebuiltontopofthetransportservice.
Asexplainedinthepreviouschapter, thereare twomaintypesoftransportservices: • theconnectionlessordatagramservice • theconnection-orientedorbyte-streamservice TheconnectionlessserviceallowsapplicationstoeasilyexchangemessagesorServiceDataUnits.OntheInternet, thisserviceisprovidedbytheUDPprotocolthatwillbeexplainedinthenextchapter.Theconnectionlesstransport serviceontheInternetisunreliable,butisabletodetecttransmissionerrors.
Thisimpliesthatanapplicationwill notreceiveanSDUthathasbeencorruptedduetotransmissionerrors.
The connectionless transport service allows networked application to exchange messages.
Several networked applicationsmayberunningatthesametimeonasinglehost.Eachoftheseapplicationsmustbeabletoexchange SDUs with remote applications.
To enable these exchanges of SDUs, each networked application running on a hostisidentiﬁedbythefollowinginformation: • thehostonwhichtheapplicationisrunning • theportnumberonwhichtheapplicationlistensforSDUs 1Forexample,thehtonl(3)(resp.ntohl(3))functionthestandardClibraryconvertsa32-bitsunsignedintegerfromthebyteorder usedbytheCPUtothenetworkbyteorder(resp.
fromthenetworkbyteordertotheCPUbyteorder).
Similarfunctionsexistinother programminglanguages.
30 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 OntheInternet,theportnumberisanintegerandthehostisidentiﬁedbyitsnetworkaddress.
Aswewillseein chapterThenetworklayertherearetwotypesofInternetAddresses: • IPversion4addressesthatare32bitswide • IPversion6addressesthatare128bitswide IPv4 addresses are usually represented by using a dotted decimal representation where each decimal number corresponds to one byte of the address, e.g.
203.0.113.56.
IPv6 addresses are usually represented as a set of hexadecimal numbersseparated bysemicolons, e.g.
2001:db8:3080:2:217:f2ff:fed6:65c0.
Today, most Internet hostshaveoneIPv4address.
AsmallfractionofthemalsohaveanIPv6address.
Inthefuture,wecanexpectthat moreandmorehostswillhaveIPv6addressesandthatsomeofthemwillnothaveanIPv4addressanymore.
A hostthatonlyhasanIPv4addresscannotcommunicatewithahosthavingonlyanIPv6address.
Theﬁgurebelow illustratestwothatareusingthedatagramserviceprovidedbyUDPonhoststhatareusingIPv4addresses.
Figure3.4: Theconnectionlessordatagramservice The second transport service is the connection-oriented service.
On the Internet, this service is often called the byte-streamserviceasitcreatesareliablebytestreambetweenthetwoapplicationsthatarelinkedbyatransport connection.
Likethedatagramservice,thenetworkedapplicationsthatusethebyte-streamserviceareidentiﬁed by the host on which they run and a port number.
These hosts can be identiﬁed by an IPv4 address, an IPv6 addressoraname.
Theﬁgurebelowillustratestwoapplicationsthatareusingthebyte-streamserviceprovided bytheTCPprotocolonIPv6hosts.
ThebytestreamserviceprovidedbyTCPisreliableandbidirectional.
Figure3.5: Theconnection-orientedorbyte-streamservice 3.1.
Principles 31 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 3.2 Application-level protocols Manyprotocolshavebeendeﬁnedfornetworkedapplications.
Inthissection,wedescribesomeoftheimportant applicationsthatareusedontheInternet.
WeﬁrstexplaintheDomainNameSystem(DNS)thatenableshoststo beidentiﬁedbyhuman-friendlynamesinsteadoftheIPv4orIPv6addressesthatareusedbythenetwork.
Then, we describe the operation of electronic mail, one of the ﬁrst killer applications on the global Internet, and the protocolsusedonworldwideweb.
3.2.1 The Domain Name System IntheearlydaysoftheInternet,therewereonlyafewnumberofhosts(mainlyminicomputers)connectedtothe network.
The most popular applications were remote login and ﬁle transfer.
By 1983, there were already ﬁve hundred hosts attached to the Internet.
Each of these hosts were identiﬁed by a unique IPv4 address.
Forcing human users to remember the IPv4 addresses of the remote hosts that they want to use was not user-friendly.
Human users prefer to remember names, and use them when needed.
Using names as aliases for addresses is a commontechniqueinComputerScience.
Itsimpliﬁesthedevelopmentofapplicationsandallowsthedeveloper toignorethelowleveldetails.
Forexample,byusingaprogramminglanguageinsteadofwritingmachinecode, adevelopercanwritesoftwarewithoutknowingwhetherthevariablesthatitusesarestoredinmemoryorinside registers.
Becausenamesareatahigherlevelthanaddresses,theyallow(bothintheexampleofprogrammingabove,andon theInternet)totreataddressesasmeretechnicalidentiﬁers,whichcanchangeatwill.
Onlythenamesarestable.
Ontoday’s Internet, where switchingtoanother ISPmeans changingyour IPaddresses, the user-friendlinessof domain names is less important (they are not often typed by users) but their stability remains a very important, maybetheirmostimportantproperty.
Theﬁrstsolutionthatallowedapplicationstousenameswasthehosts.txt ﬁle.
Thisﬁleissimilartothesymbol tablefoundincompiledcode.ItcontainsthemappingbetweenthenameofeachInternethostanditsassociatedIP address2.
ItwasmaintainedbySRIInternationalthatcoordinatedtheNetworkInformationCenter(NIC).When anewhostwasconnectedtothenetwork,thesystemadministratorhadtoregisteritsnameandIPaddressatthe NIC.TheNICupdatedthehosts.txt ﬁleonitsserver.
AllInternethostsregularlyretrievedtheupdatedhosts.txt ﬁle from the server maintained by SRI.
This ﬁle was stored at a well-known location on each Internet host (see RFC952)andnetworkedapplicationscoulduseittoﬁndtheIPaddresscorrespondingtoaname.
Ahosts.txt ﬁlecanbeusedwhenthereareuptoafewhundredhostsonthenetwork.
However, itisclearlynot suitable for a network containing thousands or millions of hosts.
A key issue in a large network is to deﬁne a suitablenamingscheme.
TheARPANetinitiallyusedaﬂatnamingspace, i.e.
eachhostwasassignedaunique name.
Tolimitcollisionsbetweennames,thesenamesusuallycontainedthenameoftheinstitutionandasufﬁxto identifythehostinsidetheinstitution(akindofpoorman’shierarchicalnamingscheme).
OntheARPANetfew institutionshadseveralhostsconnectedtothenetwork.
However, the limitations of a ﬂat naming scheme became clear before the end of the ARPANet and RFC 819 proposedahierarchicalnamingscheme.
WhileRFC819discussedthepossibilityoforganisingthenamesasa directedgraph,theInternetoptedeventuallyforatreestructurecapableofcontainingallnames.
Inthistree,the top-level domains are those that are directly attached to the root.
The ﬁrst top-level domain was .arpa 3.
This top-level name was initially added as a sufﬁx to the names of the hosts attached to the ARPANet and listed in the hosts.txt ﬁle.
In 1984, the .gov, .edu, .com, .mil and .org generic top-level domain names were added and RFC 1032 proposed the utilisation of the two letter ISO-3166 country codes as top-level domain names.
Since ISO-3166deﬁnesatwolettercodeforeachcountryrecognisedbytheUnitedNations,thisallowedallcountries toautomaticallyhaveatop-leveldomain.
Thesedomainsinclude.beforBelgium,.frforFrance,.usfortheUSA, .ieforIrelandor.tvforTuvalu, agroupofsmallislandsinthePaciﬁcand.tmforTurkmenistan.
Today, theset oftop-leveldomain-namesismanagedbytheInternetCorporationforAssignedNamesandNumbers(ICANN).
Recently,ICANNaddedadozenofgenerictop-leveldomainsthatarenotrelatedtoacountryandthe.cattop-level domain has been registered for the Catalan language.
There are ongoing discussions within ICANN to increase thenumberoftop-leveldomains.
2 The hosts.txt ﬁle is not maintained anymore.
A historical snapshot retrieved on April 15th, 1984 is available from http://ftp.univie.ac.at/netinfo/netinfo/hosts.txt 3Seehttp://www.donelan.com/dnstimeline.htmlforatimelineofDNSrelateddevelopments.
32 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Eachtop-leveldomainismanagedbyanorganisationthatdecideshowsub-domainnamescanberegistered.Most top-level domain names use a ﬁrst-come ﬁrst served system, and allow anyone to register domain names, but therearesomeexceptions.
Forexample,.govisreservedfortheUSgovernment,.intisreservedforinternational organisationsandnamesinthe.caaremainlyreservedforcompaniesoruserswhoarepresentinCanada.
Figure3.6: Thetreeofdomainnames RFC1035recommendedthefollowingBNFforfullyqualiﬁeddomainnames,toallowhostnameswithasyntax whichworkswithallapplications(thedomainnamesthemselveshaveamuchrichersyntax).
Figure3.7: BNFofthefullyqualiﬁedhostnames Thisgrammarspeciﬁesthatahostnameisanorderedlistoflabelsseparatedbythedot(.)
character.
Eachlabel can contain letters, numbers and the hyphen character (-) 4.
Fully qualiﬁed domain names are read from left to right.
Theﬁrstlabelisahostnameoradomainnamefollowedbythehierarchyofdomainsandendingwiththe rootimplicitlyattheright.
Thetop-leveldomainnamemustbeoneoftheregisteredTLDs5.
Forexample,inthe aboveﬁgure,www.whitehouse.govcorrespondstoahostnamedwwwinsidethewhitehousedomainthatbelongs tothegovtop-leveldomain.
info.ucl.ac.becorrespondstotheinfodomaininsidetheucldomainthatisincluded intheacsub-domainofthebetop-leveldomain.
This hierarchical naming scheme is a key component of the Domain Name System (DNS).
The DNS is a dis- tributeddatabasethatcontainsmappingsbetweenfullyqualiﬁeddomainnamesandIPaddresses.
TheDNSuses theclient-servermodel.Theclientsarehoststhatneedtoretrievethemappingforagivenname.Eachnameserver storespartofthedistributeddatabaseandanswersthequeriessentbyclients.Thereisatleastonenameserverthat isresponsibleforeachdomain.
Intheﬁgurebelow,domainsarerepresentedbycirclesandtherearethreehosts insidedomaindom(h1,h2andh3)andthreehostsinsidedomaina.sdom1.dom.
Asshownintheﬁgurebelow,a sub-domainmaycontainbothhostnamesandsub-domains.
Figure3.8: Asimpletreeofdomainnames 4Thisspeciﬁcationevolvedlatertosupportdomainnameswrittenbyusingothercharactersetsthanus-ASCIIRFC5890.Thisextension isimportanttosupportlanguagesotherthanEnglish,butadetaileddiscussionisoutsidethescopeofthisdocument.
5Theofﬁciallistoftop-leveldomainnamesismaintainedby:term:‘IANAathttp://data.iana.org/TLD/tlds-alpha-by-domain.txtAdditional informationaboutthesedomainsmaybefoundathttp://en.wikipedia.org/wiki/List_of_Internet_top-level_domains 3.2.
Application-levelprotocols 33 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Anameserverthatisresponsiblefordomaindomcandirectlyanswerthefollowingqueries: • theIPaddressofanyhostresidingdirectlyinsidedomaindom(e.g.
h2.domintheﬁgureabove) • the nameserver(s) that are responsible for any direct sub-domain of domain dom (i.e.
sdom1.dom and sdom2.domintheﬁgureabove,butnotz.sdom1.dom) Toretrievethemappingforhosth2.dom,aclientsendsitsquerytothenameserverthatisresponsiblefordomain .dom.
Thenameserverdirectlyanswersthequery.
Toretrieveamappingforh3.a.sdom1.domaDNSclientﬁrst sendsaquerytothenameserverthatisresponsibleforthe.domdomain.
Thisnameserverreturnsthenameserver that is responsible for the sdom1.dom domain.
This nameserver can now be contacted to obtain the nameserver thatisresponsibleforthea.sdom1.domdomain.
Thisnameservercanbecontactedtoretrievethemappingforthe h3.a.sdom1.domname.Thankstothisorganisationofthenameservers,itispossibleforaDNSclienttoobtainthe mappingofanyhostinsidethe.domdomainoranyofitssubdomains.
ToensurethatanyDNSclientwillbeable toresolveanyfullyqualiﬁeddomainname,therearespecialnameserversthatareresponsiblefortherootofthe domainnamehierarchy.
Thesenameserversarecalledrootnameserver.
Therearecurrentlyaboutadozenroot nameservers6.
Each root nameserver maintains the list 7 of all the nameservers that are responsible for each of the top-level domain names and their IP addresses 8.
All root nameservers are synchronised and provide the same answers.
By querying any of the root nameservers, a DNS client can obtain the nameserver that is responsible for any top-level-domainname.
Fromthisnameserver,itispossibletoresolveanydomainname.
To be able to contact the root nameservers, each DNS client must know their IP addresses.
This implies, that DNS clients must maintain an up-to-date list of the IP addresses of the root nameservers 9.
Without this list, it is impossible to contact the root nameservers.
Forcing all Internet hosts to maintain the most recent version of this list would be difﬁcult from an operational point of view.
To solve this problem, the designers of the DNS introduced a special type of DNS server : the DNS resolvers.
A resolver is a server that provides the name resolutionserviceforasetofclients.
Anetworkusuallycontainsafewresolvers.
Eachhostinthesenetworksis conﬁguredtosendallitsDNSqueriesviaoneofitslocalresolvers.
Thesequeriesarecalledrecursivequeriesas theresolvermustrecursethroughthehierarchyofnameserverstoobtaintheanswer.
DNSresolvershaveseveraladvantagesoverlettingeachInternethostquerydirectlynameservers.
Firstly,regular Internethostsdonotneedtomaintaintheup-to-datelistoftheIPaddressesoftherootservers.
Secondly,regular Internet hosts do not need to send queries to nameservers all over the Internet.
Furthermore, as a DNS resolver serves a large number of hosts, it can cache the received answers.
This allows the resolver to quickly return answersforpopularDNSqueriesandreducestheloadonallDNSservers[JSBM2002].
The last component of the Domain Name System is the DNS protocol.
The DNS protocol runs above both the datagram service and the bytestream services.
In practice, the datagram service is used when short queries and responsesareexchanged,andthebytestreamserviceisusedwhenlongerresponsesareexpected.
Inthissection, we will only discuss the utilisation of the DNS protocol above the datagram service.
This is the most frequent utilisationoftheDNS.
DNS messages are composed of ﬁve parts that are named sections in RFC 1035.
The ﬁrst three sections are mandatory and the last two sections are optional.
The ﬁrst section of a DNS message is its Header.
It contains information about the type of message and the content of the other sections.
The second section contains the Questionsenttothenameserverorresolver.
ThethirdsectioncontainstheAnswertotheQuestion.
Whenaclient sendsaDNSquery,theAnswersectionisempty.
Thefourthsection,namedAuthority,containsinformationabout theserversthatcanprovideanauthoritativeanswerifrequired.
Thelastsectioncontainsadditionalinformation thatissuppliedbytheresolverorserverbutwasnotrequestedinthequestion.
TheheaderofDNSmessagesiscomposedof12bytesanditsstructureisshownintheﬁgurebelow.
TheID(identiﬁer)isa16-bitsrandomvaluechosenbytheclient.
WhenaclientsendsaquestiontoaDNSserver, itremembersthequestionanditsidentiﬁer.Whenaserverreturnsananswer,itreturnsintheIDﬁeldtheidentiﬁer 6 Therearecurrently13rootservers.
Inpractice,someoftheserootserversarethemselvesimplementedasasetofdistinctphysical servers.Seehttp://www.root-servers.org/formoreinformationaboutthephysicallocationoftheseservers.
7Acopyoftheinformationmaintainedbyeachrootnameserverisavailableathttp://www.internic.net/zones/root.zone 8 UntilFebruary2008, therootDNSserversonlyhadIPv4addresses.
IPv6addresseswereaddedtotherootDNSserversslowlyto avoidcreatingproblemsasdiscussedinhttp://www.icann.org/en/committees/security/sac018.pdfIn2010,severalDNSrootserversarestill notreachablebyusingIPv6.
9ThecurrentlistoftheIPaddressesoftherootnameserversismaintainedathttp://www.internic.net/zones/named.root.TheseIPaddresses arestableandrootnameserversseldomchangetheirIPaddresses.DNSresolversmusthowevermaintainanup-to-datecopyofthisﬁle.
34 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure3.9: DNSheader chosenbytheclient.
Thankstothisidentiﬁer, theclientcanmatchthereceivedanswerwiththequestionthatit sent.
TheQRﬂagissetto0inDNSqueriesand1inDNSanswers.
TheOpcodeisusedtospecifythetypeofquery.
Forinstance,astandardqueryiswhenaclientsendsanameandtheserverreturnsthecorrespondingdataandan updaterequestiswhentheclientsendsanameandnewdataandtheserverthenupdatesitsdatabase.
TheAAbitissetwhentheserverthatsenttheresponsehasauthorityforthedomainnamefoundinthequestion section.
IntheoriginalDNSdeployments,twotypesofserverswereconsidered: authoritativeserversandnon- authoritativeservers.
Theauthoritativeserversaremanagedbythesystemadministratorsresponsibleforagiven domain.
Theyalwaysstorethemostrecentinformationaboutadomain.
Non-authoritativeserversareserversor resolversthatstoreDNSinformationaboutexternaldomainswithoutbeingmanagedbytheownersofadomain.
Theymaythusprovideanswersthatareoutofdate.
Fromasecuritypointofview,theauthoritativebitisnotan absoluteindicationaboutthevalidityofananswer.
SecuringtheDomainNameSystemisacomplexproblemthat wasonlyaddressedsatisfactorilyrecentlybytheutilisationofcryptographicsignaturesintheDNSSECextensions toDNSdescribedinRFC4033.
However,theseextensionsareoutsidethescopeofthischapter.
The RD (recursion desired) bit is set by a client when it sends a query to a resolver.
Such a query is said to be recursivebecausetheresolverwillrecursethroughtheDNShierarchytoretrievetheansweronbehalfoftheclient.
In the past, all resolvers were conﬁgured to perform recursive queries on behalf of any Internet host.
However, thisexposestheresolverstoseveralsecurityrisks.
Thesimplestoneisthattheresolvercouldbecomeoverloaded byhavingtoomanyrecursivequeriestoprocess.
Asofthiswriting,mostresolvers10onlyallowrecursivequeries fromclientsbelongingtotheircompanyornetworkanddiscardallotherrecursivequeries.
TheRAbitindicates whethertheserversupportsrecursion.
TheRCODE isusedtodistinguishbetweendifferenttypesoferrors.
See RFC 1035 for additional details.
The last four ﬁelds indicate the size of the Question, Answer, Authority and AdditionalsectionsoftheDNSmessage.
ThelastfoursectionsoftheDNSmessagecontainResourceRecords(RR).AllRRshavethesametoplevelformat shownintheﬁgurebelow.
InaResourceRecord(RR),theNameindicatesthenameofthenodetowhichthisresourcerecordpertains.
The twobytesTypeﬁeldindicatethetypeofresourcerecord.
TheClassﬁeldwasusedtosupporttheutilisationofthe DNSinotherenvironmentsthantheInternet.
TheTTLﬁeldindicatesthelifetimeoftheResourceRecordinseconds.
Thisﬁeldissetbytheserverthatreturns ananswerandindicatesforhowlongaclientoraresolvercanstoretheResourceRecordinsideitscache.
Along TTL indicatesastableRR.SomecompaniesuseshortTTL valuesformobilehostsandalsoforpopularservers.
10SomeDNSresolversallowanyhosttosendqueries.OpenDNSandGoogleDNSareexampleofopenresolvers.
3.2.
Application-levelprotocols 35 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure3.10: DNSResourceRecords Forexample,awebhostingcompanythatwantstospreadtheloadoverapoolofhundredserverscanconﬁgure itsnameserverstoreturndifferentanswerstodifferentclients.
IfeachanswerhasasmallTTL,theclientswillbe forcedtosendDNSqueriesregularly.
Thenameserverwillreplytothesequeriesbysupplyingtheaddressofthe lessloadedserver.
TheRDLengthﬁeldisthelengthoftheRDataﬁeldthatcontainstheinformationofthetypespeciﬁedintheType ﬁeld.
SeveraltypesofDNSRRareusedinpractice.
TheAtypeisusedtoencodetheIPv4addressthatcorrespondsto thespeciﬁedname.
TheAAAAtypeisusedtoencodetheIPv6addressthatcorrespondstothespeciﬁedname.
A NSrecordcontainsthenameoftheDNSserverthatisresponsibleforagivendomain.
Forexample,aqueryfor theArecordassociatedtothewww.ietf.orgnamereturnsthefollowinganswer.
This answer contains several pieces of information.
First, the name www.ietf.org is associated to IP address 64.170.98.32.
Second,theietf.orgdomainismanagedbysixdifferentnameservers.
Threeofthesenameservers are reachable via IPv4 and IPv6.
Two of them are not reachable via IPv6 and ns0.ietf.org is only reachable via IPv6.
A query for the AAAA record associated to www.ietf.org returns 2001:1890:1112:1::20 and the same authorityandadditionalsections.
CNAME(orcanonicalnames)areusedtodeﬁnealiases.
Forexamplewww.example.comcouldbeaCNAMEfor pc12.example.comthatistheactualnameoftheserveronwhichthewebserverforwww.example.comruns.
Note: ReverseDNSandin-addr.arpa TheDNSismainlyusedtoﬁndtheIPaddressthatcorrespondtoagivenname.
However,itissometimesuseful toobtainthenamethatcorrespondstoanIPaddress.
ThisdonebyusingthePTR(pointer)RR.TheRDatapart ofaPTRRRcontainsthenamewhiletheNamepartoftheRRcontainstheIPaddressencodedinthein-addr.arpa domain.
IPv4 addresses are encoded in the in-addr.arpa by reversing the four digits that compose the dotted decimalrepresentationoftheaddress.
Forexample,considerIPv4address192.0.2.11.
Thehostnameassociated to this address can be found by requesting the PTR RR that corresponds to 11.2.0.192.in-addr.arpa.
A similar solutionisusedtosupportIPv6addresses,seeRFC3596.
36 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure3.11: QueryfortheArecordofwww.ietf.org An important point to note regarding the Domain Name System is its extensibility.
Thanks to the Type and RDLengthﬁelds,theformatoftheResourceRecordscaneasilybeextended.Furthermore,aDNSimplementation that receives a new Resource Record that it does not understand can ignore the record while still being able to processtheotherpartsofthemessage.
Thisallows,forexample,aDNSserverthatonlysupportsIPv4toignore theIPv6addresseslistedintheDNSreplyforwww.ietf.orgwhilestillbeingabletocorrectlyparsetheResource Recordsthatitunderstands.
ThisextensibilityallowedtheDomainNameSystemtoevolveovertheyearswhile stillpreservingthebackwardcompatibilitywithalreadydeployedDNSimplementations.
3.2.2 Electronic mail Electronicmail,oremail,isaverypopularapplicationincomputernetworkssuchastheInternet.
Emailappeared in the early 1970s and allows users to exchange text based messages.
Initially, it was mainly used to exchange shortmessages,butovertheyearsitsusagehasgrown.
Itisnownotonlyusedtoexchangesmall,butalsolong messagesthatcanbecomposedofseveralpartsaswewillseelater.
Before looking at the details of Internet email, let us consider a simple scenario illustrated in the ﬁgure below, whereAlicesendsanemailtoBob.
Alicepreparesheremailbyusinganemailclientsandsendsittoheremail server.
Alice’semailserverextractsBob’saddressfromtheemailanddeliversthemessagetoBob’sserver.
Bob retrieves Alice’s message on his server and reads it by using his favourite email client or through his webmail interface.
Figure3.12: SimpliﬁedarchitectureoftheInternetemail Theemailsystemthatweconsiderinthisbookiscomposedoffourcomponents: • amessageformat,thatdeﬁneshowvalidemailmessagesareencoded • protocols,thatallowhostsandserverstoexchangeemailmessages 3.2.
Application-levelprotocols 37 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • clientsoftware,thatallowsuserstoeasilycreateandreademailmessages • software,thatallowsserverstoefﬁcientlyexchangeemailmessages Wewillﬁrstdiscusstheformatofemailmessagesfollowedbytheprotocolsthatareusedontoday’sInternetto exchangeandretrieveemails.
Otheremailsystemshavebeendevelopedinthepast[Bush1993][Genilloud1990] [GC2000], but today most email solutions have migrated to the Internet email.
Information about the software thatisusedtocomposeanddeliveremailsmaybefoundonwikipediaamongothers, forbothemailclientsand emailservers.
MoredetailedinformationaboutthefullInternetMailArchitecturemaybefoundinRFC5598.
Emailmessages,likepostalmail,arecomposedoftwoparts: • aheaderthatplaysthesameroleastheletterheadinregularmail.
Itcontainsmetadataaboutthemessage.
• thebodythatcontainsthemessageitself.
EmailmessagesareentirelycomposedoflinesofASCIIcharacters.
Eachlinecancontainupto998characters and is terminated by the CR and LF control characters RFC 5322.
The lines that compose the header appear beforethemessagebody.
Anemptyline,containingonlytheCRandLFcharacters,markstheendoftheheader.
Thisisillustratedintheﬁgurebelow.
Figure3.13: Thestructureofemailmessages Theemailheadercontainsseverallinesthatallbeginwithakeywordfollowedbyacolonandadditionalinforma- tion.
TheformatofemailmessagesandthedifferenttypesofheaderlinesaredeﬁnedinRFC5322.
Twoofthese headerlinesaremandatoryandmustappearinallemailmessages: • The sender address.
This header line starts with From:.
This contains the (optional) name of the sender followed by its email address between < and >.
Email addresses are always composed of a username followedbythe@signandadomainname.
• Thedate.
ThisheaderlinestartswithDate:.
RFC5322preciselydeﬁnestheformatusedtoencodeadate.
Otherheaderlinesappearinmostemailmessages.
TheSubject:headerlineallowsthesendertoindicatethetopic discussedintheemail.
Threetypesofheaderlinescanbeusedtospecifytherecipientsofamessage: • the To: header line contains the email addresses of the primary recipients of the message 11 .
Several addressescanbeseparatedbyusingcommas.
• thecc: headerlineisusedbythesendertoprovidealistofemailaddressesthatmustreceiveacarboncopy ofthemessage.
Severaladdressescanbelistedinthisheaderline,separatedbycommas.
Allrecipientsof theemailmessagereceivetheTo: andcc: headerlines.
• thebcc: headerlineisusedbythesendertoprovidealistofcommaseparatedemailaddressesthatmust receive a blind carbon copy of the message.
The bcc: header line is not delivered to the recipients of the emailmessage.
AsimpleemailmessagecontainingtheFrom:,To:,Subject:andDate:headerlinesandtwolinesofbodyisshown below.
11ItcouldbesurprisingthattheTo:isnotmandatoryinsideanemailmessage.Whilemostemailmessageswillcontainthisheaderlinean emailthatdoesnotcontainaTo:headerlineandthatreliesonthebcc:tospecifytherecipientisvalidaswell.
38 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 From: Bob Smith <Bob@machine.example> To: Alice Doe <alice@example.net>, Alice Smith <Alice@machine.example> Subject: Hello Date: Mon, 8 Mar 2010 19:55:06 -0600 This is the "Hello world" of email messages.
This is the second line of the body NotetheemptylineaftertheDate:headerline;thisemptylinecontainsonlytheCRandLFcharacters,andmarks theboundarybetweentheheaderandthebodyofthemessage.
SeveralotheroptionalheaderlinesaredeﬁnedinRFC5322andelsewhere12.
Furthermore,manyemailclients and servers deﬁne their own header lines starting from X-.
Several of the optional header lines deﬁned in RFC 5322areworthbeingdiscussedhere: • the Message-Id: header line is used to associate a “unique” identiﬁer to each email.
Email identiﬁers are usuallystructuredlikestring@domainwherestringisauniquecharacterstringorsequencenumberchosen by the sender of the email and domain the domain name of the sender.
Since domain names are unique, a host can generate globally unique message identiﬁers concatenating a locally unique identiﬁer with its domainname.
• theIn-reply-to: isusedwhenamessagewascreatedinreplytoapreviousmessage.
Inthiscase,theendof theIn-reply-to: linecontainstheidentiﬁeroftheoriginalmessage.
• theReceived: headerlineisusedwhenanemailmessageisprocessedbyseveralserversbeforereachingits destination.
EachintermediateemailserveraddsaReceived: headerline.
Theseheaderlinesareusefulto debugproblemsindeliveringemailmessages.
The ﬁgure below shows the header lines of one email message.
The message originated at a host named wira.ﬁrstpr.com.au and was received by smtp3.sgsi.ucl.ac.be.
The Received: lines have been wrapped for read- ability.
Received: from smtp3.sgsi.ucl.ac.be (Unknown [10.1.5.3]) by mmp.sipr-dc.ucl.ac.be (Sun Java(tm) System Messaging Server 7u3-15.01 64bit (built Feb 12 2010)) with ESMTP id <0KYY00L85LI5JLE0@mmp.sipr-dc.ucl.ac.be>; Mon, 08 Mar 2010 11:37:17 +0100 (CET) Received: from mail.ietf.org (mail.ietf.org [64.170.98.32]) by smtp3.sgsi.ucl.ac.be (Postfix) with ESMTP id B92351C60D7; Mon, 08 Mar 2010 11:36:51 +0100 (CET) Received: from [127.0.0.1] (localhost [127.0.0.1]) by core3.amsl.com (Postfix) with ESMTP id F066A3A68B9; Mon, 08 Mar 2010 02:36:38 -0800 (PST) Received: from localhost (localhost [127.0.0.1]) by core3.amsl.com (Postfix) with ESMTP id A1E6C3A681B for <rrg@core3.amsl.com>; Mon, 08 Mar 2010 02:36:37 -0800 (PST) Received: from mail.ietf.org ([64.170.98.32]) by localhost (core3.amsl.com [127.0.0.1]) (amavisd-new, port 10024) with ESMTP id erw8ih2v8VQa for <rrg@core3.amsl.com>; Mon, 08 Mar 2010 02:36:36 -0800 (PST) Received: from gair.firstpr.com.au (gair.firstpr.com.au [150.101.162.123]) by core3.amsl.com (Postfix) with ESMTP id 03E893A67ED for <rrg@irtf.org>; Mon, 08 Mar 2010 02:36:35 -0800 (PST) Received: from [10.0.0.6] (wira.firstpr.com.au [10.0.0.6]) by gair.firstpr.com.au (Postfix) with ESMTP id D0A49175B63; Mon, 08 Mar 2010 21:36:37 +1100 (EST) Date: Mon, 08 Mar 2010 21:36:38 +1100 From: Robin Whittle <rw@firstpr.com.au> Subject: Re: [rrg] Recommendation and what happens next In-reply-to: <C7B9C21A.4FAB%tony.li@tony.li> To: RRG <rrg@irtf.org> Message-id: <4B94D336.7030504@firstpr.com.au> 12Thelistofallstandardemailheaderlinesmaybefoundathttp://www.iana.org/assignments/message-headers/message-header-index.html 3.2.
Application-levelprotocols 39 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Message content removed Initially,emailwasusedtoexchangesmallmessagesofASCIItextbetweencomputerscientists.
However,with the growth of the Internet, supporting only ASCII text became a severe limitation for two reasons.
First of all, non-English speakers wanted to write emails in their native language that often required more characters than those of the ASCII character table.
Second, many users wanted to send other content than just ASCII text by emailsuchasbinaryﬁles,imagesorsound.
Tosolvethisproblem,theIETFdevelopedtheMultipurposeInternetMailExtensions(MIME).Theseextensions werecarefullydesignedtoallowInternetemailtocarrynon-ASCIIcharactersandbinaryﬁleswithoutbreaking theemailserversthatweredeployedatthattime.
ThisrequirementforbackwardcompatibilityforcedtheMIME designerstodevelopextensionstotheexistingemailmessageformatRFC822insteadofdeﬁningacompletely newformatthatwouldhavebeenbettersuitedtosupportthenewtypesofemails.
RFC2045deﬁnesthreenewtypesofheaderlinestosupportMIME: • The MIME-Version: header indicates the version of the MIME speciﬁcation that was used to encode the emailmessage.
ThecurrentversionofMIMEis1.0.
OtherversionsofMIMEmaybedeﬁnedinthefuture.
Thankstothisheaderline, thesoftwarethatprocessesemailmessageswillbeabletoadapttotheMIME versionusedtoencodethemessage.
Messagesthatdonotcontainthisheaderaresupposedtobeformatted accordingtotheoriginalRFC822speciﬁcation.
• TheContent-Type: headerlineindicatesthetypeofdatathatiscarriedinsidethemessage(seebelow) • TheContent-Transfer-Encoding: headerlineisusedtospecifyhowthemessagehasbeenencoded.
When MIMEwasdesigned,someemailserverswereonlyabletoprocessmessagescontainingcharactersencoded usingthe7bitsASCIIcharacterset.
MIMEallowstheutilisationofothercharacterencodings.
Insidetheemailheader,theContent-Type:headerlineindicateshowtheMIMEemailmessageisstructured.RFC 2046deﬁnestheutilisationofthisheaderline.
ThetwomostcommonstructuresforMIMEmessagesare: • Content-Type: multipart/mixed.
This header line indicates that the MIME message contains several inde- pendentparts.
Forexample,suchamessagemaycontainapartinplaintextandabinaryﬁle.
• Content-Type: multipart/alternative.
This header line indicates that the MIME message contains several representationsofthesameinformation.
Forexample,amultipart/alternativemessagemaycontainbotha plaintextandanHTMLversionofthesametext.
To support these two types of MIME messages, the recipient of a message must be able to extract the different partsfromthemessage.
InRFC822,anemptylinewasusedtoseparatetheheaderlinesfromthebody.
Usingan emptylinetoseparatethedifferentpartsofanemailbodywouldbedifﬁcultasthebodyofemailmessagesoften containsoneormoreemptylines.
Anotherpossibleoptionwouldbetodeﬁneaspecialline,e.g.
*-LAST_LINE-* tomarktheboundarybetweentwopartsofaMIMEmessage.
Unfortunately,thisisnotpossibleassomeemails maycontainthisstringintheirbody(e.g.
emailssenttostudentstoexplaintheformatofMIMEmessages).
To solve this problem, the Content-Type: header line contains a second parameter that speciﬁes the string that has been used by the sender of the MIME message to delineate the different parts.
In practice, this string is often chosenrandomlybythemailclient.
Theemailmessagebelow,copiedfromRFC2046showsaMIMEmessagecontainingtwopartsthatarebothin plaintextandencodedusingtheASCIIcharacterset.
ThestringsimpleboundaryisdeﬁnedintheContent-Type: headerasthemarkerfortheboundarybetweentwosuccessiveparts.
AnotherexampleofMIMEmessagesmay befoundinRFC2046.
Date: Mon, 20 Sep 1999 16:33:16 +0200 From: Nathaniel Borenstein <nsb@bellcore.com> To: Ned Freed <ned@innosoft.com> Subject: Test MIME-Version: 1.0 Content-Type: multipart/mixed; boundary="simple boundary" preamble, to be ignored --simple boundary Content-Type: text/plain; charset=us-ascii 40 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 First part --simple boundary Content-Type: text/plain; charset=us-ascii Second part --simple boundary TheContent-Type: headercanalsobeusedinsideaMIMEpart.
Inthiscase,itindicatesthetypeofdataplaced inthispart.
Eachdatatypeisspeciﬁedasatypefollowedbyasubtype.
Adetaileddescriptionmaybefoundin RFC2046.
SomeofthemostpopularContent-Type: headerlinesare: • text.
The message part contains information in textual format.
There are several subtypes : text/plain for regular ASCII text, text/html deﬁned in RFC 2854 for documents in HTML format or the text/enriched formatdeﬁnedinRFC1896.
TheContent-Type: headerlinemaycontainasecondparameterthatspeciﬁes the character set used to encode the text.
charset=us-ascii is the standard ASCII character table.
Other frequentcharactersetsincludecharset=UTF8orcharset=iso-8859-1.
Thelistofstandardcharactersetsis maintainedbyIANA • image.
Themessagepartcontainsabinaryrepresentationofanimage.
Thesubtypeindicatestheformatof theimagesuchasgif,jpgorpng.
• audio.
Themessagepartcontainsanaudioclip.
Thesubtypeindicatestheformatoftheaudiocliplikewav ormp3 • video.
Themessagepartcontainsavideoclip.
Thesubtypeindicatestheformatofthevideocliplikeavior mp4 • application.
Themessagepartcontainsbinaryinformationthatwasproducedbytheparticularapplication listed as the subtype.
Email clients use the subtype to launch the application that is able to decode the receivedbinaryinformation.
Note: FromASCIItoUnicode Theﬁrstcomputersuseddifferenttechniquestorepresentcharactersinmemoryandondisk.
Duringthe1960s, computers began to exchange information via tape or telephone lines.
Unfortunately, each vendor had its own proprietarycharactersetandexchangingdatabetweencomputersfromdifferentvendorswasoftendifﬁcult.
The 7bitsASCIIcharactertableRFC20setwasadoptedbyseveralvendorsandbymanyInternetprotocols.However, ASCIIbecameaproblemwiththeinternationalisationoftheInternetandthedesireofmoreandmoreuserstouse charactersetsthatsupporttheirownwrittenlanguage.
Aﬁrstattemptatsolvingthisproblemwasthedeﬁnition oftheISO-8859charactersetsbyISO.Thisfamilyofstandardsspeciﬁedvariouscharactersetsthatallowedthe representationofmanyEuropeanwrittenlanguagesbyusing8bitscharacters.
Unfortunately,an8-bitscharacter setisnotsufﬁcienttosupportsomewidelyusedlanguages,suchasthoseusedinAsiancountries.
Fortunately,at theendofthe1980s,severalcomputerscientistsproposedtodevelopastandardthatsupportsallwrittenlanguages used on Earth today.
The Unicode standard [Unicode] has now been adopted by most computer and software vendors.
Forexample, JavausesUnicodenativelytomanipulatecharacters, PythoncanhandlebothASCIIand Unicodecharacters.
InternetapplicationsareslowlymovingtowardscompletesupportfortheUnicodecharacter sets,butmovingfromASCIItoUnicodeisanimportantchangethatcanhaveahugeimpactoncurrentdeployed implementations.
Seeforexample,theworktocompletelyinternationaliseemailRFC4952anddomainnames RFC5890.
ThelastMIMEheaderlineisContent-Transfer-Encoding:.ThisheaderlineisusedaftertheContent-Type:header line,withinamessagepart,andspeciﬁeshowthemessageparthasbeenencoded.
Thedefaultencodingistouse 7bitsASCII.Themostfrequentencodingsarequoted-printableandBase64.
Bothsupportencodingasequence ofbytesintoasetofASCIIlinesthatcanbesafelytransmittedbyemailservers.
quoted-printableisdeﬁnedin RFC2045.
Webrieﬂydescribebase64whichisdeﬁnedinRFC2045andRFC4648.
Base64dividesthesequenceofbytestobeencodedintogroupsofthreebytes(withthelastgrouppossiblybeing partiallyﬁlled).
Eachgroupofthreebytesisthendividedintofoursix-bitﬁeldsandeachsixbitﬁeldisencoded asacharacterfromthetablebelow.
3.2.
Application-levelprotocols 41 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Value Encoding Value Encoding Value Encoding Value Encoding 0 A 17 R 34 i 51 z 1 B 18 S 35 j 52 0 2 C 19 T 36 k 53 1 3 D 20 U 37 l 54 2 4 E 21 V 38 m 55 3 5 F 22 W 39 n 56 4 6 G 23 X 40 o 57 5 7 H 24 Y 41 p 58 6 8 I 25 Z 42 q 59 7 9 J 26 a 43 r 60 8 10 K 27 b 44 s 61 9 11 L 28 c 45 t 62 + 12 M 29 d 46 u 63 / 13 N 30 e 47 v 14 O 31 f 48 w 15 P 32 g 49 x 16 Q 33 h 50 y Theexamplebelow,fromRFC4648,illustratestheBase64encoding.
Inputdata 0x14fb9c03d97e 8-bit 000101001111101110011100000000111101100101111110 6-bit 000101001111101110011100000000111101100101111110 Decimal 51546280613762 Encoding FPucA9l+ The last point to be discussed about base64 is what happens when the length of the sequence of bytes to be encoded isnot a multipleof three.
In thiscase, the lastgroup of bytesmay contain oneor two bytesinstead of three.
Base64reservesthe=characterasapaddingcharacter.
Thischaracterisusedtwicewhenthelastgroup containstwobytesandoncewhenitcontainsonebyteasillustratedbythetwoexamplesbelow.
Inputdata 0x14 8-bit 00010100 6-bit 000101000000 Decimal 50 Encoding FA== Inputdata 0x14b9 8-bit 0001010011111011 6-bit 000101001111101100 Decimal 51544 Encoding FPs= Now that we have explained the format of the email messages, we can discuss how these messages can be ex- changedthroughtheInternet.
TheﬁgurebelowillustratestheprotocolsthatareusedwhenAlicesendsanemail message to Bob.
Alice prepares her email with an email client or on a webmail interface.
To send her email to Bob,Alice‘sclientwillusetheSimpleMailTransferProtocol(SMTP)todeliverhermessagetoherSMTPserver.
Alice‘semailclientisconﬁguredwiththenameofthedefaultSMTPserverforherdomain.
Thereisusuallyat leastoneSMTPserverperdomain.
Todeliverthemessage,Alice‘sSMTPservermustﬁndtheSMTPserverthat containsBob‘smailbox.
ThiscanbedonebyusingtheMaileXchange(MX)recordsoftheDNS.AsetofMX recordscanbeassociatedtoeachdomain.EachMXrecordcontainsanumericalpreferenceandthefullyqualiﬁed domainnameofaSMTPserverthatisabletodeliveremailmessagesdestinedtoallvalidemailaddressesofthis domain.
The DNS can return several MX records for a given domain.
In this case, the server with the lowest preferenceisusedﬁrst.
Ifthisserverisnotreachable,thesecondmostpreferredserverisusedetc.
Bob‘sSMTP serverwillstorethemessagesentbyAliceuntilBobretrievesitusingawebmailinterfaceorprotocolssuchasthe PostOfﬁceProtocol(POP)ortheInternetMessageAccessProtocol(IMAP).
42 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure3.14: Emaildeliveryprotocols TheSimpleMailTransferProtocol TheSimpleMailTransferProtocol(SMTP)deﬁnedinRFC5321isaclient-serverprotocol.
TheSMTPspeciﬁ- cationdistinguishesbetweenﬁvetypesofprocessesinvolvedinthedeliveryofemailmessages.
Emailmessages arecomposedonaMailUserAgent(MUA).TheMUAisusuallyeitheranemailclientorawebmail.
TheMUA sendstheemailmessagetoaMailSubmissionAgent(MSA).TheMSAprocessesthereceivedemailandforwards ittotheMailTransmissionAgent(MTA).TheMTAisresponsibleforthetransmissionoftheemail,directlyor viaintermediateMTAstotheMTAofthedestinationdomain.
ThisdestinationMTAwillthenforwardthemes- sagetotheMailDeliveryAgent(MDA)whereitwillbeaccessedbytherecipient’sMUA.SMTPisusedforthe interactionsbetweenMUAandMSA13,MSA-MTAandMTA-MTA.
SMTPisatext-basedprotocollikemanyotherapplication-layerprotocolsontheInternet.
Itreliesonthebyte- streamservice.
Serverslistenonport25.
ClientssendcommandsthatareeachcomposedofonelineofASCII textterminatedbyCR+LF.ServersreplybysendingASCIIlinesthatcontainathreedigitnumericalerror/success codeandoptionalcomments.
TheSMTPprotocol,likemosttext-basedprotocols,isspeciﬁedasaBNF.ThefullBNFisdeﬁnedinRFC5321.
ThemainSMTPcommandsaredeﬁnedbytheBNFrulesshownintheﬁgurebelow.
Figure3.15: BNFspeciﬁcationoftheSMTPcommands In this BNF, atext corresponds to printable ASCII characters.
This BNF rule is deﬁned in RFC 5322.
The ﬁve maincommandsareEHLO,MAILFROM:,RCPTTO:,DATAandQUIT 14.Postmasteristhealiasofthesystem administratorwhoisresponsibleforagivendomainorSMTPserver.
AlldomainsmusthaveaPostmasteralias.
TheSMTPresponsesaredeﬁnedbytheBNFshownintheﬁgurebelow.
Figure3.16: BNFspeciﬁcationoftheSMTPresponses SMTP servers use structured reply codes containing three digits and an optional comment.
The ﬁrst digit of 13Duringthelastyears,manyInternetServiceProviders,campusandenterprisenetworkshavedeployedSMTPextensionsRFC4954on theirMSAs.TheseextensionsforcetheMUAstobeauthenticatedbeforetheMSAacceptsanemailmessagefromtheMUA.
14TheﬁrstversionsofSMTPusedHELOastheﬁrstcommandsentbyaclienttoaSMTPserver.
WhenSMTPwasextendedtosupport newerfeaturessuchas8bitscharacters,itwasnecessarytoallowaservertorecognisewhetheritwasinteractingwithaclientthatsupported theextensionsornot.EHLObecamemandatorywiththepublicationofRFC2821.
3.2.
Application-levelprotocols 43 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 the reply code indicates whether the command was successful or not.
A reply code of 2xy indicates that the commandhasbeenaccepted.
Areplycodeof3xyindicatesthatthecommandhasbeenaccepted,butadditional informationfromtheclientisexpected.
Areplycodeof4xyindicatesatransientnegativereply.
Thismeansthat forsomereason,whichisindicatedbyeithertheotherdigitsorthecomment,thecommandcannotbeprocessed immediately,butthereissomehopethattheproblemwillonlybetransient.
Thisisbasicallytellingtheclientto trythesamecommandagainlater.
Incontrast,areplycodeof5xyindicatesapermanentfailureorerror.
Inthis case, it is useless for the client to retry the same command later.
Other application layer protocols such as FTP RFC959orHTTPRFC2616useasimilarstructurefortheirreplycodes.Additionaldetailsabouttheotherreply codesmaybefoundinRFC5321.
ExamplesofSMTPreplycodesincludethefollowing: 500 Syntax error, command unrecognized 501 Syntax error in parameters or arguments 502 Command not implemented 503 Bad sequence of commands 220 <domain> Service ready 221 <domain> Service closing transmission channel 421 <domain> Service not available, closing transmission channel 250 Requested mail action okay, completed 450 Requested mail action not taken: mailbox unavailable 452 Requested action not taken: insufficient system storage 550 Requested action not taken: mailbox unavailable 354 Start mail input; end with <CRLF>.<CRLF> Theﬁrstfourreplycodescorrespondtoerrorsinthecommandssentbytheclient.
Thefourthreplycodewould besentbytheserverwhentheclientsendscommandsinanincorrectorder(e.g.
theclienttriestosendanemail beforeprovidingthedestinationaddressofthemessage).Replycode220isusedbytheserverastheﬁrstmessage when it agrees to interact with the client.
Reply code 221 is sent by the server before closing the underlying transportconnection.
Replycode421isreturnedwhenthereisaproblem(e.g.
lackofmemory/diskresources) thatpreventstheserverfromacceptingthetransportconnection.
Replycode250isthestandardpositivereplythat indicates the success of the previous command.
Reply codes 450 and 452 indicate that the destination mailbox istemporarilyunavailable,forvariousreasons,whilereplycode550indicatesthatthemailboxdoesnotexistor cannotbeusedforpolicyreasons.Replycode354indicatesthattheclientcanstarttransmittingitsemailmessage.
Thetransferofanemailmessageisperformedinthreephases.
Duringtheﬁrstphase,theclientopensatransport connectionwiththeserver.
Oncetheconnectionhasbeenestablished,theclientandtheserverexchangegreetings messages(EHLOcommand).
Mostserversinsistonreceivingvalidgreetingmessagesandsomeofthemdropthe underlyingtransportconnectioniftheydonotreceiveavalidgreeting.
Oncethegreetingshavebeenexchanged, theemailtransferphasecanstart.
Duringthisphase,theclienttransfersoneormoreemailmessagesbyindicating theemailaddressofthesender(MAILFROM:command),theemailaddressoftherecipient(RCPTTO:command) followedbytheheadersandthebodyoftheemailmessage(DATAcommand).Oncetheclienthasﬁnishedsending allitsqueuedemailmessagestotheSMTPserver,itterminatestheSMTPassociation(QUIT command).
Asuccessfultransferofanemailmessageisshownbelow S: 220 smtp.example.com ESMTP MTA information C: EHLO mta.example.org S: 250 Hello mta.example.org, glad to meet you C: MAIL FROM:<alice@example.org> S: 250 Ok C: RCPT TO:<bob@example.com> S: 250 Ok C: DATA S: 354 End data with <CR><LF>.<CR><LF> C: From: "Alice Doe" <alice@example.org> C: To: Bob Smith <bob@example.com> C: Date: Mon, 9 Mar 2010 18:22:32 +0100 C: Subject: Hello C: C: Hello Bob C: This is a small message containing 4 lines of text.
C: Best regards, 44 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 C: Alice C: .
S: 250 Ok: queued as 12345 C: QUIT S: 221 Bye Intheexampleabove,theMTArunningonmta.example.orgopensaTCPconnectiontotheSMTPserveronhost smtp.example.com.
ThelinespreﬁxedwithS:(resp.
C:)aretheresponsessentbytheserver(resp.
thecommands sentbytheclient).
TheserversendsitsgreetingsassoonastheTCPconnectionhasbeenestablished.
Theclient thensendstheEHLOcommandwithitsfullyqualiﬁeddomainname.
Theserverreplieswithreply-code250and sendsitsgreetings.
TheSMTPassociationcannowbeusedtoexchangeanemail.
Tosendanemail,theclientmustﬁrstprovidetheaddressoftherecipientwithRCPTTO:.
ThenitusestheMAIL FROM: with the address of the sender.
Both the recipient and the sender are accepted by the server.
The client cannowissuetheDATAcommandtostartthetransferoftheemailmessage.
Afterhavingreceivedthe354reply code,theclientsendstheheadersandthebodyofitsemailmessage.
Theclientindicatestheendofthemessage by sending a line containing only the .
(dot) character 15.
The server conﬁrms that the email message has been queuedfordeliveryortransmissionwithareplycodeof250.
TheclientissuestheQUIT commandtoclosethe sessionandtheserverconﬁrmswithreply-code221,beforeclosingtheTCPconnection.
Note: OpenSMTPrelaysandspam Since its creation in 1971, email has been a very useful tool that is used by many users to exchange lots of information.
Intheearlydays,allSMTPserverswereopenandanyonecouldusethemtoforwardemailstowards theirﬁnaldestination.
Unfortunately,overtheyears,someunscrupuloususershavefoundwaystouseemailfor marketingpurposesortosendmalware.
Theﬁrstdocumentedabuseofemailformarketingpurposesoccurredin 1978whenamarketerwhoworkedforacomputervendorsentamarketingemailtomanyARPANETusers.
At that time, the ARPANET could only be used for research purposes and this was an abuse of the acceptable use policy.
Unfortunately,giventheextremelylowcostofsendingemails,theproblemofunsolicitedemailshasnot stopped.
UnsolicitedemailsarenowcalledspamandastudycarriedoutbyENISAin2009revealsthat95%of emailwasspamandthisnumberseemstocontinuetogrow.
Thisplacesaburdenontheemailinfrastructureof InternetServiceProvidersandlargecompaniesthatneedtoprocessmanyuselessmessages.
Giventheamountofspammessages,SMTPserversarenolongeropenRFC5068.
SeveralextensionstoSMTP have been developed in recent years to deal with this problem.
For example, the SMTP authentication scheme deﬁnedinRFC4954canbeusedbyanSMTPservertoauthenticateaclient.
Severaltechniqueshavealsobeen proposedtoallowSMTPserverstoauthenticatethemessagessentbytheirusersRFC4870RFC4871.
ThePostOfﬁceProtocol WhentheﬁrstversionsofSMTPweredesigned,theInternetwascomposedofminicomputersthatwereusedby anentireuniversitydepartmentorresearchlab.
Theseminicomputerswereusedbymanyusersatthesametime.
Email was mainly used to send messages from a user on a given host to another user on a remote host.
At that time,SMTPwastheonlyprotocolinvolvedinthedeliveryoftheemailsasallhostsattachedtothenetworkwere runninganSMTPserver.
Onsuchhosts,anemaildestinedtolocaluserswasdeliveredbyplacingtheemailina specialdirectoryorﬁleownedbytheuser.However,theintroductionofpersonalcomputersinthe1980s,changed this environment.
Initially, users of these personal computers used applications such as telnet to open a remote session on the local minicomputer to read their email.
This was not user-friendly.
A better solution appeared with the development of user friendly email client applications on personal computers.
Several protocols were designed to allow these client applications to retrieve the email messages destined to a user from his/her server.
Twooftheseprotocolsbecamepopularandarestillusedtoday.
ThePostOfﬁceProtocol(POP),deﬁnedinRFC 1939, is the simplest one.
It allows a client to download all the messages destined to a given user from his/her emailserver.WedescribePOPbrieﬂyinthissection.ThesecondprotocolistheInternetMessageAccessProtocol (IMAP),deﬁnedinRFC3501.
IMAPismorepowerful,butalsomorecomplexthanPOP.IMAPwasdesignedto allowclientapplicationstoefﬁcientlyaccessinreal-timetomessagesstoredinvariousfoldersonservers.
IMAP 15ThisimpliesthatavalidemailmessagecannotcontainalinewithonedotfollowedbyCRandLF.Ifausertypessuchalineinanemail, hisemailclientwillautomaticallyaddaspacecharacterbeforeorafterthedotwhensendingthemessageoverSMTP.
3.2.
Application-levelprotocols 45 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 assumesthatallthemessagesofagivenuserarestoredonaserverandprovidesthefunctionsthatarenecessary tosearch,download,deleteorﬁltermessages.
POPisanotherexampleofasimpleline-basedprotocol.
POPrunsabovethebytestreamservice.
APOPserver usually listens to port 110.
A POP session is composed of three parts : an authorisation phase during which theserververiﬁestheclient’scredential,atransactionphaseduringwhichtheclientdownloadsmessagesandan updatephasethatconcludesthesession.
Theclientsendscommandsandtheserverrepliesarepreﬁxedby+OK toindicateasuccessfulcommandorby-ERRtoindicateerrors.
WhenaclientopensatransportconnectionwiththePOPserver,thelattersendsasbanneranASCII-linestarting with +OK.
The POP session is at that time in the authorisation phase.
In this phase, the client can send its username(resp.
password)withtheUSER(resp.
PASS)command.
Theserverreplieswith+OK iftheusername (resp.
password)isvalidand-ERRotherwise.
Once the username and password have been validated, the POP session enters in the transaction phase.
In this phase, the client can issue several commands.
The STAT command is used to retrieve the status of the server.
Upon reception of this command, the server replies with a line that contains +OK followed by the number of messagesinthemailboxandthetotalsizeofthemailboxinbytes.
TheRETRcommand,followedbyaspaceand aninteger,isusedtoretrievethenthmessageofthemailbox.
TheDELE commandisusedtomarkfordeletion thenthmessageofthemailbox.
Once the client has retrieved and possibly deleted the emails contained in the mailbox, it must issue the QUIT command.
ThiscommandterminatesthePOPsessionandallowstheservertodeleteallthemessagesthathave beenmarkedfordeletionbyusingtheDELEcommand.
TheﬁgurebelowprovidesasimplePOPsession.
AlllinespreﬁxedwithC:(resp.
S:)aresentbytheclient(resp.
server).
S: +OK POP3 server ready C: USER alice S: +OK C PASS 12345pass S: +OK alice’s maildrop has 2 messages (620 octets) C: STAT S: +OK 2 620 C: LIST S: +OK 2 messages (620 octets) S: 1 120 S: 2 500 S: .
C: RETR 1 S: +OK 120 octets S: <the POP3 server sends message 1> S: .
C: DELE 1 S: +OK message 1 deleted C: QUIT S: +OK POP3 server signing off (1 message left) Inthisexample,aPOPclientcontactsaPOPserveronbehalfoftheusernamedalice.
Notethatinthisexample, Alice’spasswordissentinclearbytheclient.
Thisimpliesthatifsomeoneisabletocapturethepacketssentby Alice, he will know Alice’s password 16.
Then Alice’s client issues the STAT command to know the number of messagesthatarestoredinhermailbox.
Itthenretrievesanddeletestheﬁrstmessageofthemailbox.
3.2.3 The HyperText Transfer Protocol In the early days of the Internet was mainly used for remote terminal access with telnet, email and ﬁle transfer.
Thedefaultﬁletransferprotocol,FTP,deﬁnedinRFC959waswidelyusedandFTPclientsandserversarestill includedinmostoperatingsystems.
16 RFC1939deﬁnestheAPOPauthenticationschemethatisnotvulnerabletosuchattacks.
46 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 ManyFTPclientsofferauserinterfacesimilartoaUnixshellandallowtheclienttobrowsetheﬁlesystemon theserverandtosendandretrieveﬁles.
FTPserverscanbeconﬁguredintwomodes: • authenticated: inthismode,theftpserveronlyacceptsuserswithavalidusernameandpassword.
Once authenticated,theycanaccesstheﬁlesanddirectoriesaccordingtotheirpermissions • anonymous: inthismode,clientssupplytheanonymoususeridandtheiremailaddressaspassword.
These clientsaregrantedaccesstoaspecialzoneoftheﬁlesystemthatonlycontainspublicﬁles.
ftp was very popular in the 1990s and early 2000s, but today it has mostly been superseded by more recent protocols.
AuthenticatedaccesstoﬁlesismainlydonebyusingtheSecureShell(ssh)protocoldeﬁnedinRFC 4251 and supported by clients such as scp or sftp.
Nowadays, anonymous access is mainly provided by web protocols.
In the late 1980s, high energy physicists working at CERN had to efﬁciently exchange documents about their ongoingandplannedexperiments.
TimBerners-Leeevaluatedseveralofthedocumentssharingtechniquesthat wereavailableatthattime[B1989].
AsnoneoftheexistingsolutionsmetCERN’srequirements,theychooseto developacompletelynewdocumentsharingsystem.
Thissystemwasinitiallycalledthemesh,butwasquickly renamedtheworldwideweb.
Thestartingpointfortheworldwidewebarehypertextdocuments.
Anhypertext documentisadocumentthatcontainsreferences(hyperlinks)tootherdocumentsthatthereadercanimmediately access.
Hypertext was not invented for the world wide web.
The idea of hypertext documents was proposed in 1945[Bush1945]andtheﬁrstexperimentsweredoneduringthe1960s[Nelson1965][Myers1998].
Comparedto thehypertextdocumentsthatwereusedinthelate1980s,themaininnovationintroducedbytheworldwideweb wastoallowhyperlinkstoreferencedocumentsstoredonremotemachines.
Figure3.17: World-widewebclientsandservers Adocumentsharingsystemsuchastheworldwidewebiscomposedofthreeimportantparts.
1.
Astandardisedaddressingschemethatallowsunambiguousidentiﬁcationofdocuments 2.
Astandarddocumentformat: theHyperTextMarkupLanguage 3.
Astandardisedprotocolthatfacilitatesefﬁcientretrievalofdocumentsstoredonaserver Note: Openstandardsandopenimplementations Open standards have, and are still playing a key role in the success of the world wide web as we know it to- day.
Withoutopenstandards,theworldwidewebwouldneverhavereacheditscurrentsize.
Inadditiontoopen standards, another important factor for the success of the web was the availability of open and efﬁcient imple- mentations of these standards.
When CERN started to work on the web, their objective was to build a running systemthatcouldbeusedbyphysicists.Theydevelopedopen-sourceimplementationsoftheﬁrstwebserversand webclients.
Theseopen-sourceimplementationswerepowerfulandcouldbeusedasis,byinstitutionswillingto 3.2.
Application-levelprotocols 47 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 shareinformationontheweb.
Theywerealsoextendedbyotherdeveloperswhocontributedtonewfeatures.
For example, NCSA added support for images in their Mosaic browser that was eventually used to create Netscape Communications.
TheﬁrstcomponentsoftheworldwidewebaretheUniformResourceIdentiﬁers(URI),deﬁnedinRFC3986.
A URIisacharacterstringthatunambiguouslyidentiﬁesaresourceontheworldwideweb.
Hereisasubsetofthe BNFforURIs URI = scheme ":" "//" authority path [ "?"
query ] [ "#" fragment ] scheme = ALPHA *( ALPHA / DIGIT / "+" / "-" / "."
) authority = [ userinfo "@" ] host [ ":" port ] query = *( pchar / "/" / "?"
) fragment = *( pchar / "/" / "?"
) pchar = unreserved / pct-encoded / sub-delims / ":" / "@" query = *( pchar / "/" / "?"
) fragment = *( pchar / "/" / "?"
) pct-encoded = "%" HEXDIG HEXDIG unreserved = ALPHA / DIGIT / "-" / "."
/ "_" / "~" reserved = gen-delims / sub-delims gen-delims = ":" / "/" / "?"
/ "#" / "[" / "]" / "@" sub-delims = "!"
/ "$" / "&" / "’" / "(" / ")" / "*" / "+" / "," / ";" / "=" The ﬁrst component of a URI is its scheme.
A scheme can be seen as a selector, indicating the meaning of the ﬁeldsafterit.
Inpractice,theschemeoftenidentiﬁestheapplication-layerprotocolthatmustbeusedbytheclient to retrieve the document, but it is not always the case.
Some schemes do not imply a protocol at all and some donotindicatearetrievabledocument17.
Themostfrequentschemeishttpthatwillbedescribedlater.
AURI schemecanbedeﬁnedforalmostanyapplicationlayerprotocol[#furilist]_. Thecharacters‘: and// followthe schemeofanyURI.
ThesecondpartoftheURIistheauthority.
WithretrievableURI,thisincludestheDNSnameortheIPaddress of the server where the document can be retrieved using the protocol speciﬁed via the scheme.
This name can be preceded by some information about the user (e.g.
a user name) who is requesting the information.
Earlier deﬁnitions of the URI allowed the speciﬁcation of a user name and a password before the @ character ( RFC 1738),butthisisnowdeprecatedasplacingapasswordinsideaURIisinsecure.
Thehostnamecanbefollowed bythesemicoloncharacterandaportnumber.
Adefaultportnumberisdeﬁnedforsomeprotocolsandtheport numbershouldonlybeincludedintheURIifanon-defaultportnumberisused(forotherprotocols,techniques likeserviceDNSrecordsareused).
The third part of the URI is the path to the document.
This path is structured as ﬁlenames on a Unix host (but it does not imply that the ﬁles are indeed stored this way on the server).
If the path is not speciﬁed, the server willreturnadefaultdocument.
ThelasttwooptionalpartsoftheURIareusedtoprovideaqueryandindicatea speciﬁcpart(e.g.
asectioninanarticle)oftherequesteddocument.
SampleURIsareshownbelow.
http://tools.ietf.org/html/rfc3986.html mailto:infobot@example.com?subject=current-issue http://docs.python.org/library/basehttpserver.html?highlight=http#BaseHTTPServer.BaseHTTPRequestHandler telnet://[2001:6a8:3080:3::2]:80/ ftp://cnn.example.com&story=breaking_news@10.0.0.1/top_story.htm TheﬁrstURIcorrespondstoadocumentnamedrfc3986.htmlthatisstoredontheservernamedtools.ietf.organd canbeaccessedbyusingthehttpprotocolonitsdefaultport.
ThesecondURIcorrespondstoanemailmessage, withsubjectcurrent-issue, thatwillbesenttouserinfobot indomainexample.com.
Themailto: URIschemeis deﬁned inRFC6068.
Thethird URIreferences theportion BaseHTTPServer.BaseHTTPRequestHandler ofthe documentbasehttpserver.htmlthatisstoredinthelibrarydirectoryonserverdocs.python.org.
Thisdocumentcan beretrievedbyusingthehttpprotocol.Thequeryhighlight=httpisassociatedtothisURI.Thefourthexampleisa serverthatoperatesthetelnetprotocol,usesIPv6address2001:6a8:3080:3::2andisreachableonport80.Thelast URIissomewhatspecial.Mostuserswillassumethatitcorrespondstoadocumentstoredonthecnn.example.com 17 An example of a non-retrievable URI is urn:isbn:0-380-81593-1 which is an unique identiﬁer for a book, through the urn scheme (seeRFC3187).
Ofcourse,anyURIcanbemakeretrievableviaadedicatedserveroranewprotocolbutthisonehasnoexplicitproto- col. Samethingfortheschemetag(seeRFC4151),oftenusedinWebsyndication(seeRFC4287abouttheAtomsyndicationformat).
Evenwhentheschemeisretrievable(forinstancewithhttp‘), itisoftenusedonlyasanidentiﬁer, notasawaytogetaresource.
See http://norman.walsh.name/2006/07/25/namesAndAddressesforagoodexplanation.
48 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 server.
However,toparsethisURI,itisimportanttorememberthatthe@characterisusedtoseparatetheuser namefromthehostnameintheauthorisationpartofaURI.ThisimpliesthattheURIpointstoadocumentnamed top_story.htmonhosthavingIPv4address10.0.0.1.
Thedocumentwillberetrievedbyusingtheftpprotocolwith theusernamesettocnn.example.com&story=breaking_news.
The second component of the word wide web is the HyperText Markup Language (HTML).
HTML deﬁnes the formatofthedocumentsthatareexchangedontheweb.TheﬁrstversionofHTMLwasderivedfromtheStandard Generalized Markup Language (SGML) that was standardised in 1986 by ISO.
SGML was designed to allow largeprojectdocumentsinindustriessuchasgovernment,laworaerospacetobesharedefﬁcientlyinamachine- readablemanner.Theseindustriesrequiredocumentstoremainreadableandeditablefortensofyearsandinsisted onastandardisedformatsupportedbymultiplevendors.
Today,SGMLisnolongerwidelyusedbeyondspeciﬁc applications,butitsdescendantsincludingHTMLandXMLarenowwidespread.
A markup language is a structured way of adding annotations about the formatting of the document within the documentitself.
Examplemarkuplanguagesincludetroff, whichisusedtowritetheUnixmanpagesorLatex.
HTML uses markers to annotate text and a document is composed of HTML elements.
Each element is usually composedofthreeitems: astarttagthatpotentiallyincludessomespeciﬁcattributes,sometext(oftenincluding other elements), and an end tag.
A HTML tag is a keyword enclosed in angle brackets.
The generic form of a HTMLelementis <tag>Some text to be displayed</tag> MorecomplexHTMLelementscanalsoincludeoptionalattributesinthestarttag <tag attribute1="value1" attribute2="value2">some text to be displayed</tag> TheHTMLdocumentshownbelowiscomposedoftwoparts: aheader,delineatedbythe<head>and</head> markers,andabody(betweenthe<body>and</body>markers).
Intheexamplebelow,theheaderonlycontains atitle,butothertypesofinformationcanbeincludedintheheader.
Thebodycontainsanimage,sometextanda listwiththreehyperlinks.TheimageisincludedinthewebpagebyindicatingitsURIbetweenbracketsinsidethe <imgsrc=”...”>marker.Theimagecan,ofcourse,resideonanyserverandtheclientwillautomaticallydownload itwhenrenderingthewebpage.
The<h1>...</h1>markerisusedtospecifytheﬁrstlevelofheadings.
The<ul> markerindicatesanunnumberedlistwhilethe<li>markerindicatesalistitem.
The<ahref=”URI”>text</a> indicatesahyperlink.
Thetextwillbeunderlinedintherenderedwebpageandtheclientwillfetchthespeciﬁed URIwhentheuserclicksonthelink.
Figure3.18: AsimpleHTMLpage Additional details about the various extensions to HTML may be found in the ofﬁcial speciﬁcationsmaintained byW3C.
ThethirdcomponentoftheworldwidewebistheHyperTextTransportProtocol(HTTP).HTTPisatext-based protocol,inwhichtheclientsendsarequestandtheserverreturnsaresponse.
HTTPrunsabovethebytestream service and HTTP servers listen by default on port 80.
The design of HTTP has largely been inspired by the Internetemailprotocols.
EachHTTPrequestcontainsthreeparts: • amethod,thatindicatesthetypeofrequest,aURI,andtheversionoftheHTTPprotocolusedbytheclient 3.2.
Application-levelprotocols 49 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • aheader,thatisusedbytheclienttospecifyoptionalparametersfortherequest.
Anemptylineisusedto marktheendoftheheader • anoptionalMIMEdocumentattachedtotherequest Theresponsesentbytheserveralsocontainsthreeparts: • astatusline,thatindicateswhethertherequestwassuccessfulornot • aheader,thatcontainsadditionalinformationabouttheresponse.
Theresponseheaderendswithanempty line.
• aMIMEdocument Figure3.19: HTTPrequestsandresponses SeveraltypesofmethodcanbeusedinHTTPrequests.
Thethreemostimportantonesare: • theGET methodisthemostpopularone.
Itisusedtoretrieveadocumentfromaserver.
The GETmethodisencodedasGETfollowedbythepathoftheURIoftherequesteddocumentand theversionofHTTPusedbytheclient.Forexample,toretrievethehttp://www.w3.org/MarkUp/ URI, a client must open a TCP on port 80 with host www.w3.org and send a HTTP request containingthefollowingline GET/MarkUp/HTTP/1.0 • – the HEAD method is a variant of the GET method that allows the retrieval of the header linesforagivenURIwithoutretrievingtheentiredocument.
Itcanbeusedbyaclientto verifyifadocumentexists,forinstance.
• thePOST methodcanbeusedbyaclienttosendadocumenttoaserver.
Thesentdocumentis attachedtotheHTTPrequestasaMIMEdocument.
HTTPclientsandserverscanincludemanydifferentHTTPheadersinHTTPrequestsandresponses.
EachHTTP headerisencodedasasingleASCII-lineterminatedbyCRandLF.Severaloftheseheadersarebrieﬂydescribed below.
AdetaileddiscussionofallstandardheadersmaybefoundinRFC1945.
TheMIMEheaderscanappear inbothHTTPrequestsandHTTPresponses.
• theContent-Length: headeristheMIMEheaderthatindicatesthelengthoftheMIMEdocumentinbytes.
• the Content-Type: header is the MIME header that indicates the type of the attached MIME document.
HTMLpagesusethetext/htmltype.
• the Content-Encoding: header indicates how the MIME document has been encoded.
For example, this headerwouldbesettox-gzipforadocumentcompressedusingthegzipsoftware.
RFC1945andRFC2616deﬁneheadersthatarespeciﬁctoHTTPresponses.
Theseserverheadersinclude: 50 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • the Server: header indicates the version of the web server that has generated the HTTP response.
Some servers provide information about their software release and optional modules that they use.
For security reasons, somesystemadministratorsdisabletheseheaderstoavoidrevealingtoomuchinformationabout theirservertopotentialattackers.
• theDate: headerindicateswhentheHTTPresponsehasbeenproducedbytheserver.
• theLast-Modiﬁed: headerindicatesthedateandtimeofthelastmodiﬁcationofthedocumentattachedto theHTTPresponse.
Similarly,thefollowingheaderlinescanonlyappearinsideHTTPrequestssentbyaclient: • theUser-Agent: headerprovidesinformationabouttheclientthathasgeneratedtheHTTPrequest.
Some serversanalysethisheaderlineandreturndifferentheadersandsometimesdifferentdocumentsfordifferent useragents.
• the If-Modiﬁed-Since: header is followed by a date.
It enables clients to cache in memory or on disk the recentormostfrequentlyuseddocuments.WhenaclientneedstorequestaURIfromaserver,itﬁrstchecks whetherthedocumentisalreadyinitscache.
Ifitis,theclientsendsaHTTPrequestwiththeIf-Modiﬁed- Since:headerindicatingthedateofthecacheddocument.Theserverwillonlyreturnthedocumentattached totheHTTPresponseifitisnewerthantheversionstoredintheclient’scache.
• theReferrer:headerisfollowedbyaURI.ItindicatestheURIofthedocumentthattheclientvisitedbefore sendingthisHTTPrequest.
Thankstothisheader,theservercanknowtheURIofthedocumentcontaining the hyperlink followed by the client, if any.
This information is very useful to measure the impact of advertisementscontaininghyperlinksplacedonwebsites.
• theHost: headercontainsthefullyqualiﬁeddomainnameoftheURIbeingrequested.
Note: TheimportanceoftheHost: headerline The ﬁrst version of HTTP did not include the Host: header line.
This was a severe limitation for web host- ing companies.
For example consider a web hosting company that wants to serve both web.example.com and www.example.net on the same physical server.
Both web sites contain a /index.html document.
When a client sendsarequestforeitherhttp://web.example.com/index.htmlorhttp://www.example.net/index.html,theHTTP1.0 requestcontainsthefollowingline: GET /index.html HTTP/1.0 By parsing this line, a server cannot determine which index.html ﬁle is requested.
Thanks to the Host: header line, the server knows whether the request is for http://web.example.com/index.html or http://www.dummy.net/index.html.
Without the Host: header, this is impossible.
The Host: header line allowed webhostingcompaniestodeveloptheirbusinessbysupportingalargenumberofindependentwebserversonthe samephysicalserver.
The status line of the HTTP response begins with the version of HTTP used by the server (usually HTTP/1.0 deﬁned in RFC 1945 or HTTP/1.1 deﬁned in RFC 2616) followed by a three digit status code and additional informationinEnglish.
HTTPstatuscodeshaveasimilarstructureasthereplycodesusedbySMTP.
• Allstatuscodesstartingwithdigit2indicateavalidresponse.
200OkindicatesthattheHTTPrequestwas successfullyprocessedbytheserverandthattheresponseisvalid.
• All status codes starting with digit 3 indicate that the requested document is no longer available on the server.
301MovedPermanentlyindicatesthattherequesteddocumentisnolongeravailableonthisserver.
ALocation: headercontainingthenewURIoftherequesteddocumentisinsertedintheHTTPresponse.
304 Not Modiﬁed is used in response to an HTTP request containing the If-Modiﬁed-Since: header.
This statuslineisusedbytheserverifthedocumentstoredontheserverisnotmorerecentthanthedateindicated intheIf-Modiﬁed-Since: header.
• Allstatuscodesstartingwithdigit4indicatethattheserverhasdetectedanerrorintheHTTPrequestsent bytheclient.
400BadRequestindicatesasyntaxerrorintheHTTPrequest.
404NotFoundindicatesthat therequesteddocumentdoesnotexistontheserver.
3.2.
Application-levelprotocols 51 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • Allstatuscodesstartingwithdigit5indicateanerrorontheserver.
500InternalServerErrorindicatesthat theservercouldnotprocesstherequestduetoanerrorontheserveritself.
InboththeHTTPrequestandtheHTTPresponse,theMIMEdocumentreferstoarepresentationofthedocument withtheMIMEheadersindicatingthetypeofdocumentanditssize.
AsanillustrationofHTTP/1.0,thetranscriptbelowshowsaHTTPrequestforhttp://www.ietf.organdthecorre- spondingHTTPresponse.
TheHTTPrequestwassentusingthecurlcommandlinetool.
TheUser-Agent: header line contains more information about this client software.
There is no MIME document attached to this HTTP request,anditendswithablankline.
GET / HTTP/1.0 User-Agent: curl/7.19.4 (universal-apple-darwin10.0) libcurl/7.19.4 OpenSSL/0.9.8l zlib/1.2.3 Host: www.ietf.org The HTTP response indicates the version of the server software used with the modules included.
The Last- Modiﬁed: header indicates that the requested document was modiﬁed about one week before the request.
A HTMLdocument(notshown)isattachedtotheresponse.
NotetheblanklinebetweentheheaderoftheHTTP responseandtheattachedMIMEdocument.
TheServer: headerlinehasbeentruncatedinthisoutput.
HTTP/1.1 200 OK Date: Mon, 15 Mar 2010 13:40:38 GMT Server: Apache/2.2.4 (Linux/SUSE) mod_ssl/2.2.4 OpenSSL/0.9.8e (truncated) Last-Modified: Tue, 09 Mar 2010 21:26:53 GMT Content-Length: 17019 Content-Type: text/html <!DOCTYPE HTML PUBLIC .../HTML> HTTPwasinitiallydesignedtoshareself-containedtextdocuments.
Forthisreason,andtoeasetheimplemen- tation of clients and servers, the designers of HTTP chose to open a TCP connection for each HTTP request.
ThisimpliesthataclientmustopenoneTCPconnectionforeachURIthatitwantstoretrievefromaserveras illustratedontheﬁgurebelow.Forawebpagecontainingonlytextdocumentsthiswasareasonabledesignchoice astheclientusuallyremainsidlewhilethe(human)userisreadingtheretrieveddocument.
Figure3.20: HTTP1.0andtheunderlyingTCPconnection However,asthewebevolvedtosupportricherdocumentscontainingimages,openingaTCPconnectionforeach URI became a performance problem [Mogul1995].
Indeed, besides its HTML part, a web page may include dozens of images or more.
Forcing the client to open a TCP connection for each component of a web page has two important drawbacks.
First, the client and the server must exchange packets to open and close a TCP connectionaswewillseelater.
Thisincreasesthenetworkoverheadandthetotaldelayofcompletelyretrieving allthecomponentsofawebpage.
Second,alargenumberofestablishedTCPconnectionsmaybeaperformance bottleneckonservers.
This problem was solved by extending HTTP to support persistent TCP connections RFC 2616.
A persistent connection is a TCP connection over which a client may send several HTTP requests.
This is illustrated in the ﬁgurebelow.
52 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure3.21: HTTP1.1persistentconnections To allow the clients and servers to control the utilisation of these persistent TCP connections, HTTP 1.1 RFC 2616deﬁnesseveralnewHTTPheaders: • The Connection: header is used with the Keep-Alive argument by the client to indicate that it expects the underlyingTCPconnectiontobepersistent.
WhenthisheaderisusedwiththeCloseargument,itindicates thattheentitythatsentitwillclosetheunderlyingTCPconnectionattheendoftheHTTPresponse.
• TheKeep-Alive: headerisusedbytheservertoinformtheclientabouthowitagreestousethepersistent connection.
A typical Keep-Alive: contains two parameters : the maximum number of requests that the serveragreestoserveontheunderlyingTCPconnectionandthetimeout(inseconds)afterwhichtheserver willcloseanidleconnection The example below shows the operation of HTTP/1.1 over a persistent TCP connection to retrieve three URIs stored on the same server.
Once the connection has been established, the client sends its ﬁrst request with the Connection: keep-aliveheadertorequestapersistentconnection.
GET / HTTP/1.1 Host: www.kame.net User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_2; en-us) Connection: keep-alive TheserverreplieswiththeConnection: Keep-Aliveheaderandindicatesthatitacceptsamaximumof100HTTP requestsoverthisconnectionandthatitwillclosetheconnectionifitremainsidlefor15seconds.
HTTP/1.1 200 OK Date: Fri, 19 Mar 2010 09:23:37 GMT Server: Apache/2.0.63 (FreeBSD) PHP/5.2.12 with Suhosin-Patch Keep-Alive: timeout=15, max=100 Connection: Keep-Alive Content-Length: 3462 Content-Type: text/html <html>... </html> Theclientsendsasecondrequestforthestylesheetoftheretrievedwebpage.
GET /style.css HTTP/1.1 Host: www.kame.net Referer: http://www.kame.net/ User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_2; en-us) Connection: keep-alive 3.2.
Application-levelprotocols 53 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Theserverreplieswiththerequestedstylesheetandmaintainsthepersistentconnection.
Notethattheserveronly accepts99remainingHTTPrequestsoverthispersistentconnection.
HTTP/1.1 200 OK Date: Fri, 19 Mar 2010 09:23:37 GMT Server: Apache/2.0.63 (FreeBSD) PHP/5.2.12 with Suhosin-Patch Last-Modified: Mon, 10 Apr 2006 05:06:39 GMT Content-Length: 2235 Keep-Alive: timeout=15, max=99 Connection: Keep-Alive Content-Type: text/css ... Thentheclientautomaticallyrequeststhewebserver’sicon18,thatcouldbedisplayedbythebrowser.Thisserver doesnotcontainsuchURIandthusreplieswitha404HTTPstatus.
However,theunderlyingTCPconnectionis notclosedimmediately.
GET /favicon.ico HTTP/1.1 Host: www.kame.net Referer: http://www.kame.net/ User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_2; en-us) Connection: keep-alive HTTP/1.1 404 Not Found Date: Fri, 19 Mar 2010 09:23:40 GMT Server: Apache/2.0.63 (FreeBSD) PHP/5.2.12 with Suhosin-Patch Content-Length: 318 Keep-Alive: timeout=15, max=98 Connection: Keep-Alive Content-Type: text/html; charset=iso-8859-1 <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"> ... Asillustratedabove,aclientcansendseveralHTTPrequestsoverthesamepersistentTCPconnection.
However, itisimportanttonotethatalloftheseHTTPrequestsareconsideredtobeindependentbytheserver.
EachHTTP requestmustbeself-contained.
Thisimpliesthateachrequestmustincludealltheheaderlinesthatarerequired bytheservertounderstandtherequest.
Theindependenceoftheserequestsisoneoftheimportantdesignchoices of HTTP.
As a consequence of this design choice, when a server processes a HTTP request, it doesn’t’ use any otherinformationthanwhatiscontainedintherequestitself.
ThisexplainswhytheclientaddsitsUser-Agent: headerinalloftheHTTPrequestsitsendsoverthepersistentTCPconnection.
However, in practice, some servers want to provide content tuned for each user.
For example, some servers canprovideinformationinseverallanguagesorotherserverswanttoprovideadvertisementsthataretargetedto differenttypesofusers.
Todothis,serversneedtomaintainsomeinformationaboutthepreferencesofeachuser andusethisinformationtoproducecontentmatchingtheuser’spreferences.
HTTPcontainsseveralmechanisms thatenabletosolvethisproblem.
Wediscussthreeofthembelow.
Aﬁrstsolutionistoforcetheuserstobeauthenticated.
ThiswasthesolutionusedbyFTPtocontroltheﬁlesthat eachusercouldaccess.
Initially,usernamesandpasswordscouldbeincludedinsideURIsRFC1738.
However, placingpasswordsintheclearinapotentiallypubliclyvisibleURIiscompletelyinsecureandthisusagehasnow been deprecated RFC 3986.
HTTP supports several extension headers RFC 2617 that can be used by a server torequesttheauthenticationoftheclientbyprovidinghis/hercredentials.
However, usernamesandpasswords havenotbeenpopularonwebserversastheyforcehumanuserstorememberoneusernameandonepassword perserver.
Rememberingapasswordisacceptablewhenauserneedstoaccessprotectedcontent,butuserswill notaccepttheneedforausernameandpasswordonlytoreceivetargetedadvertisementsfromthewebsitesthat theyvisit.
A second solution to allow servers to tune that content to the needs and capabilities of the user is to rely on thedifferenttypesofAccept-*HTTPheaders.
Forexample, theAccept-Language: canbeusedbytheclientto 18 FavoriteiconsaresmalliconsthatareusedtorepresentwebserversinthetoolbarofInternetbrowsers.
Microsoftaddedthisfeature intheirbrowserswithouttakingintoaccounttheW3Cstandards.
Seehttp://www.w3.org/2005/10/howto-faviconforadiscussiononhowto cleanlysupportsuchfavoriteicons.
54 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 indicateitspreferredlanguages.
Unfortunately,inpracticethisheaderisusuallysetbasedonthedefaultlanguage of the browser and it is not possible for a user to indicate the language it prefers to use by selecting options on eachvisitedwebserver.
The third, and widely adopted, solution are HTTP cookies.
HTTP cookies were initially developed as a private extensionbyNetscape.
TheyarenowpartofthestandardRFC6265.
Inanutshell,acookieisashortstringthat ischosenbyaservertorepresentagivenclient.
TwoHTTPheadersareused: Cookie: andSet-Cookie:.
Whena serverreceivesanHTTPrequestfromanewclient(i.e.anHTTPrequestthatdoesnotcontaintheCookie:header), itgeneratesacookiefortheclientandincludesitintheSet-Cookie: headerofthereturnedHTTPresponse.
The Set-Cookie: header contains several additional parameters including the domain names for which the cookie is valid.
The client stores all received cookies on disk and every time it sends a HTTP request, it veriﬁes whether it already knows a cookie for this domain.
If so, it attaches the Cookie: header to the HTTP request.
This is illustratedintheﬁgurebelowwithHTTP1.1,butcookiesalsoworkwithHTTP1.0.
Figure3.22: HTTPcookies Note: PrivacyissueswithHTTPcookies The HTTP cookies introduced by Netscape are key for large e-commerce websites.
However, they have also raised many discussions concerning their potential misuses.
Consider ad.com, a company that delivers lots of advertisements on web sites.
A web site that wishes to include ad.com‘s advertisements next to its content will addlinkstoad.cominsideitsHTMLpages.Ifad.comisusedbymanywebsites,ad.comcouldbeabletotrackthe interestsofalltheusersthatvisititsclientwebsitesandusethisinformationtoprovidetargetedadvertisements.
Privacy advocates have even sued online advertisement companies to force them to comply with the privacy regulations.
Morerecentrelatedtechnologiesalsoraiseprivacyconcerns 3.3 Writing simple networked applications NetworkedapplicationswereusuallyimplementedbyusingthesocketAPI.ThisAPIwasdesignedwhenTCP/IP wasﬁrstimplementedintheUnixBSDoperatingsystem[Sechrest][LFJLMT],andhasservedasthemodelfor many APIs between applications and the networking stack in an operating system.
Although the socket API is verypopular,otherAPIshavealsobeendeveloped.
Forexample,theSTREAMSAPIhasbeenaddedtoseveral UnixSystemVvariants[Rago1993].
ThesocketAPIissupportedbymostprogramminglanguagesandseveral textbookshavebeendevotedtoit.
UsersoftheClanguagecanconsult[DC2009],[Stevens1998],[SFR2004]or [Kerrisk2010].
TheJavaimplementationofthesocketAPIisdescribedin[CD2008]andintheJavatutorial.
In thissection, wewillusethepythonimplementationofthesocketAPItoillustratethekeyconcepts.
Additional informationaboutthisAPImaybefoundinthesocketsectionofthepythondocumentation.
3.3.
Writingsimplenetworkedapplications 55 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 The socket API is quite low-level and should be used only when you need a complete control of the network access.
If your application simply needs, for instance, to retrieve data with HTTP, there are much simpler and higher-levelAPIs.
AdetaileddiscussionofthesocketAPIisoutsidethescopeofthissectionandthereferencescitedaboveprovide a detailed discussion of all the details of the socket API.
As a starting point, it is interesting to compare the socket API with the service primitives that we have discussed in the previous chapter.
Let us ﬁrst consider the connectionlessservicethatconsistsofthefollowingtwoprimitives: • DATA.request(destination,message)isusedtosendamessagetoaspeciﬁeddestination.
InthissocketAPI, thiscorrespondstothesendmethod.
• DATA.indication(message)isissuedbythetransportservicetodeliveramessagetotheapplication.
Inthe socketAPI,thiscorrespondstothereturnoftherecvmethodthatiscalledbytheapplication.
TheDATAprimitivesareexchangedthroughaserviceaccesspoint.InthesocketAPI,theequivalenttotheservice accesspointisthesocket.
Asocketisadatastructurewhichismaintainedbythenetworkingstackandisusedby theapplicationeverytimeitneedstosendorreceivedatathroughthenetworkingstack.
Thesocketmethodinthe pythonAPItakestwomainarguments: • an address family that speciﬁes the type of address family and thus the underlying networking stack that will be used with the socket.
This parameter can be either socket.AF_INET or socket.AF_INET6.
socket.AF_INET, which corresponds to the TCP/IPv4 protocol stack is the default.
socket.AF_INET6correspondstotheTCP/IPv6protocolstack.
• atypeindicatesthetypeofservicewhichisexpectedfromthenetworkingstack.
socket.STREAM(the default)correspondstothereliablebytestreamconnection-orientedservice.
socket.DGRAMcorresponds totheconnectionlessservice.
AsimpleclientthatsendsarequesttoaserverisoftenwrittenasfollowsindescriptionsofthesocketAPI.
# A simple client of the connectionless service import socket import sys HOSTIP=sys.argv[1] PORT=int(sys.argv[2]) MSG="Hello, World!"
s = socket.socket( socket.AF_INET, socket.SOCK_DGRAM ) s.sendto( MSG, (HOSTIP, PORT) ) Atypicalusageofthisapplicationwouldbe python client.py 127.0.0.1 12345 where 127.0.0.1 is the IPv4 address of the host (in this case the localhost) where the server is running and 12345theportoftheserver.
Theﬁrstoperationisthecreationofthesocket.
Twoparametersmustbespeciﬁedwhilecreatingasocket.
The ﬁrst parameter indicates the address family and the second the socket type.
The second operation is the transmissionofthemessagebyusingsendtototheserver.
Itshouldbenotedthatsendtotakesasarguments themessagetobetransmittedandatuplethatcontainstheIPv4addressoftheserveranditsportnumber.
The code shown above supports only the TCP/IPv4 protocol stack.
To use the TCP/IPv6 protocol stack the socket must be created by using the socket.AF_INET6 address family.
Forcing the application devel- opertoselectTCP/IPv4orTCP/IPv6whencreatingasocketisamajorhurdleforthedeploymentandusage of TCP/IPv6 in the global Internet [Cheshire2010].
While most operating systems support both TCP/IPv4 and TCP/IPv6, many applications still only use TCP/IPv4 by default.
In the long term, the socket API should be able to handle TCP/IPv4 and TCP/IPv6 transparently and should not force the application developer to always specifywhetheritusesTCP/IPv4orTCP/IPv6.
AnotherimportantissuewiththesocketAPIassupportedbypythonisthatitforcestheapplicationtodealwith IP addresses instead of dealing directly with domain names.
This limitation dates from the early days of the socket API in Unix 4.2BSD.
At that time, the DNS was not widely available and only IP addresses could be used.
MostapplicationsrelyonDNSnamestointeractwithserversandthisutilisationoftheDNSplaysavery importantroletoscalewebserversandcontentdistributionnetworks.Tousedomainnames,theapplicationneeds 56 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 to perform the DNS resolution by using the getaddrinfo method.
This method queries the DNS and builds thesockaddrdatastructurewhichisusedbyothermethodsofthesocketAPI.Inpython,getaddrinfotakes severalarguments: • anamethatisthedomainnameforwhichtheDNSwillbequeried • anoptionalportnumberwhichistheportnumberoftheremoteserver • an optional address family which indicates the address family used for the DNS request.
socket.AF_INET(resp.
socket.AF_INET6)indicatesthatanIPv4(IPv6)addressisexpected.
Fur- thermore, thepythonsocketAPIallowsanapplicationtousesocket.AF_UNSPECtoindicatethatitis abletouseeitherIPv4orIPv6addresses.
• anoptionalsockettypewhichcanbeeithersocket.SOCK_DGRAMorsocket.SOCK_STREAM In today’s Internet hosts that are capable of supporting both IPv4 and IPv6, all applications should be able to handle both IPv4 and IPv6 addresses.
When used with the socket.AF_UNSPEC parameter, the socket.getaddrinfomethodreturnsalistoftuplescontainingalltheinformationtocreateasocket.
import socket socket.getaddrinfo(’www.example.net’,80,socket.AF_UNSPEC,socket.SOCK_STREAM) [ (30, 1, 6, ’’, (’2001:db8:3080:3::2’, 80, 0, 0)), (2, 1, 6, ’’, (’203.0.113.225’, 80))] Intheexampleabove,socket.getaddrinforeturnstwotuples.
Theﬁrstonecorrespondstothesockaddr containingtheIPv6addressoftheremoteserverandthesecondcorrespondstotheIPv4information.Duetosome peculiarities of IPv6 and IPv4, the format of the two tuples is not exactly the same, but the key information in bothcasesarethenetworklayeraddress(2001:db8:3080:3::2and203.0.113.225)andtheportnumber (80).
Theotherparametersareseldomused.
socket.getaddrinfo can be used to build a simple client that queries the DNS and contact the server by using either IPv4 or IPv6 depending on the addresses returned by the socket.getaddrinfo method.
The client below iterates over the list of addresses returned by the DNS and sends its request to the ﬁrst destination addressforwhichitcancreateasocket.
Otherstrategiesareofcoursepossible.
Forexample,ahostrunningin anIPv6networkmightprefertoalwaysuseIPv6whenIPv6isavailable19.Anotherexampleisthehappyeyeballs approachwhichisbeingdiscussedwithintheIETF[WY2011].
Forexample,[WY2011]mentionsthatsomeweb browsers try to use the ﬁrst address returned by socket.getaddrinfo.
If there is no answer within some smalldelay(e.g.
300milliseconds),thesecondaddressistried.
import socket import sys HOSTNAME=sys.argv[1] PORT=int(sys.argv[2]) MSG="Hello, World!"
for a in socket.getaddrinfo(HOSTNAME, PORT, socket.AF_UNSPEC,socket.SOCK_DGRAM,0, socket.AI_PASSIVE) : address_family,sock_type,protocol,canonicalname, sockaddr=a try: s = socket.socket(address_family, sock_type) except socket.error: s = None print "Could not create socket" continue if s is not None: s.sendto(MSG, sockaddr) break Now that we have described the utilisation of the socket API to write a simple client using the connectionless transportservice,letushaveacloserlookatthereliablebytestreamtransportservice.
Asexplainedabove,this service is invoked by creating a socket of type socket.SOCK_STREAM.
Once a socket has been created, a client will typically connect to the remote server, send some data, wait for an answer and eventually close the connection.
Theseoperationsareperformedbycallingthefollowingmethods: 19MostoperatingsystemstodaybydefaultprefertouseIPv6whentheDNSreturnsbothanIPv4andanIPv6addressforaname.
See http://ipv6int.net/systems/formoredetailedinformation.
3.3.
Writingsimplenetworkedapplications 57 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • socket.connect : this method takes a sockaddr data structure, typically returned by socket.getaddrinfo, as argument.
It may fail and raise an exception if the remote server cannot bereached.
• socket.send: thismethodtakesastringasargumentandreturnsthenumberofbytesthatwereactually sent.
Thestringwillbetransmittedasasequenceofconsecutivebytestotheremoteserver.
Applications areexpectedtocheckthevaluereturnedbythismethodandshouldresendthebytesthatwerenotsend.
• socket.recv:thismethodtakesanintegerasargumentthatindicatesthesizeofthebufferthathasbeen allocatedtoreceivethedata.Animportantpointtonoteabouttheutilisationofthesocket.recvmethod isthatasitrunsaboveabytestreamservice,itmayreturnanyamountofbytes(uptothesizeofthebuffer providedbytheapplication).
Theapplicationneedstocollectallthereceiveddataandthereisnoguarantee thatsomedatasentbytheremotehostbyusingasinglecalltothesocket.sendmethodwillbereceived bythedestinationwithasinglecalltothesocket.recvmethod.
• socket.shutdown: thismethodisusedtoreleasetheunderlyingconnection.
Onsomeplatforms,itis possibletospecifythedirectionoftransfertobereleased(e.g.
socket.SHUT_WRtoreleasetheoutgoing directionorsocket.SHUT_RDWRtoreleasebothdirections).
• socket.close: thismethodisusedtoclosethesocket.
Itcallssocket.shutdowniftheunderlying connectionisstillopen.
Withthesemethods,itisnowpossibletowriteasimpleHTTPclient.ThisclientoperatesoverbothIPv6andIPv4 andwritesthehomepageoftheremoteserveronthestandardoutput.Italsoreportsthenumberofsocket.recv callsthatwereusedtoretrievethehomepage20.
#!/usr/bin/python # A simple http client that retrieves the first page of a web site import socket, sys if len(sys.argv)!=3 and len(sys.argv)!=2: print "Usage : ",sys.argv[0]," hostname [port]" hostname = sys.argv[1] if len(sys.argv)==3 : port=int(sys.argv[2]) else: port = 80 READBUF=16384 # size of data read from web server s=None for res in socket.getaddrinfo(hostname, port, socket.AF_UNSPEC, socket.SOCK_STREAM): af, socktype, proto, canonname, sa = res # create socket try: s = socket.socket(af, socktype, proto) except socket.error: s = None continue # connect to remote host try: print "Trying "+sa[0] s.connect(sa) except socket.error, msg: # socket failed s.close() s = None continue if s : 20Experimentswiththeclientindicatethatthenumberofsocket.recvcallscanvaryateachrun.
Therearevariousfactorsthatinﬂuence thenumberofsuchcallsthatarerequiredtoretrievesomeinformationfromaserver.
We’lldiscusssomeofthemafterhavingexplainedthe operationoftheunderlyingtransportprotocol.
58 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 print "Connected to "+sa[0] s.send(’GET / HTTP/1.1\r\nHost:’+hostname+’\r\n\r\n’) finished=False count=0 while not finished: data=s.recv(READBUF) count=count+1 if len(data)!=0: print repr(data) else: finished=True s.shutdown(socket.SHUT_WR) s.close() print "Data was received in ",count," recv calls" break Asmentionedabove,thesocketAPIisverylow-level.
Thisistheinterfacetothetransportservice.
Foracommon and simple task, like retrieving a document from the Web, there are much simpler solutions.
For example, the pythonstandardlibraryincludesseveralhigh-levelAPIstoimplementationsofvariousapplicationlayerprotocols includingHTTP.Forexample,thehttplibmodulecanbeusedtoeasilyaccessdocumentsviaHTTP.
#!/usr/bin/python # A simple http client that retrieves the first page of a web site, using # the standard httplib library import httplib, sys if len(sys.argv)!=3 and len(sys.argv)!=2: print "Usage : ",sys.argv[0]," hostname [port]" sys.exit(1) path = ’/’ hostname = sys.argv[1] if len(sys.argv)==3 : port = int(sys.argv[2]) else: port = 80 conn = httplib.HTTPConnection(hostname, port) conn.request("GET", path) r = conn.getresponse() print "Response is %i (%s)" % (r.status, r.reason) print r.read() Another module, urllib2 allows the programmer to directly use URLs.
This is much more simpler than directly usingsockets.
Butsimplicityisnottheonlyadvantageofusinghigh-levellibraries.
Theyallowtheprogrammertomanipulate higher-level concepts ( e.g.
I want the content pointed by this URL) but also include many features such as transparentsupportfortheutilisationofTLSorIPv6.
ThesecondtypeofapplicationsthatcanbewrittenbyusingthesocketAPIaretheservers.
Aserveristypically runs forever waiting to process requests coming from remote clients.
A server using the connectionless will typically start with the creation of a socket with the socket.socket.
This socket can be created above the TCP/IPv4 networking stack (socket.AF_INET) or the TCP/IPv6 networking stack (socket.AF_INET6), butnotbothbydefault.
Ifaserveriswillingtousethetwonetworkingstacks,itmustcreatetwothreads,oneto handletheTCP/IPv4socketandtheothertohandletheTCP/IPv6socket.
Itisunfortunatelyimpossibletodeﬁne asocketthatcanreceivedatafrombothnetworkingstacksatthesametimewiththepythonsocketAPI.
AserverusingtheconnectionlessservicewilltypicallyusetwomethodsfromthesocketAPIinadditiontothose thatwehavealreadydiscussed.
• socket.bindisusedtobindasockettoaportnumberandoptionallyanIPaddress.
Mostserverswill bind their socket to all available interfaces on the servers, but there are some situations where the server 3.3.
Writingsimplenetworkedapplications 59 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 mayprefertobeboundonlytospeciﬁcIPaddresses.
Forexample,aserverrunningonasmartphonemight wanttobeboundtotheIPaddressoftheWiFiinterfacebutnotonthe3Ginterfacethatismoreexpensive.
• socket.recvfrom is used to receive data from the underlying networking stack.
This method returns boththesender’saddressandthereceiveddata.
The code below illustrates a very simple server running above the connectionless transport service that simply printsonthestandardoutputallthereceivedmessages.
ThisserverusestheTCP/IPv6networkingstack.
import socket, sys PORT=int(sys.argv[1]) BUFF_LEN=8192 s=socket.socket(socket.AF_INET6, socket.SOCK_DGRAM) s.bind((’’,PORT,0,0)) while True: data, addr = s.recvfrom( BUFF_LEN ) if data=="STOP" : print "Stopping server" sys.exit(0) print "received from ", addr, " message:", data A server that uses the reliable byte stream service can also be built above the socket API.
Such a server starts by creating a socket that is bound to the port that has been chosen for the server.
Then the server calls the socket.listenmethod.
Thisinformstheunderlyingnetworkingstackofthenumberoftransportconnection attempts that can be queued in the underlying networking stack waiting to be accepted and processed by the server.
Theservertypicallyhasathreadwaitingonthesocket.acceptmethod.
Thismethodreturnsassoon as a connection attempt is received by the underlying stack.
It returns a socket that is bound to the established connectionandtheaddressoftheremotehost.Withthesemethods,itispossibletowriteaverysimplewebserver thatalwaysreturnsa404errortoallGET requestsanda501errorstoallotherrequests.
# An extremely simple HTTP server import socket, sys, time # Server runs on all IP addresses by default HOST=’’ # 8080 can be used without root priviledges PORT=8080 BUFLEN=8192 # buffer size s = socket.socket(socket.AF_INET6, socket.SOCK_STREAM) try: print "Starting HTTP server on port ", PORT s.bind((HOST,PORT,0,0)) except socket.error : print "Cannot bind to port :",PORT sys.exit(-1) s.listen(10) # maximum 10 queued connections while True: # a real server would be multithreaded and would catch exceptions conn, addr = s.accept() print "Connection from ", addr data=’’ while not ’\n’ in data : # wait until first line has been received data = data+conn.recv(BUFLEN) if data.startswith(’GET’): # GET request conn.send(’HTTP/1.0 404 Not Found\r\n’) # a real server should serve files else: 60 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 # other type of HTTP request conn.send(’HTTP/1.0 501 Not implemented\r\n’) now = time.strftime("%a, %d %b %Y %H:%M:%S", time.localtime()) conn.send(’Date: ’ + now +’\r\n’) conn.send(’Server: Dummy-HTTP-Server\r\n’) conn.send(’\r\n’) conn.shutdown(socket.SHUT_RDWR) conn.close() This server is far from a production-quality web server.
A real web server would use multiple threads and/or non-blockingIOtoprocessalargenumberofconcurrentrequests21 .
Furthermore,itwouldalsoneedtohandle all the errors that could happen while receiving data over a transport connection.
These are outside the scope of this section and additional information on more complex networked applications may be found elsewhere.
For example, [RG2010] provides an in-depth discussion of the utilisation of the socket API with python while [SFR2004]remainsanexcellentsourceofinformationonthesocketAPIinC.
3.4 Summary In this chapter, we began by describing the client-server and peer-to-peer models.
We then described, in detail, threeimportantfamiliesofprotocolsintheapplicationlayer.
TheInternetidentiﬁeshostsbyusing32bitsIPv4 or 128 bits IPv6.
However, using these addresses directly inside applications would be difﬁcult for the humans thatusethem.
WehaveexplainedhowtheDomainNameSystemallowsthemappingofnamestocorresponding addresses.
We have described both the DNS protocol that runs above UDP and the naming hierarchy.
We have then discussed one of the oldest applications on the Internet : electronic mail.
We have described the format of emailmessagesanddescribedtheSMTPprotocolthatisusedtosendemailmessagesaswellasthePOPprotocol thatisusedbyemailrecipientstoretrievetheiremailmessagesfromtheirserver.
Finally,wehaveexplainedthe protocolsthatareusedintheworldwidewebandtheHyperTextTransferProtocolinparticular.
3.5 Exercises Thissectioncontainsseveralexercisesandsmallchallengesabouttheapplicationlayerprotocols.
3.5.1 The Domain Name System The Domain Name System (DNS) plays a key role in the Internet today as it allows applications to use fully qualiﬁeddomainnames(FQDN)insteadofIPv4orIPv6addresses.
Manytoolsallowtoperformqueriesthrough DNSservers.
Forthisexercise,wewillusedigwhichisinstalledonmostUnixsystems.
Atypicalusageofdigisasfollows dig @server -t type fqdn where • serveristheIPaddressorthenameofaDNSserverorresolver • type is the type of DNS record that is requested by the query such as NS for a nameserver, A for an IPv4 address,AAAAforanIPv6address,MXforamailrelay,... • fqdnisthefullyqualiﬁeddomainnamebeingqueried 1.
WhataretheIPaddressesoftheresolversthatthedigimplementationyouareusingrelieson22?
21Therearemanyproductionqualitywebserverssoftwareavailable.apacheisaverycomplexbutwidelyusedone.thttpdandlighttpdare lesscomplexandtheirsourcecodeisprobablyeasiertounderstand.
22OnaLinuxmachine,theDescriptionsectionofthedigmanpagetellsyouwheredigﬁndsthelistofnameserverstoquery.
3.4.
Summary 61 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 2.
WhatistheIPaddressthatcorrespondstoinl.info.ucl.ac.be?
WhichtypeofDNSquerydoesdigsendto obtainthisinformation?
3.
WhichtypeofDNSrequestdoyouneedtosendtoobtainthenameserversthatareresponsibleforagiven domain?
4.
Whatarethenameserversthatareresponsibleforthebetop-leveldomain?
Wherearetheylocated?
Isit possibletouseIPv6toquerythem?
5.
Whenrunwithoutanyparameter, digqueriesoneoftherootDNSserversandretrievesthelistofthethe names of all root DNS servers.
For technical reasons, there are only 13 different root DNS servers.
This information is also available as a text ﬁle from http://www.internic.net/zones/named.root What are the IP addressesofalltheseservers.
CantheybequeriedbyusingIPv623?
6.
AssumenowthatyouareresidinginanetworkwherethereisnoDNSresolverandthatyouneedtostart yourqueryfromtheDNSroot.
• UsedigtosendaquerytooneoftheserootserverstoﬁndtheIPaddressoftheDNSserver(s)(NS record)responsiblefortheorgtop-leveldomain • UsedigtosendaquerytooneoftheseDNSserverstoﬁndtheIPaddressoftheDNSserver(s)(NS record)responsibleforroot-servers.org‘ • Continueuntilyouﬁndtheserverresponsibleforwww.root-servers.org • WhatisthelifetimeassociatedtothisIPaddress?
7.
Performthesameanalysisforapopularwebsitesuchaswww.google.com.
Whatisthelifetimeassociated tothisIPaddress?
Ifyouperformthesamerequestseveraltimes,doyoualwaysreceivethesameanswer ?
CanyouexplainwhyalifetimeisassociatedtotheDNSreplies?
8.
Usedigtoﬁndthemailrelaysusedbytheuclouvain.beandgmail.comdomains.
WhatistheTTLofthese records(usethe+ttlid optionwhenusingdig)?
CanyouexplainthepreferencesusedbytheMX records.
YoucanﬁndmoreinformationabouttheMXrecordsinRFC974 9.
UsedigtoquerytheIPv6address(DNSrecordAAAA)ofthefollowinghosts • www.sixxs.net • www.google.com • ipv6.google.com 10.
Whendigisrun,theheadersectioninitsoutputindicatestheidtheDNSidentiﬁerusedtosendthequery.
Doesyourimplementationofdiggeneratesrandomidentiﬁers?
dig -t MX gmail.com ; <<>> DiG 9.4.3-P3 <<>> -t MX gmail.com ;; global options: printcmd ;; Got answer: ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 25718 11.
ADNSimplementationsuchasdigandmoreimportantlyanameresolversuchasbindorunbound,always checksthatthereceivedDNSreplycontainsthesameidentiﬁerastheDNSrequestthatitsent.
Whyisthis soimportant?
• Imagine an attacker who is able to send forged DNS replies to, for example, associate www.bigbank.comtohisownIPaddress.
HowcouldheattackaDNSimplementationthat – sendsDNSrequestscontainingalwaysthesameidentiﬁer – sendsDNSrequestscontainingidentiﬁersthatareincrementedbyoneaftereachrequest – sendsDNSrequestscontainingrandomidentiﬁers 23YoumayobtainadditionalinformationabouttherootDNSserversfromhttp://www.root-servers.org 62 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 12.
The DNS protocol can run over UDP and over TCP.
Most DNS servers prefer to use UDP because it consumesfewerresourcesontheserver.
However,TCPisusefulwhenalargeanswerisexpectedorwhen alargeanswermust.
YoucanforcetheutilisationofTCPbyusingdig+tcp.
UseTCPandUDPtoquerya rootDNSserver.
IsitfastertoreceiveananswerviaTCPorviaUDP?
3.5.2 Internet email protocols Many Internet protocols are ASCII-based protocols where the client sends requests as one line of ASCII text terminatedbyCRLFandtheserverreplieswithoneofmorelinesofASCIItext.
UsingsuchASCIImessageshas severaladvantagescomparedtoprotocolsthatrelyonbinaryencodedmessages • the messages exchanged by the client and the server can be easily understood by a developer or network engineerbysimplyreadingthemessages • itisofteneasytowriteasmallprototypethatimplementsapartoftheprotocol • itispossibletotestaservermanuallybyusingtelnetTelnetisaprotocolthatallowstoobtainaterminalon aremoteserver.
Forthis,telnetopensaTCPconnectionwiththeremoteserveronport23.
However,most telnetimplementationsallowtheusertospecifyanalternateportastelnethostsportWhenusedwithaport number as parameter, telnet opens a TCP connection to the remote host on the speciﬁed port.
telnet can thusbeusedtotestanyserverusinganASCII-basedprotocolontopofTCP.Notethatifyouneedtostop a running telnet session, Ctrl-C will not work as it will be sent by telnet to the remote host over the TCP connection.
Onmanytelnet implementationsyoucantypeCtrl-]tofreezetheTCPconnectionandreturn tothetelnetinterface.
1.
AssumethatAlicesendsanemailfromheralice@yahoo.comaccounttoBobwhousesbob@yahoo.com.
Whichprotocolsareinvolvedinthetransmissionofthisemail?
2.
SamequestionwhenAlicesendsanemailtoherfriendTrudy,trudy@gmail.com.
3.
Beforetheadventofwebmailandfeaturerichmailers,emailwaswrittenandreadbyusingcommandline tools on servers.
Using your account on sirius.info.ucl.ac.be use the /bin/mail command line tool to send anemailtoyourselfonthishost.
Thisserverstoreslocalemailsinthe/var/maildirectorywithoneﬁleper user.
Checkwith/bin/morethecontentofyourmailﬁleandtrytounderstandwhichlineshavebeenadded bytheserverintheheaderofyouremail.
4.
Useyourpreferredemailtooltosendanemailmessagetoyourselfcontainingasinglelineoftext.
Most emailtoolshavetheabilitytoshowthesourceofthemessage,usethisfunctiontolookatthemessagethat you sent and the message that you received.
Can you ﬁnd an explanation for all the lines that have been addedtoyoursinglelineemail24?
5.
TheﬁrstversionoftheSMTPprotocolwasdeﬁnedinRFC821.
ThecurrentstandardforSMTPisdeﬁned inRFC5321ConsideringonlyRFC821whatarethemaincommandsoftheSMTPprotocol25?
6.
WhenusingSMTP,howdoyourecogniseapositivereplyfromanegativeone?
7.
ASMTPserverisadaemonprocessthatcanfailduetoabugorlackofresources(e.g.
memory).
Network administrators often install tools 26 that regularly connect to their servers to check that they are operating correctly.
AsimplesolutionistoopenaTCPconnectiononport25totheSMTPserver’shost27 .
Ifthe connectionisestablished,thisimpliesthatthereisaprocesslistening.
WhatisthereplysentbytheSMTP serverwhenyoutypethefollowingcommand?
telnetcnp3.info.ucl.ac.be25 24 SinceRFC821,SMTPhasevolvedalotduenotablytothegrowingusageofemailandtheneedtoprotecttheemailsystemagainst spammers.
Itisunlikelythatyouwillbeabletoexplainalltheadditionallinesthatyouwillﬁndinemailheaders,butwe’lldiscussthem together.
25AshorterdescriptionoftheSMTPprotocolmaybefoundonwikipediaathttp://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol 26Therearemanymonitoringtoolsavailable.nagiosisaverypopularopensourcemonitoringsystem.
27Notethatusingtelnettoconnecttoaremotehostonport25maynotworkinallnetworks.Duetothespamproblem,manyISPnetworks donotallowtheircustomerstouseportTCP25directlyandforcethemtousetheISP’smailrelaytoforwardtheiremail.
Thankstothis,if asoftwaresendingspamhasbeeninstalledonthePCofoneoftheISP’scustomers,thissoftwarewillnotbeabletosendahugeamountof spam.Ifyouconnecttonostromo.info.ucl.ac.befromtheﬁxedstationsinINGI’slab,youshouldnotbeblocked.
3.5.
Exercises 63 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Warning: Donot trythisonarandomSMTPserver.
Theexercisesproposedinthissectionshould onlyberunontheSMTPserverdedicatedfortheseexercises: cnp3.info.ucl.ac.be.
Ifyoutrythem onaproductionSMTPserver,theadministratorofthisservermaybecomeangry.
1.
ContinuetheSMTPsessionthatyoustartedabovebysendingthegreetingscommand(HELOfollowedby thefullyqualiﬁeddomainnameofyourhost)andterminatethesessionbysendingtheQUIT command.
2.
The minimum SMTP session above allows to verify that the SMTP is running.
However, this does not alwaysimplythatmailcanbedelivered.
Forexample,largeSMTPserversoftenuseadatabasetostoreall the email addresses that they serve.
To verify the correct operation of such a server, one possibility is to usetheVRFY command.
OpenaSMTPsessiononthelab’sSMTPserver(cnp3.info.ucl.ac.be)andusethis commandtoverifythatyouraccountisactive.
3.
NowthatyouknowthebasicsofopeningandclosinganSMTPsession,youcannowsendemailmanually by using the MAIL FROM:, RCPT TO: and DATA commands.
Use these commands to manually send an emailtoINGI2141@cnp3.info.ucl.ac.be.
DonotforgettoincludetheFrom:,To:andSubject:linesinyour header.
1.
ByusingSMTP,isitpossibletosendanemailthatcontainsexactlythefollowingASCIIart?
.
.. ... 1.
Mostemailagentsallowyoutosendemailincarbon-copy(cc:) andalsoinblind-carbon-copy(bcc:) toa recipient.
HowdoesaSMTPserversupportsthesetwotypesofrecipients?
2.
Intheearlydays,emailwasreadbyusingtoolssuchas/bin/mailormoreadvancedtext-basedmailreaders suchaspineorelm.
Today, emailsarestoredondedicatedserversandretrievedbyusingprotocolssuch as POP_ or IMAP.
From the user’s viewpoint, can you list the advantages and drawbacks of these two protocols?
3.
TheTCPprotocolsupports65536differentportsnumbers.
Manyoftheseportnumbershavebeenreserved for some applications.
The ofﬁcial repository of the reserved port numbers is maintained by the Internet AssignedNumbersAuthority(IANA)onhttp://www.iana.org/assignments/port-numbers28.
Usingthisin- formation, what is the default port number for the POP3 protocol ?
Does it run on top of UDP or TCP ?
4.
ThePostOfﬁceProtocol(POP)isarathersimpleprotocoldescribedinRFC1939.
POPoperatesinthree phases.
Theﬁrstphaseistheauthorizationphasewheretheclientprovidesausernameandapassword.
The secondphaseisthetransactionphasewheretheclientcanretrieveemails.Thelastphaseistheupdatephase wheretheclientﬁnalisesthetransaction.
WhatarethemainPOPcommandsandtheirparameters?
When aPOPserverreturnsananswer,howcanyoueasilydeterminewhethertheanswerispositiveornegative?
5.
Onsmartphones,usersoftenwanttoavoiddownloadinglargeemailsoveraslowwirelessconnection.
How couldaPOPclientonlydownloademailsthataresmallerthan5KBytes?
6.
Open a POP sessionwith the lab’s POP server (nostromo.info.ucl.ac.be) by using theusername and pass- wordthatyoureceived.
Verifythatyourusernameandpasswordareacceptedbytheserver.
7.
Thelab’sPOPservercontainsascriptthatrunseveryminuteandsendstwoemailmessagestoyouraccount ifyouremailfolderisempty.
UsePOPtoretrievethesetwoemailsandprovidethesecretmessagetoyour teachingassistant.
3.5.3 The HyperText Transfer Protocol 1.
What are the main methods supported by the ﬁrst version of the HyperText Transfer Protocol (HTTP) deﬁnedinRFC194529?
Whatarethemaintypesofrepliessentbyahttpserver30?
2.
Systemadministratorswhoareresponsibleforwebserversoftenwanttomonitortheseserversandcheck thattheyarerunningcorrectly.
AsaHTTPserverusesTCPonport80, thesimplestsolutionistoopena 28OnUnixhosts,asubsetoftheportassignmentsisoftenplacedin/etc/services 29Seesection5ofRFC1945 30Seesection6.1ofRFC1945 64 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 TCPconnectiononport80andcheckthattheTCPconnectionisacceptedbytheremotehost.
However,as HTTPisanASCII-basedprotocol,itisalsoveryeasytowriteasmallscriptthatdownloadsawebpageon theserverandcomparesitscontentwiththeexpectedone.
Usetelnettoverifythatawebserverisrunning onhostrembrandt.info.ucl.ac.be31 3.
Insteadofusingtelnetonport80,itisalsopossibletouseacommand-linetoolsuchascurlUsecurlwith the–trace-asciitraceﬁleoptiontostoreintraceﬁlealltheinformationexchangedbycurlwhenaccessing theserver.
• whatistheversionofHTTPusedbycurl?
• canyouexplainthedifferentheadersplacedbycurlintherequest?
• canyouexplainthedifferentheadersfoundintheresponse?
4.
HTTP1.1,speciﬁedinRFC2616forcestheclienttousetheHost: inallitsrequests.
HTTP1.0doesnot deﬁnetheHost: header,bymostimplementationssupportit.
Byusingtelnetandcurlretrievetheﬁrstpage of the http://totem.info.ucl.ac.be webserver by sending http requests with and without the Host: header.
Explainthedifferencebetweenthetwo32.
5.
By using dig and curl , determine on which physical host the http://www.info.ucl.ac.be, http://inl.info.ucl.ac.beandhttp://totem.info.ucl.ac.bearehosted 6.
Usecurlwiththe–trace-asciiﬁlenametoretrievehttp://www.google.com.
Explainwhatabrowsersuchas ﬁrefoxwoulddowhenretrievingthisURL.
7.
The headers sent in a HTTP request allow the client to provide additional information to the server.
One oftheseheadersistheLanguageheaderthatallowstoindicatethepreferredlanguageoftheclient33.
For example, curl -HAccept-Language:en http://www.google.be’ will send to ‘http://www.google.be a HTTP requestindicatingEnglish(en)asthepreferredlanguage.
DoesgoogleprovideadifferentpageinFrench (fr) and Walloon (wa) ?
Same question for http://www.uclouvain.be (given the size of the homepage, use difftocomparethedifferentpagesretrievedfromwww.uclouvain.be) 8.
Compare the size of the http://www.yahoo.com and http://www.google.com web pages by downloading themwithcurl 9.
Whatisahttpcookie?
Listsomeadvantagesanddrawbacksofusingcookiesonwebservers.
10.
Youarenowresponsibleforthehttp://www.belgium.be.
Thegovernmenthasbuilttwodatacenterscontain- ing1000serverseachinAntwerpandNamur.
Thiswebsitecontainsstaticinformationandyourobjective istobalancetheloadbetweenthedifferentserversandensuresthattheserviceremainsupevenifoneof the datacenters is disconnected from the Internet due to ﬂooding or other natural disasters.
What are the techniquesthatyoucanusetoachievethisgoal?
31TheminimumcommandsenttoaHTTPserverisGET/HTTP/1.0followedbyCRLFandablankline 32UsedigtoﬁndtheIPaddressusedbytotem.info.ucl.ac.be 33Thelistofavailablelanguagetagscanbefoundathttp://www.loc.gov/standards/iso639-2/php/code_list.phpAdditionalinformationabout thesupportofmultiplelanguagesinInternetprotocolsmaybefoundinRFC5646 3.5.
Exercises 65 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 66 Chapter3.
TheapplicationLayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor Foundation4 CHAPTER The transport layer Asthetransportlayerisbuiltontopofthenetworklayer,itisimportanttoknowthekeyfeaturesofthenetwork layer service.
There are two types of network layer services : connectionless and connection-oriented.
The connectionlessnetworklayerserviceisthemostwidespread.
Itsmaincharacteristicsare: • theconnectionlessnetworklayerservicecanonlytransferSDUsoflimitedsize1 • theconnectionlessnetworklayerservicemaydiscardSDUs • theconnectionlessnetworklayerservicemaycorruptSDUs • theconnectionlessnetworklayerservicemaydelay,reorderorevenduplicateSDUs Figure4.1: Thetransportlayerinthereferencemodel Theseimperfectionsoftheconnectionlessnetworklayerservicewillbecomemuchcleareroncewehaveexplained thenetworklayerinthenextchapter.
Atthispoint,letussimplyassumethattheseimperfectionsoccurwithout tryingtounderstandwhytheyoccur.
Sometransportprotocolscanbeusedontopofaconnection-orientednetworkservice,suchasclass0oftheISO Transport Protocol (TP0) deﬁned in [X224] , but they have not been widely used.
We do not discuss in further detailsuchutilisationofaconnection-orientednetworkserviceinthisbook.
Thischapterisorganisedasfollows.
Wewillﬁrstexplainhowitispossibletoprovideareliabletransportservice ontopofanunreliableconnectionlessnetworkservice.
Forthis,weexplainthemainmechanismsfoundinsuch protocols.
Then,wewillstudyindetailthetwotransportprotocolsthatareusedintheInternet.
Webeginwiththe UserDatagramProtocol(UDP)whichprovidesasimpleconnectionlesstransportservice.
Then,wewilldescribe indetailtheTransmissionControlProtocol(TCP),includingitscongestioncontrolmechanism.
4.1 Principles of a reliable transport protocol Inthissection,wedepictareliabletransportprotocolrunningaboveaconnectionlessnetworklayerservice.
For this,weﬁrstassumethatthenetworklayerprovidesaperfectservice,i.e.
: • theconnectionlessnetworklayerservicenevercorruptsSDUs 1ManynetworklayerservicesareunabletocarrySDUsthatarelargerthan64KBytes.
67 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • theconnectionlessnetworklayerserviceneverdiscardsSDUs • theconnectionlessnetworklayerserviceneverdelays,reordersnorduplicateSDUs • theconnectionlessnetworklayerservicecansupportSDUsofanysize Wewillthenremoveeachoftheseassumptionsoneaftertheotherinordertobetterunderstandthemechanisms usedtosolveeachimperfection.
4.1.1 Reliable data transfer on top of a perfect network service The transport layer entity interacts with both a user in the application layer and an entity in the network layer.
Accordingtothereferencemodel,theseinteractionswillbeperformedusingDATA.reqandDATA.indprimitives.
However, to simplify the presentation and to avoid confusion between a DATA.req primitive issued by the user ofthetransportlayerentity,andaDATA.reqissuedbythetransportlayerentityitself,wewillusethefollowing terminology: • the interactions between the user and the transport layer entity are represented by using the classical DATA.req,DATA.indprimitives • the interactions between the transport layer entity and the network layer service are represented by using sendinsteadofDATA.reqandrecvdinsteadofDATA.ind Thisisillustratedintheﬁgurebelow.
Data.req Data.ind Transport entity Send Recvd Figure4.2: Interactionsbetweenthetransportlayer,itsuser,anditsnetworklayerprovider When running on top of a perfect connectionless network service, a transport level entity can simply issue a send(SDU) upon arrival of a DATA.req(SDU).
Similarly, the receiver issues a DATA.ind(SDU) upon receipt of a recvd(SDU).SuchasimpleprotocolissufﬁcientwhenasingleSDUissent.
Unfortunately, thisisnotalwayssufﬁcienttoensureareliabledeliveryoftheSDUs.
Considerthecasewherea clientsendstensofSDUstoaserver.
Iftheserverisfasterthattheclient, itwillbeabletoreceiveandprocess allthesegmentssentbytheclientanddelivertheircontenttoitsuser.
However, iftheserverisslowerthanthe client, problems may arise.
The transport layer entity contains buffers to store SDUs that have been received as a Data.request from the application but have not yet been sent via the network service.
If the application is fasterthanthenetworklayer,thebufferbecomesfullandtheoperatingsystemsuspendstheapplicationtoletthe transportentityemptyitstransmissionqueue.Thetransportentityalsousesabuffertostorethesegmentsreceived fromthenetworklayerthathavenotyetbeenprocessedbytheapplication.Iftheapplicationisslowtoprocessthe data,thisbufferbecomesfullandthetransportentityisnotabletoacceptanymorethesegmentsfromthenetwork layer.
Thebuffersofthetransportentityhavealimitedsize2andiftheyoverﬂow,thetransportentityisforcedto 2 Intheapplicationlayer, mostserversareimplementedasprocesses.
Thenetworkandtransportlayerontheotherhandareusually implementedinsidetheoperatingsystemandtheamountofmemorythattheycanuseislimitedbytheamountofmemoryallocatedtothe entirekernel.
68 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 A B Data.request(a) Segment(a) Data.ind(a) Figure4.3: Thesimplesttransportprotocol discardreceivedsegments.
Tosolvethisproblem,ourtransportprotocolmustincludeafeedbackmechanismthatallowsthereceivertoinform thesenderthatithasprocessedasegmentandthatanotheronecanbesent.
Thisfeedbackisrequiredeventhough thenetworklayerprovidesaperfectservice.
Toincludesuchafeedback,ourtransportprotocolmustprocesstwo typesofsegments: • datasegmentscarryingaSDU • controlsegmentscarryinganacknowledgmentindicatingthattheprevioussegmentwasprocessedcorrectly Thesetwotypesofsegmentscanbedistinguishedusingasegmentcomposedoftwoparts: • theheaderthatcontainsonebitsetto0indatasegmentsandsetto1incontrolsegments • thepayloadthatcontainstheSDUsuppliedbytheuserapplication Thetransportentitycanthenbemodelledasaﬁnitestatemachine,containingtwostatesforthereceiverandtwo statesforthesender.
Theﬁgurebelowprovidesagraphicalrepresentationofthisstatemachinewiththesender aboveandthereceiverbelow.
Figure4.4: Finitestatemachineofthesimplesttransportprotocol 4.1.
Principlesofareliabletransportprotocol 69 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 TheaboveFSMshowsthatthesenderhastowaitforanacknowledgementfromthereceiverbeforebeingableto transmitthenextSDU.Theﬁgurebelowillustratestheexchangeofafewsegmentsbetweentwohosts.
A B Data.req(a) D(a) Data.ind(a) Data.req(b) C(OK) D(b) Data.ind(b) C(OK) Figure4.5: Timesequencediagramillustratingtheoperationofthesimplesttransportprotocol 4.1.2 Reliable data transfer on top of an imperfect network service Thetransportlayermustdealwiththeimperfectionsofthenetworklayerservice.
Therearethreetypesofimper- fectionsthatmustbeconsideredbythetransportlayer: 1.
Segmentscanbecorruptedbytransmissionerrors 2.
Segmentscanbelost 3.
Segmentscanbereorderedorduplicated To deal with these types of imperfections, transport protocols rely on different types of mechanisms.
The ﬁrst problemistransmissionerrors.
Thesegmentssentbyatransportentityisprocessedbythenetworkanddatalink layersandﬁnallytransmittedbythephysicallayer.
Alloftheselayersareimperfect.
Forexample, thephysical layermaybeaffectedbydifferenttypesoferrors: • randomisolatederrorswherethevalueofasinglebithasbeenmodiﬁedduetoatransmissionerror • randombursterrorswherethevaluesofnconsecutivebitshavebeenchangedduetotransmissionerrors • randombitcreationsandrandombitremovalswherebitshavebeenaddedorremovedduetotransmission errors The only solution to protect against transmission errors is to add redundancy to the segments that are sent.
In- formationTheorydeﬁnestwomechanismsthatcanbeusedtotransmitinformationoveratransmissionchannel affectedbyrandomerrors.
Thesetwomechanismsaddredundancytotheinformationsent,toallowthereceiver todetectorsometimesevencorrecttransmissionerrors.
Adetaileddiscussionofthesemechanismsisoutsidethe scopeofthischapter,butitisusefultoconsiderasimplemechanismtounderstanditsoperationanditslimitations.
Informationtheorydeﬁnescodingschemes.Therearedifferenttypesofcodingschemes,butletusfocusoncoding schemesthatoperateonbinarystrings.
Acodingschemeisafunctionthatmapsinformationencodedasastring ofmbitsintoastringofnbits.
Thesimplestcodingschemeistheevenparitycoding.
Thiscodingschemetakes anmbitssourcestringandproducesanm+1bitscodedstringwheretheﬁrstmbitsofthecodedstringarethebits ofthesourcestringandthelastbitofthecodedstringischosensuchthatthecodedstringwillalwayscontainan evennumberofbitssetto1.
Forexample: • 1001isencodedas10010 • 1101isencodedas11011 70 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 ThisparityschemehasbeenusedinsomeRAMsaswellastoencodecharacterssentoveraserialline.
Itiseasy toshowthatthiscodingschemeallowsthereceivertodetectasingletransmissionerror,butitcannotcorrectit.
However,iftwoormorebitsareinerror,thereceivermaynotalwaysbeabletodetecttheerror.
Somecodingschemesallowthereceivertocorrectsometransmissionerrors.
Forexample, considerthecoding schemethatencodeseachsourcebitasfollows: • 1isencodedas111 • 0isencodedas000 Forexample,considerasenderthatsends111.
Ifthereisonebitinerror,thereceivercouldreceive011or101or 110.
Inthesethreecases,thereceiverwilldecodethereceivedbitpatternasa1sinceitcontainsamajorityofbits setto1.
Iftherearetwobitsinerror,thereceiverwillnotbeableanymoretorecoverfromthetransmissionerror.
This simple coding scheme forces the sender to transmit three bits for each source bit.
However, it allows the receivertocorrectsinglebiterrors.
Moreadvancedcodingsystemsthatallowtorecoverfromerrorsareusedin severaltypesofphysicallayers.
Transport protocols use error detection schemes, but none of the widely used transport protocols rely on error correctionschemes.
Todetecterrors,asegmentisusuallydividedintotwoparts: • aheaderthatcontainstheﬁeldsusedbythetransportprotocoltoensurereliabledelivery.
Theheadercon- tainsachecksumorCyclicalRedundancyCheck(CRC)[Williams1993]thatisusedtodetecttransmission errors • apayloadthatcontainstheuserdatapassedbytheapplicationlayer.
Somesegmentheadersalsoincludealength,whichindicatesthetotallengthofthesegmentorthelengthofthe payload.
Thesimplesterrordetectionschemeisthechecksum.
Achecksumisbasicallyanarithmeticsumofallthebytes thatasegmentiscomposedof.
Therearedifferenttypesofchecksums.
Forexample,aneightbitchecksumcan becomputedasthearithmeticsumofallthebytesof(boththeheaderandtrailerof)thesegment.
Thechecksum is computed by the sender before sending the segment and the receiver veriﬁes the checksum upon reception of each segment.
The receiver discards segments received with an invalid checksum.
Checksums can be easily implemented in software, but their error detection capabilities are limited.
Cyclical Redundancy Checks (CRC) havebettererrordetectioncapabilities[SGP98],butrequiremoreCPUwhenimplementedinsoftware.
Note: Checksums,CRCs,... MostoftheprotocolsintheTCP/IPprotocolsuiterelyonthesimpleInternetchecksuminordertoverifythatthe receivedsegmenthasnotbeenaffectedbytransmissionerrors.
Despiteitspopularityandeaseofimplementation, the Internet checksum is not the only available checksum mechanism.
Cyclical Redundancy Checks (CRC) are very powerful error detection schemes that are used notably on disks, by many datalink layer protocols and ﬁle formatssuchasziporpng.Theycaneasilybeimplementedefﬁcientlyinhardwareandhavebettererror-detection capabilities than the Internet checksum [SGP98] .
However, when the ﬁrst transport protocols were designed, CRCs were considered to be too CPU-intensive for software implementations and other checksum mechanisms wereusedinstead.
TheTCP/IPcommunitychosetheInternetchecksum,theOSIcommunitychosetheFletcher checksum[Sklower89].
Now,thereareefﬁcienttechniquestoquicklycomputeCRCsinsoftware[Feldmeier95] ,theSCTPprotocolinitiallychosetheAdler-32checksumbutreplaceditrecentlywithaCRC(seeRFC3309).
Thesecondimperfectionofthenetworklayeristhatsegmentsmaybelost.
Aswewillseelater,themaincause of packet losses in the network layer is the lack of buffers in intermediate routers.
Since the receiver sends an acknowledgementsegmentafterhavingreceivedeachdatasegment,thesimplestsolutiontodealwithlossesisto usearetransmissiontimer.
Whenthesendersendsasegment, itstartsaretransmissiontimer.
Thevalueofthis retransmissiontimershouldbelargerthantheround-trip-time, i.e.
thedelaybetweenthetransmissionofadata segment and the reception of the corresponding acknowledgement.
When the retransmission timer expires, the senderassumesthatthedatasegmenthasbeenlostandretransmitsit.
Thisisillustratedintheﬁgurebelow.
Unfortunately,retransmissiontimersalonearenotsufﬁcienttorecoverfromsegmentlosses.
Letusconsider,as anexample,thesituationdepictedbelowwhereanacknowledgementislost.
Inthiscase,thesenderretransmits 4.1.
Principlesofareliabletransportprotocol 71 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 A B Data.req(a) start timer D(a) Data.ind(a) C(OK) cancel timer Data.req(b) start timer D(b) Lost segment timer expires D(b) Data.ind(b) C(OK) Figure4.6: Usingretransmissiontimerstorecoverfromsegmentlosses the data segment that has not been acknowledged.
Unfortunately, as illustrated in the ﬁgure below, the receiver considerstheretransmissionasanewsegmentwhosepayloadmustbedeliveredtoitsuser.
A B Data.req(a) start timer D(a) C(OK) Data.ind(a) cancel timer Data.req(b) start timer D(b) C(OK) Data.ind(b) timer expires D(b) Lost segment C(OK) Data.ind(b) !!!!!!
Figure4.7: Limitationsofretransmissiontimers To solve this problem, transport protocols associate a sequence number to each data segment.
This sequence number is one of the ﬁelds found in the header of data segments.
We use the notation D(S,...) to indicate a data segment whose sequence number ﬁeld is set to S. The acknowledgements also contain a sequence number indicatingthedatasegmentsthatitisacknowledging.
WeuseOKStoindicateanacknowledgementsegmentthat conﬁrmsthereceptionofD(S,...).
Thesequencenumberisencodedasabitstringofﬁxedlength.
Thesimplest transportprotocolistheAlternatingBitProtocol(ABP).
TheAlternatingBitProtocolusesasinglebittoencodethesequencenumber.
Itcanbeimplementedeasily.
The senderandthereceiversonlyrequireafourstatesFiniteStateMachine.
72 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Recvd(C(NAK?))
OR Data.req(SDU) Recvd(C(OK1)) or timer expires send(D(0,SDU,CRC)) send(D(0,SDU,CRC)) start_timer() Wait Wait restart_timer() for for D(0,...) OK0/NAK Recvd(C(OK1)) Recvd(C(OK0)) cancel_timer() cancel_timer() Data.req(SDU) send(D(1,SDU,CRC)) start_timer() Wait Wait AAllll ccoorrrruupptteedd for for sseeggmmeennttss aarree OK1/NAK D(1,...) ddiissccaarrddeedd iinn aallll ssttaatteess Recvd(C(NAK?))
or recvd(C(OK0)) or timer expires send(D(1,SDU,CRC)) restart-timer() Figure4.8: Alternatingbitprotocol: SenderFSM TheinitialstateofthesenderisWaitforD(0,...).
Inthisstate,thesenderwaitsforaData.request.
Theﬁrstdata segment that it sends uses sequence number 0.
After having sent this segment, the sender waits for an OK0 ac- knowledgement.Asegmentisretransmitteduponexpirationoftheretransmissiontimerorifanacknowledgement withanincorrectsequencenumberhasbeenreceived.
ThereceiverﬁrstwaitsforD(0,...).
IfthesegmentcontainsacorrectCRC,itpassestheSDUtoitsuserandsends OK0.
IfthesegmentcontainsaninvalidCRC,itisimmediatelydiscarded.
Then, thereceiverwaitsforD(1,...).
Inthisstate,itmayreceiveaduplicateD(0,...) oradatasegmentwithaninvalidCRC.Inbothcases,itreturnsan OK0segmenttoallowthesendertorecoverfromthepossiblelossofthepreviousOK0segment.
Note: Dealingwithcorruptedsegments The receiver FSM of the Alternating bit protocol discards all segments that contain an invalid CRC.
This is the safestapproachsincethereceivedsegmentcanbecompletelydifferentfromthesegmentsentbytheremotehost.
Areceivershouldnotattemptatextractinginformationfromacorruptedsegmentbecauseitcannotknowwhich portionofthesegmenthasbeenaffectedbytheerror.
Theﬁgurebelowillustratestheoperationofthealternatingbitprotocol.
The Alternating Bit Protocol can recover from transmission errors and segment losses.
However, it has one importantdrawback.
Considertwohoststhataredirectlyconnectedbya50Kbits/secsatellitelinkthathasa250 millisecondspropagationdelay.
Ifthesehostssend1000bitssegments,thenthemaximumthroughputthatcanbe achievedbythealternatingbitprotocolisonesegmentevery20+250+250=520millisecondsifweignorethe transmissiontimeoftheacknowledgement.
Thisislessthan2Kbits/sec!
Go-back-nandselectiverepeat To overcome the performance limitations of the alternating bit protocol, transport protocols rely on pipelining.
This technique allows a sender to transmit several consecutive segments without being forced to wait for an acknowledgementaftereachsegment.
Eachdatasegmentcontainsasequencenumberencodedinannbitsﬁeld.
Pipeliningallowsthesendertotransmitsegmentsatahigherrate,butweneedtoensurethatthereceiverdoesnot 4.1.
Principlesofareliabletransportprotocol 73 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Recvd(D(1,SDU,CRC)) Recvd(D(0,SDU,CRC)) AND IsOK(CRC,SDU) AND IsOK(CRC,SDU) Send(C(OK1)) Recvd(D(0,SDU,CRC)) Send(C(OK0)) AND IsOK(CRC,SDU) - Data.ind(SDU) Send(C(OK0)) Wait Process for SDU0 Wait D(0,...) OK for D(1,...) Recvd(D(1,SDU,CRC)) - AND IsOK(CRC,SDU) Send(C(OK1)) Data.ind(SDU) AAllll ccoorrrruupptteedd sseeggmmeennttss aarree Process ddiissccaarrddeedd iinn aallll ssttaatteess SDU1 OK Figure4.9: Alternatingbitprotocol: ReceiverFSM A B Data.req(a) D(0,a) Data.req(b) C(OK0) Data.ind(a) D(1, b) Retransmission timer D(1,b) Data.ind(b) C(OK1) Duplicate detected C(OK1) Data.req(c) D(0, c) Retransmission timer D(0, c) Data.ind(c) Figure4.10: Operationofthealternatingbitprotocol Figure4.11: Pipeliningtoimprovetheperformanceoftransportprotocols 74 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 becomeoverloaded.
Otherwise,thesegmentssentbythesenderarenotcorrectlyreceivedbythedestination.
The transportprotocolsthatrelyonpipeliningallowthesendertotransmitW unacknowledgedsegmentsbeforebeing forcedtowaitforanacknowledgementfromthereceivingentity.
Thisisimplementedbyusingaslidingwindow.
Theslidingwindowisthesetofconsecutivesequencenumbers that the sender can use when transmitting segments without being forced to wait for an acknowledgement.
The ﬁgurebelowshowsaslidingwindowcontainingﬁvesegments(6,7,8,9and10).
Twoofthesesequencenumbers (6 and7)havebeenusedtosendsegmentsandonlythreesequencenumbers(8,9and10)remaininthesliding window.
Theslidingwindowissaidtobeclosedonceallsequencenumberscontainedintheslidingwindowhave beenused.
Figure4.12: Theslidingwindow Theﬁgurebelowillustratestheoperationoftheslidingwindow.
Theslidingwindowshowncontainsthreeseg- ments.
The sender can thus transmit three segments before being forced to wait for an acknowledgement.
The sliding window moves to the higher sequence numbers upon reception of acknowledgements.
When the ﬁrst acknowledgement (OK0) is received, it allows the sender to move its sliding window to the right and sequence number3becomesavailable.
ThissequencenumberisusedlatertotransmitSDUd.
Figure4.13: Slidingwindowexample In practice, as the segment header encodes the sequence number in an n bits string, only the sequence numbers between0and2n−1canbeused.
Thisimpliesthatthesamesequencenumberisusedfordifferentsegmentsand thattheslidingwindowwillwrap.
Thisisillustratedintheﬁgurebelowassumingthat2bitsareusedtoencode thesequencenumberinthesegmentheader.
NotethatuponreceptionofOK1,thesenderslidesitswindowand canusesequencenumber0again.
Unfortunately,segmentlossesdonotdisappearbecauseatransportprotocolisusingaslidingwindow.
Torecover fromsegmentlosses,aslidingwindowprotocolmustdeﬁne: • aheuristictodetectsegmentlosses • aretransmissionstrategytoretransmitthelostsegments.
4.1.
Principlesofareliabletransportprotocol 75 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.14: Utilisationoftheslidingwindowwithmoduloarithmetic The simplest sliding window protocol uses go-back-n recovery.
Intuitively, go-back-n operates as follows.
A go-back-n receiver is as simple as possible.
It only accepts the segments that arrive in-sequence.
A go-back- n receiver discards any out-of-sequence segment that it receives.
When go-back-n receives a data segment, it alwaysreturnsanacknowledgementcontainingthesequencenumberofthelastin-sequencesegmentthatithas received.
Thisacknowledgementissaidtobecumulative.
Whenago-back-nreceiversendsanacknowledgement forsequencenumberx,itimplicitlyacknowledgesthereceptionofallsegmentswhosesequencenumberisearlier than x.
A key advantage of these cumulative acknowledgements is that it is easy to recover from the loss of an acknowledgement.
Consider for example a go-back-n receiver that received segments 1, 2 and 3.
It sent OK1, OK2andOK3.
Unfortunately,OK1andOK2werelost.
Thankstothecumulativeacknowledgements,whenthe receiverreceivesOK3,itknowsthatallthreesegmentshavebeencorrectlyreceived.
TheﬁgurebelowshowstheFSMofasimplego-back-nreceiver.
Thisreceiverusestwovariables: lastack and next.
nextisthenextexpectedsequencenumberandlastackthesequencenumberofthelastdatasegmentthathas beenacknowledged.
Thereceiveronlyacceptsthesegmentsthatarereceivedinsequence.
maxseqisthenumber ofdifferentsequencenumbers(2n).
All corrupted Recvd(D(next,SDU,CRC)) segments are AND IsOK(CRC,SDU) discarded in all states Data.ind(SDU) Process Wait SDU OK - send(C(OK,next,CRC)); Recvd(D(t<>next,SDU,CRC)) lastack = next AND IsOK(CRC,SDU) next=(next+1) % maxseq; discard(SDU); send(C(OK,lastack ,CRC)); Figure4.15: Go-back-n: receiverFSM A go-back-n sender is also very simple.
It uses a sending buffer that can store an entire sliding window of segments3.
Thesegmentsaresentwithincreasingsequencenumber(modulomaxseq).
Thesendermustwaitfor 3Thesizeoftheslidingwindowcanbeeitherﬁxedforagivenprotocolornegotiatedduringtheconnectionestablishmentphase.
We’ll seelaterthatitisalsopossibletochangethesizeoftheslidingwindowduringtheconnection’slifetime.
76 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 an acknowledgement once its sending buffer is full.
When a go-back-n sender receives an acknowledgement, it removesfromthesendingbufferalltheacknowledgedsegmentsandusesaretransmissiontimertodetectsegment losses.
Asimplego-back-nsendermaintainsoneretransmissiontimerperconnection.
Thistimerisstartedwhen theﬁrstsegmentissent.
Whenthego-back-nsenderreceivesanacknowledgement,itrestartstheretransmission timeronlyiftherearestillunacknowledgedsegmentsinitssendingbuffer.Whentheretransmissiontimerexpires, the go-back-n sender assumes that all the unacknowledged segments currently stored in its sending buffer have beenlost.
Itthusretransmitsalltheunacknowledgedsegmentsinthebufferandrestartsitsretransmissiontimer.
AAllll ccoorrrruupptteedd sseeggmmeennttss aarree Data.req(SDU) ddiissccaarrddeedd iinn aallll ssttaatteess size(buffer) < w if (seq==unack) { start_timer ; } insert_in_buffer(seq, SDU); send(D(seq,SDU,CRC)); seq=(seq+1) % maxseq; Recvd(C(OK,t,CRC)) and CRCOK(C(OK,t,CRC)) timer expires remove acked seqs from buffer; for all (i, SDU) in buffer unpack = (t+1) % maxseq; { send(D(i,SDU,CRC)); } if (unpack==seq) { restart_timer(); cancel_timer(); } else { restart_timer(); } Figure4.16: Go-back-n: senderFSM The operation of go-back-n is illustrated in the ﬁgure below.
In this ﬁgure, note that upon reception of the out- of-sequencesegmentD(2,c),thereceiverreturnsacumulativeacknowledgementC(OK,0)thatacknowledgesall the segments that have been received in sequence.
The lost segment is retransmitted upon the expiration of the retransmissiontimer.
Figure4.17: Go-back-n: example Themainadvantageofgo-back-nisthatitcanbeeasilyimplemented,anditcanalsoprovidegoodperformance whenonlyafewsegmentsarelost.
However,whentherearemanylosses,theperformanceofgo-back-nquickly dropsfortworeasons: • thego-back-nreceiverdoesnotacceptout-of-sequencesegments • thego-back-nsenderretransmitsallunacknowledgedsegmentsonceitshasdetectedaloss Selectiverepeatisabetterstrategytorecoverfromsegmentlosses.
Intuitively,selectiverepeatallowsthereceiver toacceptout-of-sequencesegments.Furthermore,whenaselectiverepeatsenderdetectslosses,itonlyretransmits thesegmentsthathavebeenlostandnotthesegmentsthathavealreadybeencorrectlyreceived.
4.1.
Principlesofareliabletransportprotocol 77 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 AselectiverepeatreceivermaintainsaslidingwindowofW segmentsandstoresinabuffertheout-of-sequence segments that it receives.
The ﬁgure below shows a ﬁve segment receive window on a receiver that has already receivedsegments7and9.
Figure4.18: Thereceivingwindowwithselectiverepeat A selective repeat receiver discards all segments having an invalid CRC, and maintains the variable lastack as thesequencenumberofthelastin-sequencesegmentthatithasreceived.
Thereceiveralwaysincludesthevalue of lastack in the acknowledgements that it sends.
Some protocols also allow the selective repeat receiver to acknowledge the out-of-sequence segments that it has received.
This can be done for example by placing the list of the sequence numbers of the correctly received, but out-of-sequence segments in the acknowledgements togetherwiththelastackvalue.
Whenaselectiverepeatreceiverreceivesadatasegment,itﬁrstveriﬁeswhetherthesegmentisinsideitsreceiving window.
If yes, the segment is placed in the receive buffer.
If not, the received segment is discarded and an acknowledgement containing lastack is sent to the sender.
The receiver then removes all consecutive segments starting at lastack (if any) from the receive buffer.
The payloads of these segments are delivered to the user, lastackandthereceivingwindowareupdated,andanacknowledgementacknowledgingthelastsegmentreceived insequenceissent.
Theselectiverepeat sendermaintainsasendingbufferthatcanstoreuptoW unacknowledgedsegments.
These segmentsaresentaslongasthesendingbufferisnotfull.
Severalimplementationsofaselectiverepeat sender arepossible.
Asimpleimplementationistoassociatearetransmissiontimertoeachsegment.
Thetimerisstarted whenthesegmentissentandcancelleduponreceptionofanacknowledgementthatcoversthissegment.
Whena retransmissiontimerexpires,thecorrespondingsegmentisretransmittedandthisretransmissiontimerisrestarted.
Whenanacknowledgementisreceived,allthesegmentsthatarecoveredbythisacknowledgementareremoved fromthesendingbufferandtheslidingwindowisupdated.
The ﬁgure below illustrates the operation of selective repeat when segments are lost.
In this ﬁgure, C(OK,x) is usedtoindicatethatallsegments,uptoandincludingsequencenumberxhavebeenreceivedcorrectly.
Figure4.19: Selectiverepeat: example Pure cumulative acknowledgements work well with the go-back-n strategy.
However, with only cumulative ac- knowledgements a selective repeat sender cannot easily determine which data segments have been correctly re- ceivedafteradatasegmenthasbeenlost.
Forexample,intheﬁgureabove,thesecondC(OK,0)doesnotinform 78 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 explicitly the sender of the reception of D(2,c) and the sender could retransmit this segment although it has al- readybeenreceived.
Apossiblesolutiontoimprovetheperformanceofselectiverepeat istoprovideadditional informationaboutthereceivedsegmentsintheacknowledgementsthatarereturnedbythereceiver.
Forexample, the receiver could add in the returned acknowledgement the list of the sequence numbers of all segments that havealreadybeenreceived.
Suchacknowledgementsaresometimescalledselectiveacknowledgements.
Thisis illustratedintheﬁgurebelow.
Intheﬁgureabove,whenthesenderreceivesC(OK,0,[2]),itknowsthatallsegmentsuptoandincludingD(0,...) have been correctly received.
It also knows that segment D(2,...) has been received and can cancel the retrans- missiontimerassociatedtothissegment.
However,thissegmentshouldnotberemovedfromthesendingbuffer beforethereceptionofacumulativeacknowledgement(C(OK,2)intheﬁgureabove)thatcoversthissegment.
Note: Maximumwindowsizewithgo-back-nandselectiverepeat Atransportprotocolthatusesnbitstoencodeitssequencenumbercansendupto2ndifferentsegments.However, toensureareliabledeliveryofthesegments,go-back-nandselectiverepeat cannotuseasendingwindowof2n segments.
Consider ﬁrst go-back-n and assume that a sender sends 2n segments.
These segments are received in-sequence by the destination, but all the returned acknowledgements are lost.
The sender will retransmit all segmentsandtheywillallbeacceptedbythereceiveranddeliveredasecondtimetotheuser.
Itiseasytoseethat thisproblemcanbeavoidedifthemaximumsizeofthesendingwindowis2n−1segments.
Asimilarproblem occurs with selective repeat.
However, as the receiver accepts out-of-sequence segments, a sending window of 2n−1segmentsisnotsufﬁcienttoensureareliabledeliveryofallsegments.
Itcanbeeasilyshownthattoavoid thisproblem,aselectiverepeatsendercannotuseawindowthatislargerthan 2n segments.
2 Go-back-norselectiverepeatareusedbytransportprotocolstoprovideareliabledatatransferaboveanunreliable network layer service.
Until now, we have assumed that the size of the sliding window was ﬁxed for the entire lifetimeoftheconnection.
Inpracticeatransportlayerentityisusuallyimplementedintheoperatingsystemand sharesmemorywithotherpartsofthesystem.
Furthermore,atransportlayerentitymustsupportseveral(possibly hundreds or thousands) of transport connections at the same time.
This implies that the memory which can be usedtosupportthesendingorthereceivingbufferofatransportconnectionmaychangeduringthelifetimeofthe connection4.
Thus,atransportprotocolmustallowthesenderandthereceivertoadjusttheirwindowsizes.
Todealwiththisissue,transportprotocolsallowthereceivertoadvertisethecurrentsizeofitsreceivingwindow in all the acknowledgements that it sends.
The receiving window advertised by the receiver bounds the size of thesendingbufferusedbythesender.
Inpractice,thesendermaintainstwostatevariables: swin,thesizeofits sending window (that may be adjusted by the system) and rwin, the size of the receiving window advertised by thereceiver.
Atanytime,thenumberofunacknowledgedsegmentscannotbelargerthanmin(swin,rwin)5 .
The utilisationofdynamicwindowsisillustratedintheﬁgurebelow.
Thereceivermayadjustitsadvertisedreceivewindowbasedonitscurrentmemoryconsumption,butalsotolimit thebandwidthusedbythesender.
Inpractice,thereceivebuffercanalsoshrinkastheapplicationmaynotableto processthereceiveddataquicklyenough.Inthiscase,thereceivebuffermaybecompletelyfullandtheadvertised receivewindowmayshrinkto0.
Whenthesenderreceivesanacknowledgementwithareceivewindowsetto0, itisblockeduntilitreceivesanacknowledgementwithapositivereceivewindow.
Unfortunately,asshowninthe ﬁgurebelow,thelossofthisacknowledgementcouldcauseadeadlockasthesenderwaitsforanacknowledgement whilethereceiveriswaitingforadatasegment.
To solve this problem, transport protocols rely on a special timer : the persistence timer.
This timer is started by the sender whenever it receives an acknowledgement advertising a receive window set to 0.
When the timer expires,thesenderretransmitsanoldsegmentinordertoforcethereceivertosendanewacknowledgement,and hencesendthecurrentreceivewindowsize.
To conclude our description of the basic mechanisms found in transport protocols, we still need to discuss the impactofsegmentsarrivinginthewrongorder.
Iftwoconsecutivesegmentsarereordered,thereceiverrelieson theirsequencenumberstoreordertheminitsreceivebuffer.
Unfortunately,astransportprotocolsreusethesame sequencenumberfordifferentsegments,ifasegmentisdelayedforaprolongedperiodoftime,itmightstillbe acceptedbythereceiver.
ThisisillustratedintheﬁgurebelowwheresegmentD(1,b)isdelayed.
4Foradiscussiononhowthesendingbuffercanchange,seee.g.
[SMM1998] 5Notethatifthereceivewindowshrinks,itmighthappenthatthesenderhasalreadysentasegmentthatisnotanymoreinsideitswindow.
Thissegmentwillbediscardedbythereceiverandthesenderwillretransmititlater.
4.1.
Principlesofareliabletransportprotocol 79 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 A B Swin=3, rwin=1 Rwin=1 Data.req(a) 0 1 2 3 D(0,a) 0 1 2 3 Data.ind(a) 0 1 2 3 Swin=3, rwin=1 0 1 2 3 C(OK,0, w=1) Data.req(b) 2 new buffers become C(OK,0,w=3) available 0 1 2 3 Data.req(c) D(1,b) Swin=3, rwin=3 D(2,c) Data.ind(b) 0 1 2 3 Data.req(d) C(OK,2,w=3) 0 1 2 3 D(3,d) Figure4.20: Dynamicreceivingwindow Figure4.21: Riskofdeadlockwithdynamicwindows 80 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.22: Ambiguitiescausedbyexcessivedelays To deal with this problem, transport protocols combine two solutions.
First, they use 32 bits or more to encode the sequence number in the segment header.
This increases the overhead, but also increases the delay between thetransmissionoftwodifferentsegmentshavingthesamesequencenumber.
Second,transportprotocolsrequire thenetworklayertoenforceaMaximumSegmentLifetime(MSL).Thenetworklayermustensurethatnopacket remainsinthenetworkformorethanMSLseconds.
IntheInternettheMSLisassumed6 tobe2minutesRFC 793.
Notethatthislimitsthemaximumbandwidthofatransportprotocol.
Ifitusesnbitstoencodeitssequence numbers,thenitcannotsendmorethan2nsegmentseveryMSLseconds.
Transportprotocolsoftenneedtosenddatainbothdirections.Toreducetheoverheadcausedbytheacknowledge- ments,mosttransportprotocolsusepiggybacking.
Thankstothistechnique,atransportentitycanplaceinsidethe headerofthedatasegmentsthatitsends,theacknowledgementsandthereceivewindowthatitadvertisesforthe oppositedirectionofthedataﬂow.
Themainadvantageofpiggybackingisthatitreducestheoverheadasitisnot necessarytosendacompletesegmenttocarryanacknowledgement.
Thisisillustratedintheﬁgurebelowwhere the acknowledgement number is underlined in the data segments.
Piggybacking is only used when data ﬂows inbothdirections.
Areceiverwillgenerateapureacknowledgementwhenitdoesnotsenddataintheopposite directionasshowninthebottomoftheﬁgure.
Figure4.23: Piggybacking 6Aswewillseeinthenextchapter,theInternetdoesnotstrictlyenforcethisMSL.However,itisreasonabletoexpectthatmostpackets ontheInternetwillnotremaininthenetworkduringmorethan2minutes.Thereareafewexceptionstothisrule,suchasRFC1149whose implementationisdescribedinhttp://www.blug.linux.no/rfc1149/buttherearefewreallinkssupportingRFC1149intheInternet.
4.1.
Principlesofareliabletransportprotocol 81 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Thelastpointtobediscussedaboutthedatatransfermechanismsusedbytransportprotocolsistheprovisionofa bytestreamservice.
Asindicatedintheﬁrstchapter,thebytestreamserviceiswidelyusedinthetransportlayer.
The transport protocols that provide a byte stream service associate a sequence number to all the bytes that are sentandplacethesequencenumberoftheﬁrstbyteofthesegmentinthesegment’sheader.
Thisisillustratedin theﬁgurebelow.
Inthisexample,thesenderchoosestoputtwobytesineachoftheﬁrstthreesegments.
Thisis duetographicalreasons,arealtransportprotocolwoulduselargersegmentsinpractice.
However,thedivisionof thebytestreamintosegmentscombinedwiththelossesandretransmissionsexplainwhythebytestreamservice doesnotpreservetheSDUboundaries.
Figure4.24: Provisionofthebytestreamservice Connectionestablishmentandrelease The last points to be discussed about the transport protocol are the mechanisms used to establish and release a transportconnection.
Weexplainedintheﬁrstchapterstheserviceprimitivesusedtoestablishaconnection.
Thesimplestapproachto establishatransportconnectionwouldbetodeﬁnetwospecialcontrolsegments: CRandCA.TheCRsegmentis sentbythetransportentitythatwishestoinitiateaconnection.Iftheremoteentitywishestoaccepttheconnection, itrepliesbysendingaCAsegment.
ThetransportconnectionisconsideredtobeestablishedoncetheCAsegment hasbeenreceivedanddatasegmentscanbesentinbothdirections.
Figure4.25: Naivetransportconnectionestablishment Unfortunately,thisschemeisnotsufﬁcientforseveralreasons.
First,atransportentityusuallyneedstomaintain several transport connections with remote entities.
Sometimes, different users (i.e.
processes) running above a giventransportentityrequesttheestablishmentofseveraltransportconnectionstodifferentusersattachedtothe sameremotetransportentity.
Thesedifferenttransportconnectionsmustbeclearlyseparatedtoensurethatdata fromoneconnectionisnotpassedtotheotherconnections.
Thiscanbeachievedbyusingaconnectionidentiﬁer, chosen by the transport entities and placed inside each segment to allow the entity which receives a segment to easilyassociateittooneestablishedconnection.
82 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Second,asthenetworklayerisimperfect,theCRorCAsegmentcanbelost,delayed,orsufferfromtransmission errors.Todealwiththeseproblems,thecontrolsegmentsmustbeprotectedbyusingaCRCorchecksumtodetect transmissionerrors.
Furthermore, sincetheCAsegmentacknowledgesthereceptionoftheCRsegment, theCR segmentcanbeprotectedbyusingaretransmissiontimer.
Unfortunately,thisschemeisnotsufﬁcienttoensurethereliabilityofthetransportservice.
Considerforexample ashort-livedtransportconnectionwhereasingle,butimportanttransfer(e.g.moneytransferfromabankaccount) is sent.
Such a short-lived connection starts with a CR segment acknowledged by a CA segment, then the data segment is sent, acknowledged and the connection terminates.
Unfortunately, as the network layer service is unreliable, delays combined to retransmissions may lead to the situation depicted in the ﬁgure below, where a delayedCRanddatasegmentsfromaformerconnectionareacceptedbythereceivingentityasvalidsegments, andthecorrespondingdataisdeliveredtotheuser.
DuplicatingSDUsisnotacceptable,andthetransportprotocol mustsolvethisproblem.
Figure4.26: Duplicatetransportconnections?
Toavoidtheseduplicates,transportprotocolsrequirethenetworklayertoboundtheMaximumSegmentLifetime (MSL).
The organisation of the network must guarantee that no segment remains in the network for longer than MSL seconds.
On today’s Internet, MSL is expected to be 2 minutes.
To avoid duplicate transport connections, transport protocol entities must be able to safely distinguish between a duplicate CR segment and a new CR segment,withoutforcingeachtransportentitytorememberallthetransportconnectionsthatithasestablishedin thepast.
Aclassicalsolutiontoavoidrememberingtheprevioustransportconnectionstodetectduplicatesistouseaclock insideeachtransportentity.
Thistransportclockhasthefollowingcharacteristics: • the transport clock is implemented as a k bits counter and its clock cycle is such that 2k × cycle >> MSL.
Furthermore,thetransportclockcounterisincrementedeveryclockcycleandaftereachconnection establishment.
Thisclockisillustratedintheﬁgurebelow.
• thetransportclockmustcontinuetobeincrementedevenifthetransportentitystopsorreboots Figure4.27: Transportclock It should be noted that transport clocks do not need and usually are not synchronised to the real-time clock.
Precisely synchronising real-time clocks is an interesting problem, but it is outside the scope of this document.
See[Mills2006]foradetaileddiscussiononsynchronisingthereal-timeclock.
4.1.
Principlesofareliabletransportprotocol 83 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Thetransportclock iscombinedwithanexchangeofthreesegments, calledthethreewayhandshake, todetect duplicates.
Thisthreewayhandshakeoccursasfollows: 1.
The initiating transport entity sends a CR segment.
This segment requests the establishment of a transport connection.
It contains a connection identiﬁer (not shown in the ﬁgure) and a sequencenumber(seq=xintheﬁgurebelow)whosevalueisextractedfromthetransportclock .
ThetransmissionoftheCRsegmentisprotectedbyaretransmissiontimer.
2.
The remote transport entity processes the CR segment and creates state for the connection at- tempt.
At this stage, the remote entity does not yet know whether this is a new connection attempt or a duplicate segment.
It returns a CA segment that contains an acknowledgement numbertoconﬁrmthereceptionoftheCRsegment(ack=xintheﬁgurebelow)andasequence number (seq=y in the ﬁgure below) whose value is extracted from its transport clock.
At this stage,theconnectionisnotyetestablished.
3.
The initiating entity receives the CA segment.
The acknowledgement number of this segment conﬁrmsthattheremoteentityhascorrectlyreceivedtheCAsegment.
Thetransportconnection isconsideredtobeestablishedbytheinitiatingentityandthenumberingofthedatasegments startsatsequencenumberx.
Beforesendingdatasegments,theinitiatingentitymustacknowl- edgethereceivedCAsegmentsbysendinganotherCAsegment.
4.
Theremoteentityconsidersthetransportconnectiontobeestablishedafterhavingreceivedthe segment that acknowledges its CA segment.
The numbering of the data segments sent by the remoteentitystartsatsequencenumbery.
Thethreewayhandshakeisillustratedintheﬁgurebelow.
Figure4.28: Three-wayhandshake Thankstothethreewayhandshake,transportentitiesavoidduplicatetransportconnections.
Thisisillustratedby thethreescenariosbelow.
The ﬁrst scenario is when the remote entity receives an old CR segment.
It considers this CR segment as a connectionestablishmentattemptandrepliesbysendingaCAsegment.
However,theinitiatinghostcannotmatch thereceivedCAsegmentwithapreviousconnectionattempt.
Itsendsacontrolsegment(REJECT intheﬁgure below)tocancelthespuriousconnectionattempt.Theremoteentitycancelstheconnectionattemptuponreception ofthiscontrolsegment.
A second scenario is when the initiating entity sends a CR segment that does not reach the remote entity and receivesaduplicateCAsegmentfromapreviousconnectionattempt.
ThisduplicateCAsegmentcannotcontain avalidacknowledgementfortheCRsegmentasthesequencenumberoftheCRsegmentwasextractedfromthe transportclockoftheinitiatingentity.
TheCAsegmentisthusrejectedandtheCRsegmentisretransmittedupon expirationoftheretransmissiontimer.
The last scenario is less likely, but it it important to consider it as well.
The remote entity receives an old CR segment.
It notes the connection attempt and acknowledges it by sending a CA segment.
The initiating entity 84 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.29: Three-wayhandshake: recoveryfromaduplicateCR Figure4.30: Three-wayhandshake: recoveryfromaduplicateCA 4.1.
Principlesofareliabletransportprotocol 85 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 doesnothaveamatchingconnectionattemptandrepliesbysendingaREJECT.Unfortunately,thissegmentnever reachestheremoteentity.Instead,theremoteentityreceivesaretransmissionofanolderCAsegmentthatcontains thesamesequencenumberastheﬁrstCRsegment.
ThisCAsegmentcannotbeacceptedbytheremoteentityas a conﬁrmation of the transport connection as its acknowledgement number cannot have the same value as the sequencenumberoftheﬁrstCAsegment.
Figure4.31: Three-wayhandshake: recoveryfromduplicatesCRandCA Whenwediscussedtheconnection-orientedservice,wementionedthattherearetwotypesofconnectionreleases : abruptreleaseandgracefulrelease.
Theﬁrstsolutiontoreleaseatransportconnectionistodeﬁneanewcontrolsegment(e.g.
theDRsegment)and considertheconnectiontobereleasedoncethissegmenthasbeensentorreceived.
Thisisillustratedintheﬁgure below.
Figure4.32: Abruptconnectionrelease AstheentitythatsendstheDRsegmentcannotknowwhethertheotherentityhasalreadysentallitsdataonthe connection,SDUscanbelostduringsuchanabruptconnectionrelease.
Thesecondmethodtoreleaseatransportconnectionistoreleaseindependentlythetwodirectionsofdatatransfer.
OnceauserofthetransportservicehassentallitsSDUs,itperformsaDISCONNECT.reqforitsdirectionofdata transfer.
Thetransportentitysendsacontrolsegmenttorequestthereleaseoftheconnectionafterthedeliveryof allpreviousSDUstotheremoteuser.
ThisisusuallydonebyplacingintheDRthenextsequencenumberandby delivering the DISCONNECT.ind only after all previous DATA.ind.
The remote entity conﬁrms the reception of theDRsegmentandthereleaseofthecorrespondingdirectionofdatatransferbyreturninganacknowledgement.
Thisisillustratedintheﬁgurebelow.
86 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.33: Gracefulconnectionrelease 4.2 The User Datagram Protocol The User Datagram Protocol (UDP) is deﬁned in RFC 768.
It provides an unreliable connectionless transport serviceontopoftheunreliablenetworklayerconnectionlessservice.
ThemaincharacteristicsoftheUDPservice are: • theUDPservicecannotdeliverSDUsthatarelargerthan65507bytes7 • theUDPservicedoesnotguaranteethedeliveryofSDUs(lossesanddesquencingcanoccur) • theUDPservicewillnotdeliveracorruptedSDUtothedestination Compared to the connectionless network layer service, the main advantage of the UDP service is that it allows severalapplicationsrunningonahosttoexchangeSDUswithseveralotherapplicationsrunningonremotehosts.
Letusconsidertwohosts,e.g.aclientandaserver.Thenetworklayerserviceallowstheclienttosendinformation to the server, but if an application running on the client wants to contact a particular application running on the server,thenanadditionaladdressingmechanismisrequiredotherthantheIPaddressthatidentiﬁesahost,inorder todifferentiatetheapplicationrunningonahost.
Thisadditionaladdressingisprovidedbyportnumbers.
When aserverusingUDPisenabledonahost,thisserverregistersaportnumber.
Thisportnumberwillbeusedbythe clientstocontacttheserverprocessviaUDP.
TheﬁgurebelowshowsatypicalusageoftheUDPportnumbers.Theclientprocessusesportnumber1234while theserverprocessusesportnumber5678.
Whentheclientsendsarequest,itisidentiﬁedasoriginatingfromport number 1234 on the client host and destined to port number 5678 on the server host.
When the server process repliestothisrequest,theserver’sUDPimplementationwillsendthereplyasoriginatingfromport5678onthe serverhostanddestinedtoport1234ontheclienthost.
UDPusesasinglesegmentformatshownintheﬁgurebelow.
TheUDPheadercontainsfourﬁelds: • a16bitssourceport • a16bitsdestinationport • a16bitslengthﬁeld • a16bitschecksum Astheportnumbersareencodedasa16bitsﬁeld,therecanbeuptoonly65535differentserverprocessesthatare boundtoadifferentUDPportatthesametimeonagivenserver.
Inpractice,thislimitisneverreached.
However, itisworthnoticingthatmostimplementationsdividetherangeofallowedUDPportnumbersintothreedifferent ranges: 7Thislimitationisduetothefactthatthenetworklayer(IPv4andIPv6)cannottransportpacketsthatarelargerthan64KBytes.AsUDP doesnotincludeanysegmentation/reassemblymechanism,itcannotsplitaSDUbeforesendingit.
4.2.
TheUserDatagramProtocol 87 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.34: UsageoftheUDPportnumbers Figure4.35: UDPHeaderFormat • theprivilegedportnumbers(1<port<1024) • theephemeralportnumbers(ofﬁcially849152<=port<=65535) • theregisteredportnumbers(ofﬁcially1024<=port<49152) InmostUnixvariants,onlyprocesseshavingsystemadministratorprivilegescanbeboundtoportnumberssmaller than1024.
Well-knownserverssuchasDNS,NTPorRPC useprivilegedportnumbers.
Whenaclientneedsto use UDP, it usually does not require a speciﬁc port number.
In this case, the UDP implementation will allocate the ﬁrst available port number in the ephemeral range.
The range of registered port numbers should be used by servers.
Intheory, developersofnetworkserversshouldregistertheirportnumberofﬁciallythroughIANA,but fewdevelopersdothis.
Note: ComputationoftheUDPchecksum ThechecksumoftheUDPsegmentiscomputedover: • apseudoheadercontainingthesourceIPaddress,thedestinationIPaddressanda32bitsbitﬁeldcontaining themostsigniﬁcantbytesetto0,thesecondsetto17andthelengthoftheUDPsegmentinthelowertwo bytes • theentireUDPsegment,includingitsheader Thispseudo-headerallowsthereceivertodetecterrorsaffectingtheIPsourceordestinationaddressesplacedin theIPlayerbelow.
ThisisaviolationofthelayeringprinciplethatdatesfromthetimewhenUDPandIPwere elementsofasingleprotocol.
Itshouldbenotedthatifthechecksumalgorithmcomputesvalue‘0x0000’, then value ‘0xffff’ is transmitted.
A UDP segment whose checksum is set to ‘0x0000’ is a segment for which the transmitterdidnotcomputeachecksumupontransmission.
SomeNFSserverschosetodisableUDPchecksums for performance reasons, but this caused problems that were difﬁcult to diagnose.
In practice, there are rarely goodreasonstodisableUDPchecksums.
AdetaileddiscussionoftheimplementationoftheInternetchecksum maybefoundinRFC1071 Several types of applications rely on UDP.
As a rule of thumb, UDP is used for applications where delay must beminimisedorlossescanberecoveredbytheapplicationitself.
AﬁrstclassoftheUDP-basedapplicationsare applicationswheretheclientsendsashortrequestandexpectsaquickandshortanswer.TheDNSisanexampleof 8 A discussion of the ephemeral port ranges used by different TCP/UDP implementations may be found in http://www.ncftp.com/ncftpd/doc/misc/ephemeral_ports.html 88 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 aUDPapplicationthatisoftenusedinthewidearea.
However,inlocalareanetworks,manydistributedsystems relyonRemoteProcedureCall(RPC)thatisoftenusedontopofUDP.InUnixenvironments,theNetworkFile System(NFS)isbuiltontopofRPCandrunsfrequentlyontopofUDP.AsecondclassofUDP-basedapplications aretheinteractivecomputergamesthatneedtofrequentlyexchangesmallmessages,suchastheplayer’slocation or their recent actions.
Many of these games use UDP to minimise the delay and can recover from losses.
A thirdclassofapplicationsaremultimediaapplicationssuchasinteractiveVoiceoverIPorinteractiveVideoover IP.Theseinteractiveapplicationsexpectadelayshorterthanabout200millisecondsbetweenthesenderandthe receiverandcanrecoverfromlossesdirectlyinsidetheapplication.
4.3 The Transmission Control Protocol The Transmission Control Protocol (TCP) was initially deﬁned in RFC 793.
Several parts of the protocol have beenimprovedsincethepublicationoftheoriginalprotocolspeciﬁcation9.
However,thebasicsoftheprotocol remainandanimplementationthatonlysupportsRFC793shouldinter-operatewithtoday’simplementation.
TCPprovidesareliablebytestream,connection-orientedtransportserviceontopoftheunreliableconnectionless networkserviceprovidedbyIP.TCPisusedbyalargenumberofapplications,including: • Email(SMTP,POP,IMAP) • Worldwideweb(HTTP,...) • Mostﬁletransferprotocols(ftp,peer-to-peerﬁlesharingapplications,...) • remotecomputeraccess: telnet,ssh,X11,VNC,... • non-interactivemultimediaapplications: ﬂash OntheglobalInternet,mostoftheapplicationsusedinthewidearearelyonTCP.Manystudies10 havereported thatTCPwasresponsibleformorethan90%ofthedataexchangedintheglobalInternet.
To provide this service, TCP relies on a simple segment format that is shown in the ﬁgure below.
Each TCP segment contains a header described below and, optionally, a payload.
The default length of the TCP header is twentybytes,butsomeTCPheaderscontainoptions.
Figure4.36: TCPheaderformat ATCPheadercontainsthefollowingﬁelds: • Source and destination ports.
The source and destination ports play an important role in TCP, as they allow the identiﬁcation of the connection to which a TCP segment belongs.
When a client opens a TCP connection,ittypicallyselectsanephemeralTCPportnumberasitssourceportandcontactstheserverby usingtheserver’sportnumber.
Allthesegmentsthataresentbytheclientonthisconnectionhavethesame sourceanddestinationports.
Theserversendssegmentsthatcontainassource(resp.
destinationport,the 9AdetailedpresentationofallstandardisationdocumentsconcerningTCPmaybefoundinRFC4614 10 Several researchers have analysed the utilisation of TCP and UDP in the global Internet.
Most of these stud- ies have been performed by collecting all the packets transmitted over a given link during a period of a few hours or days and then analysing their headers to infer the transport protocol used, the type of application, ...
Recent studies include http://www.caida.org/research/trafﬁc-analysis/tcpudpratio/, https://research.sprintlabs.com/packstat/packetoverview.php or http://www.nanog.org/meetings/nanog43/presentations/Labovitz_internetstats_N43.pdf 4.3.
TheTransmissionControlProtocol 89 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 destination(resp.
source)portofthesegmentssentbytheclient(seeﬁgureUtilizationoftheTCPsource anddestinationports).
ATCPconnectionisalwaysidentiﬁedbyﬁvepiecesofinformation: – theIPaddressoftheclient – theIPaddressoftheserver – theportchosenbytheclient – theportchosenbytheserver – TCP • the sequence number (32 bits), acknowledgement number (32 bits) and window (16 bits) ﬁelds are used toprovideareliabledatatransfer, usingawindow-basedprotocol.
InaTCPbytestream, eachbyteofthe stream consumes one sequence number.
Their utilisation will be described in more detail in section TCP reliabledatatransfer • theUrgentpointer isusedtoindicatethatsomedatashouldbeconsideredasurgentinaTCPbytestream.
However,itisrarelyusedinpracticeandwillnotbedescribedhere.
Additionaldetailsabouttheutilisation ofthispointermaybefoundinRFC793,RFC1122or[Stevens1994] • theﬂagsﬁeldcontainsasetofbitﬂagsthatindicatehowasegmentshouldbeinterpretedbytheTCPentity receivingit: – theSYN ﬂagisusedduringconnectionestablishment – theFIN ﬂagisusedduringconnectionrelease – theRST isusedincaseofproblemsorwhenaninvalidsegmenthasbeenreceived – whentheACK ﬂagisset,itindicatesthattheacknowledgment ﬁeldcontainsavalidnumber.
Other- wise,thecontentoftheacknowledgmentﬁeldmustbeignoredbythereceiver – theURGﬂagisusedtogetherwiththeUrgentpointer – thePSH ﬂagisusedasanotiﬁcationfromthesendertoindicatetothereceiverthatitshouldpassall the data it has received to the receiving process.
However, in practice TCP implementations do not allowTCPuserstoindicatewhenthePSHﬂagshouldbesetandthustherearefewrealutilizationsof thisﬂag.
• thechecksumﬁeldcontainsthevalueoftheInternetchecksumcomputedovertheentireTCPsegmentand apseudo-headeraswithUDP • theReservedﬁeldwasinitiallyreservedforfutureutilization.
ItisnowusedbyRFC3168.
• the TCP Header Length (THL) or Data Offset ﬁeld is a four bits ﬁeld that indicates the size of the TCP headerin32bitwords.
ThemaximumsizeoftheTCPheaderisthus64bytes.
• theOptionalheaderextensionisusedtoaddoptionalinformationtotheTCPheader.
Thankstothisheader extension, it is possible to add new ﬁelds to the TCP header that were not planned in the original speciﬁ- cation.
This allowed TCP to evolve since the early eighties.
The details of the TCP header extension are explainedinsectionsTCPconnectionestablishmentandTCPreliabledatatransfer.
The rest of this section is organised as follows.
We ﬁrst explain the establishment and the release of a TCP connection, thenwediscussthemechanismsthatareusedbyTCPtoprovideareliablebytestreamservice.
We end the section with a discussion of network congestion and explain the mechanisms that TCP uses to avoid congestioncollapse.
4.3.1 TCP connection establishment ATCPconnectionisestablishedbyusingathree-wayhandshake.
Theconnectionestablishmentphaseusesthe sequencenumber,theacknowledgmentnumberandtheSYN ﬂag.
WhenaTCPconnectionisestablished,thetwo communicatinghostsnegotiatetheinitialsequencenumbertobeusedinbothdirectionsoftheconnection.
For this, each TCP entity maintains a 32 bits counter, which is supposed to be incremented by one at least every 4 90 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.37: UtilizationoftheTCPsourceanddestinationports microseconds and after each connection establishment 11.
When a client host wants to open a TCP connection withaserverhost,itcreatesaTCPsegmentwith: • theSYN ﬂagset • thesequencenumbersettothecurrentvalueofthe32bitscounteroftheclienthost’sTCPentity Upon reception of this segment (which is often called a SYN segment), the server host replies with a segment containing: • theSYN ﬂagset • thesequencenumbersettothecurrentvalueofthe32bitscounteroftheserverhost’sTCPentity • theACK ﬂagset • the acknowledgment number set to the sequence number of the received SYN segment incremented by 1 (mod232).
WhenaTCPentitysendsasegmenthavingx+1asacknowledgmentnumber,thisindicatesthat ithasreceivedalldatauptoandincludingsequencenumberxandthatitisexpectingdatahavingsequence numberx+1.
AstheSYN ﬂagwassetinasegmenthavingsequencenumberx,thisimpliesthatsettingthe SYN ﬂaginasegmentconsumesonesequencenumber.
ThissegmentisoftencalledaSYN+ACKsegment.
Theacknowledgmentconﬁrmstotheclientthattheserverhas correctlyreceivedtheSYNsegment.
ThesequencenumberoftheSYN+ACKsegmentisusedbytheserverhostto verifythattheclienthasreceivedthesegment.
UponreceptionoftheSYN+ACK segment,theclienthostreplies withasegmentcontaining: • theACK ﬂagset • theacknowledgmentnumber settothesequencenumber ofthereceivedSYN+ACK segmentincremented by1( mod232) At this point, the TCP connection is open and both the client and the server are allowed to send TCP segments containingdata.
Thisisillustratedintheﬁgurebelow.
Intheﬁgureabove,theconnectionisconsideredtobeestablishedbytheclientonceithasreceivedtheSYN+ACK segment,whiletheserverconsiderstheconnectiontobeestablisheduponreceptionoftheACKsegment.Theﬁrst datasegmentsentbytheclient(server)hasitssequencenumbersettox+1(resp.
y+1).
Note: ComputingTCP’sinitialsequencenumber IntheoriginalTCPspeciﬁcationRFC793, eachTCPentitymaintainedaclocktocomputetheinitialsequence number(ISN)placedintheSYN andSYN+ACK segments.
ThismadetheISNpredictableandcausedasecurity issue.
Thetypicalsecurityproblemwasthefollowing.
ConsideraserverthattrustsahostbasedonitsIPaddress 11This32bitscounterwasspeciﬁedinRFC793.
A32bitscounterthatisincrementedevery4microsecondswrapsinabout4.5hours.
ThisperiodismuchlargerthantheMaximumSegmentLifetimethatisﬁxedat2minutesintheInternet(RFC791,RFC1122).
4.3.
TheTransmissionControlProtocol 91 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.38: EstablishmentofaTCPconnection andallowsthesystemadministratortologinfromthishostwithoutgivingapassword12.Considernowanattacker whoknowsthisparticularconﬁgurationandisabletosendIPpacketshavingtheclient’saddressassource.
He cansendfakeTCPsegmentstotheserver,butdoesnotreceivetheserver’sanswers.
IfhecanpredicttheISN that ischosenbytheserver,hecansendafakeSYN segmentandshortlyafterthefakeACK segmentconﬁrmingthe receptionoftheSYN+ACK segmentsentbytheserver.
OncetheTCPconnectionisopen, hecanuseittosend anycommandtotheserver.
Tocounterthisattack,currentTCPimplementationsaddrandomnesstotheISN.One ofthesolutions,proposedinRFC1948istocomputetheISN as ISN = M + H(localhost, localport, remotehost, remoteport, secret).
whereMisthecurrentvalueoftheTCPclockandH‘isacryptographichashfunction.
‘localhostandremotehost (resp.
localportandremoteport)aretheIPaddresses(portnumbers)ofthelocalandremotehostandsecretisa randomnumberonlyknownbytheserver.
ThismethodallowstheservertousedifferentISNsfordifferentclients at the same time.
Measurements performed with the ﬁrst implementations of this technique showed that it was difﬁculttoimplementitcorrectly,buttoday’sTCPimplementationnowgenerategoodISNs.
Aservercould,ofcourse,refusetoopenaTCPconnectionuponreceptionofaSYNsegment.
Thisrefusalmaybe duetovariousreasons.TheremaybenoserverprocessthatislisteningonthedestinationportoftheSYNsegment.
Theservercouldalwaysrefuseconnectionestablishmentsfromthisparticularclient(e.g.
duetosecurityreasons) ortheservermaynothaveenoughresourcestoacceptanewTCPconnectionatthattime.
Inthiscase,theserver wouldreplywithaTCPsegmenthavingitsRST ﬂagsetandcontainingthesequencenumberofthereceivedSYN segmentasitsacknowledgmentnumber.
Thisisillustratedintheﬁgurebelow.
Wediscusstheotherutilizations oftheTCPRST ﬂaglater(seeTCPconnectionrelease).
Figure4.39: TCPconnectionestablishmentrejectedbypeer TCPconnectionestablishmentcanbedescribedasthefourstateFiniteStateMachineshownbelow.
InthisFSM, !X (resp.
?Y) indicates the transmission of segment X (resp.
reception of segment Y) during the corresponding transition.
Initistheinitialstate.
A client host starts in the Init state.
It then sends a SYN segment and enters the SYN Sent state where it waits foraSYN+ACK segment.
Then,itreplieswithanACK segmentandenterstheEstablished statewheredatacan 12OnmanydepartmentalnetworkscontainingUnixworkstations,itwascommontoallowusersononeofthehoststouserloginRFC1258 toruncommandsonanyoftheworkstationsofthenetworkwithoutgivinganypassword.Inthiscase,theremoteworkstation“authenticated” theclienthostbasedonitsIPaddress.Thiswasabadpracticefromasecurityviewpoint.
92 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.40: TCPFSMforconnectionestablishment be exchanged.
On the other hand, a server host starts in the Init state.
When a server process starts to listen to adestinationport, theunderlyingTCPentitycreatesaTCPcontrolblockandaqueuetoprocessincomingSYN segments.
UponreceptionofaSYNsegment,theserver’sTCPentityreplieswithaSYN+ACKandenterstheSYN RCVDstate.
ItremainsinthisstateuntilitreceivesanACK segmentthatacknowledgesitsSYN+ACK segment, withthisitthenenterstheEstablishedstate.
ApartfromthesetwopathsintheTCPconnectionestablishmentFSM,thereisathirdpaththatcorrespondstothe casewhenboththeclientandtheserversendaSYN segmenttoopenaTCPconnection13.
Inthiscase,theclient andtheserversendaSYN segmentandentertheSYNSentstate.
UponreceptionoftheSYN segmentsentbythe otherhost,theyreplybysendingaSYN+ACKsegmentandentertheSYNRCVDstate.
TheSYN+ACKthatarrives fromtheotherhostallowsittotransitiontotheEstablishedstate.
Theﬁgurebelowillustratessuchasimultaneous establishmentofaTCPconnection.
Figure4.41: SimultaneousestablishmentofaTCPconnection 13 Ofcourse, suchasimultaneousTCPestablishmentcanonlyoccurifthesourceportchosenbytheclientisequaltothedestination portchosenbytheserver.
Thismayhappenwhenahostcanservebothasaclientasaserverorinpeer-to-peerapplicationswhenthe communicatinghostsdonotuseephemeralportnumbers.
4.3.
TheTransmissionControlProtocol 93 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 DenialofServiceattacks When a TCP entity opens a TCP connection, it creates a Transmission Control Block (TCB).
The TCB containstheentirestatethatismaintainedbytheTCPentityforeachTCPconnection.
Duringconnection establishment, the TCB contains the local IP address, the remote IP address, the local port number, the remoteportnumber,thecurrentlocalsequencenumber,thelastsequencenumberreceivedfromtheremote entity.
Untilthemid1990s,TCPimplementationshadalimitonthenumberofTCPconnectionsthatcould beintheSYNRCVDstateatagiventime.Manyimplementationssetthislimittoabout100TCBs.Thislimit wasconsideredsufﬁcientevenforheavilyloadhttpserversgiventhesmalldelaybetweenthereceptionofa SYNsegmentandthereceptionoftheACKsegmentthatterminatestheestablishmentoftheTCPconnection.
Whenthelimitof100TCBsintheSYNRcvdstateisreached,theTCPentitydiscardsallreceivedTCPSYN segmentsthatdonotcorrespondtoanexistingTCB.
Thislimitof100TCBsintheSYNRcvdstatewaschosentoprotecttheTCPentityfromtheriskofoverload- ingitsmemorywithtoomanyTCBsintheSYNRcvdstate.However,itwasalsothereasonforanewtypeof DenialofService(DoS)attackRFC4987.ADoSattackisdeﬁnedasanattackwhereanattackercanrender aresourceunavailableinthenetwork.
Forexample,anattackermaycauseaDoSattackona2Mbpslink usedbyacompanybysendingmorethan2Mbpsofpacketsthroughthislink.
Inthiscase,theDoSattack wasmoresubtle.
AsaTCPentitydiscardsallreceivedSYNsegmentsassoonasithas100TCBsintheSYN Rcvdstate,anattackersimplyhadtosendafew100SYN segmentseverysecondtoaserverandneverreply to the received SYN+ACK segments.
To avoid being caught, attackers were of course sending these SYN segmentswithadifferentaddressthantheirownIPaddressa.
OnmostTCPimplementations,onceaTCB enteredtheSYNRcvdstate,itremainedinthisstateforseveralseconds,waitingforaretransmissionofthe initialSYN segment.
ThisattackwaslatercalledaSYNﬂoodattackandtheserversoftheISPnamedpanix wereamongtheﬁrsttobeaffectedbythisattack.
ToavoidtheSYNﬂoodattacks,recentTCPimplementationsnolongerentertheSYNRcvdstateuponrecep- tionofaSYNsegment.
Instead, theyreplydirectlywithaSYN+ACK segmentandwaituntilthereception ofavalidACK.ThisimplementationtrickisonlypossibleiftheTCPimplementationisabletoverifythat thereceivedACK segmentacknowledgestheSYN+ACK segmentsentearlierwithoutstoringtheinitialse- quencenumberofthisSYN+ACK segmentinaTCB.Thesolutiontosolvethisproblem,whichisknownas SYNcookiesistocomputethe32bitsoftheISN asfollows: • thehighorderbitscontaintheloworderbitsofacounterthatisincrementedslowly • theloworderbitscontainahashvaluecomputedoverthelocalandremoteIPaddressesandportsand arandomsecretonlyknowntotheserver The advantage of the SYN cookies is that by using them, the server does not need to create a TCB upon receptionoftheSYNsegmentandcanstillcheckthereturnedACKsegmentbyrecomputingtheSYNcookie.
aSendingapacketwithadifferentsourceIPaddressthantheaddressallocatedtothehostiscalledsendingaspoofedpacket.
RetransmittingtheﬁrstSYNsegment AsIPprovidesanunreliableconnectionlessservice,theSYN andSYN+ACK segmentssenttoopenaTCP connectioncouldbelost.
CurrentTCPimplementationsstartaretransmissiontimerwhentheysendtheﬁrst SYNsegment.
Thistimerisoftensettothreesecondsfortheﬁrstretransmissionandthendoublesaftereach retransmission RFC 2988.
TCP implementations also enforce a maximum number of retransmissions for theinitialSYN segment.
As explained earlier, TCP segments may contain an optional header extension.
In the SYN and SYN+ACK seg- ments, these options are used to negotiate some parameters and the utilisation of extensions to the basic TCP speciﬁcation.
TheﬁrstparameterwhichisnegotiatedduringtheestablishmentofaTCPconnectionistheMaximumSegment Size(MSS).TheMSSisthesizeofthelargestsegmentthataTCPentityisabletoprocess.
AccordingtoRFC 879,allTCPimplementationsmustbeabletoreceiveTCPsegmentscontaining536bytesofpayload.
However, most TCP implementations are able to process larger segments.
Such TCP implementations use the TCP MSS Option in the SYN/SYN+ACK segment to indicate the largest segment they are able to process.
The MSS value indicatesthemaximumsizeofthepayloadoftheTCPsegments.
Theclient(resp.
server)storesinitsTCBthe MSSvalueannouncedbytheserver(resp.
theclient).
94 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Another utilisation of TCP options during connection establishment is to enable TCP extensions.
For example, consider RFC 1323 (which is discussed in TCP reliable data transfer).
RFC 1323 deﬁnes TCP extensions to supporttimestampsandlargerwindows.
IftheclientsupportsRFC1323,itaddsaRFC1323optiontoitsSYN segment.
If the server understands this RFC 1323 option and wishes to use it, it replies with an RFC 1323 optionintheSYN+ACK segmentandtheextensiondeﬁnedinRFC1323isusedthroughouttheTCPconnection.
Otherwise,iftheserver’sSYN+ACK doesnotcontaintheRFC1323option,theclientisnotallowedtousethis extensionandthecorrespondingTCPheaderoptionsthroughouttheTCPconnection.
TCP’soptionmechanism isﬂexibleanditallowstheextensionofTCPwhilemaintainingcompatibilitywitholderimplementations.
TheTCPoptionsareencodedbyusingaTypeLengthValueformatwhere: • theﬁrstbyteindicatesthetypeoftheoption.
• thesecondbyteindicatesthetotallengthoftheoption(includingtheﬁrsttwobytes)inbytes • thelastbytesarespeciﬁcforeachtypeofoption RFC793deﬁnestheMaximumSegmentSize(MSS)TCPoptionthatmustbeunderstoodbyallTCPimplemen- tations.
Thisoption(type2)hasalengthof4bytesandcontainsa16bitswordthatindicatestheMSSsupported bythesenderoftheSYN segment.
TheMSSoptioncanonlybeusedinTCPsegmentshavingtheSYN ﬂagset.
RFC 793 also deﬁnes two special options that must be supported by all TCP implementations.
The ﬁrst option isEndofoption.
Itisencodedasasinglebytehavingvalue0x00andcanbeusedtoensurethattheTCPheader extensionendsona32bitsboundary.
TheNo-Operationoption,encodedasasinglebytehavingvalue0x01,can beusedwhentheTCPheaderextensioncontainsseveralTCPoptionsthatshouldbealignedon32bitboundaries.
Allotheroptions14areencodedbyusingtheTLVformat.
Note: Therobustnessprinciple The handling of the TCP options by TCP implementations is one of the many applications of the robustness principle which is usually attributed to Jon Postel and is often quoted as “Be liberal in what you accept, and conservativeinwhatyousend”RFC1122 ConcerningtheTCPoptions,therobustnessprincipleimpliesthataTCPimplementationshouldbeabletoaccept TCPoptionsthatitdoesnotunderstand,inparticularinreceivedSYNsegments,andthatitshouldbeabletoparse any received segment without crashing, even if the segment contains an unknown TCP option.
Furthermore, a servershouldnotsendintheSYN+ACK segmentorlater,optionsthathavenotbeenproposedbytheclientinthe SYN segment.
4.3.2 TCP connection release TCP,likemostconnection-orientedtransportprotocols,supportstwotypesofconnectionrelease: • gracefulconnectionrelease,whereeachTCPusercanreleaseitsowndirectionofdatatransfer • abrupt connection release, where either one user closes both directions of data transfer or one TCP entity is forced to close the connection (e.g.
because the remote host does not reply anymore or due to lack of resources) TheabruptconnectionreleasemechanismisverysimpleandreliesonasinglesegmenthavingtheRST bitset.
A TCPsegmentcontainingtheRST bitcanbesentforthefollowingreasons: • anon-SYN segmentwasreceivedforanon-existingTCPconnectionRFC793 • by extension, some implementations respond with an RST segment to a segment that is received on an existingconnectionbutwithaninvalidheaderRFC3360.
Thiscausesthecorrespondingconnectiontobe closedandhascausedsecurityattacksRFC4953 • byextension, someimplementationssendanRST segmentwhentheyneedtocloseanexistingTCPcon- nection(e.g.
becausetherearenotenoughresourcestosupportthisconnectionorbecausetheremotehost isconsideredtobeunreachable).
MeasurementshaveshownthatthisusageofTCPRST waswidespread [AW05] 14ThefulllistofallTCPoptionsmaybefoundathttp://www.iana.org/assignments/tcp-parameters/ 4.3.
TheTransmissionControlProtocol 95 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 WhenanRST segmentissentbyaTCPentity,itshouldcontainthecurrentvalueofthesequencenumberforthe connection(or0ifitdoesnotbelongtoanyexistingconnection)andtheacknowledgementnumbershouldbeset tothenextexpectedin-sequencesequencenumberonthisconnection.
Note: TCPRST wars TCPimplementersshouldensurethattwoTCPentitiesneverenteraTCPRST warwherehostAissendingaRST segmentinresponsetoapreviousRST segmentthatwassentbyhostBinresponsetoaTCPRST segmentsentby hostA... ToavoidsuchaninﬁniteexchangeofRST segmentsthatdonotcarrydata,aTCPentityisneverallowed tosendaRST segmentinresponsetoanotherRST segment.
ThenormalwayofterminatingaTCPconnectionisbyusingthegracefulTCPconnectionrelease.
Thismecha- nismusestheFIN ﬂagoftheTCPheaderandallowseachhosttoreleaseitsowndirectionofdatatransfer.
Asfor theSYN ﬂag,theutilisationoftheFIN ﬂagintheTCPheaderconsumesonesequencenumber.
TheﬁgureFSM forTCPconnectionreleaseshowsthepartoftheTCPFSMusedwhenaTCPconnectionisreleased.
Figure4.42: FSMforTCPconnectionrelease StartingfromtheEstablishedstate,therearetwomainpathsthroughthisFSM.
TheﬁrstpathiswhenthehostreceivesasegmentwithsequencenumberxandtheFIN ﬂagset.
Theutilisationof theFINﬂagindicatesthatthebytebeforesequencenumberxwasthelastbyteofthebytestreamsentbytheremote host.
Onceallofthedatahasbeendeliveredtotheuser,theTCPentitysendsanACK segmentwhoseackﬁeldis setto (x+1)mod232toacknowledgetheFIN segment.
TheFIN segmentissubjecttothesameretransmission mechanisms as a normal TCP segment.
In particular, its transmission is protected by the retransmission timer.
Atthispoint,theTCPconnectionenterstheCLOSE_WAIT state.
Inthisstate,thehostcanstillsenddatatothe remotehost.
Onceallitsdatahavebeensent,itsendsaFIN segmentandentertheLAST_ACKstate.
Inthisstate, theTCPentitywaitsfortheacknowledgementofitsFIN segment.
Itmaystillretransmitunacknowledgeddata segmentse.g.
iftheretransmissiontimerexpires.
UponreceptionoftheacknowledgementfortheFIN segment, theTCPconnectioniscompletelyclosedanditsTCBcanbediscarded.
The second path is when the host decides ﬁrst to send a FIN segment.
In this case, it enters the FIN_WAIT1 state.
Itthisstate,itcanretransmitunacknowledgedsegmentsbutcannotsendnewdatasegments.
Itwaitsforan acknowledgementofitsFIN segment,butmayreceiveaFIN segmentsentbytheremotehost.
Intheﬁrstcase, theTCPconnectionenterstheFIN_WAIT2state.
Inthisstate, newdatasegmentsfromtheremotehostarestill accepteduntilthereceptionoftheFIN segment.
TheacknowledgementforthisFIN segmentissentoncealldata receivedbeforetheFIN segmenthavebeendeliveredtotheuserandtheconnectionenterstheTIME_WAIT state.
Inthesecondcase,aFIN segmentisreceivedandtheconnectionenterstheClosingstateoncealldatareceived fromtheremotehosthavebeendeliveredtotheuser.
Inthisstate,nonewdatasegmentscanbesentandthehost waitsforanacknowledgementofitsFIN segmentbeforeenteringtheTIME_WAIT state.
The TIME_WAIT state is different from the other states of the TCP FSM.
A TCP entity enters this state after having sent the last ACK segment on a TCP connection.
This segment indicates to the remote host that all the data that it has sent have been correctly received and that it can safely release the TCP connection and discard 96 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 thecorrespondingTCB.AfterhavingsentthelastACK segment, aTCPconnectionenterstheTIME_WAIT and remains in this state for 2∗MSL seconds.
During this period, the TCB of the connection is maintained.
This ensures that the TCP entity that sent the last ACK maintains enough state to be able to retransmit this segment if this ACK segment is lost and the remote host retransmits its last FIN segment or another one.
The delay of 2∗MSL seconds ensures that any duplicate segments on the connection would be handled correctly without causingthetransmissionofanRST segment.
WithouttheTIME_WAIT stateandthe2∗MSLsecondsdelay,the connectionreleasewouldnotbegracefulwhenthelastACK segmentislost.
Note: TIME_WAITonbusyTCPservers The 2 ∗ MSL seconds delay in the TIME_WAIT state is an important operational problem on servers having thousands of simultaneously opened TCP connections [FTY99].
Consider for example a busy web server that processes 10.000 TCP connections every second.
If each of these connections remain in the TIME_WAIT state for4minutes,thisimpliesthattheserverwouldhavetomaintainmorethan2millionTCBsatanytime.
Forthis reason,someTCPimplementationsprefertoperformanabruptconnectionreleasebysendingaRST segmentto close the connection [AW05] and immediately discard the corresponding TCB.
However, if the RST segment is lost,theremotehostcontinuestomaintainaTCBforaconnectionnolongerexists.
Thisoptimisationreducesthe numberofTCBsmaintainedbythehostsendingtheRST segmentbutatthepotentialcostofincreasedprocessing ontheremotehostwhentheRST segmentislost.
4.3.3 TCP reliable data transfer The original TCP data transfer mechanisms were deﬁned in RFC 793.
Based on the experience of using TCP onthegrowingglobalInternet, thispartoftheTCPspeciﬁcationhasbeenupdatedandimprovedseveraltimes, alwayswhilepreservingthebackwardcompatibilitywitholderTCPimplementations.
Inthissection,wereview themaindatatransfermechanismsusedbyTCP.
TCP is a window-based transport protocol that provides a bi-directional byte stream service.
This has several implicationsontheﬁeldsoftheTCPheaderandthemechanismsusedbyTCP.ThethreeﬁeldsoftheTCPheader are: • sequence number.
TCP uses a 32 bits sequence number.
The sequence number placed in the header of a TCPsegmentcontainingdataisthesequencenumberoftheﬁrstbyteofthepayloadoftheTCPsegment.
• acknowledgementnumber.
TCPusescumulativepositiveacknowledgements.
EachTCPsegmentcontains thesequencenumber ofthenextbytethatthesenderoftheacknowledgementexpectstoreceivefromthe remotehost.
Intheory,theacknowledgementnumberisonlyvalidiftheACK ﬂagoftheTCPheaderisset.
Inpracticealmostall15TCPsegmentshavetheirACK ﬂagset.
• window.
aTCPreceiverusesthis16bitsﬁeldtoindicatethecurrentsizeofitsreceivewindowexpressed inbytes.
Note: TheTransmissionControlBlock ForeachestablishedTCPconnection,aTCPimplementationmustmaintainaTransmissionControlBlock(TCB).
A TCB contains all the information required to send and receive segments on this connection RFC 793.
This includes16: • thelocalIPaddress • theremoteIPaddress • thelocalTCPportnumber • theremoteTCPportnumber • thecurrentstateoftheTCPFSM • themaximumsegmentsize(MSS) 15Inpractice,onlytheSYNsegmentdonothavetheirACKﬂagset.
16AcompleteTCPimplementationcontainsadditionalinformationinitsTCB,notablytosupporttheurgentpointer.However,thispartof TCPisnotdiscussedinthisbook.RefertoRFC793andRFC2140formoredetailsabouttheTCB.
4.3.
TheTransmissionControlProtocol 97 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • snd.nxt: thesequencenumberofthenextbyteinthebytestream(theﬁrstbyteofanewdatasegmentthat yousendusesthissequencenumber) • snd.una: theearliestsequencenumberthathasbeensentbuthasnotyetbeenacknowledged • snd.wnd: thecurrentsizeofthesendingwindow(inbytes) • rcv.nxt: thesequencenumberofthenextbytethatisexpectedtobereceivedfromtheremotehost • rcv.wnd: thecurrentsizeofthereceivewindowadvertisedbytheremotehost • sendingbuffer: abufferusedtostoreallunacknowledgeddata • receiving buffer : a buffer to store all data received from the remote host that has not yet been delivered to the user.
Data may be stored in the receiving buffer because either it was not received in sequence or becausetheuseristooslowtoprocessit TheoriginalTCPspeciﬁcationcanbecategorisedasatransportprotocolthatprovidesabytestreamserviceand usesgo-back-n. Tosendnewdataonanestablishedconnection,aTCPentityperformsthefollowingoperationsonthecorrespond- ingTCB.Itﬁrstchecksthatthesendingbufferdoesnotcontainmoredatathanthereceivewindowadvertisedby theremotehost(rcv.wnd).
Ifthewindowisnotfull,uptoMSSbytesofdataareplacedinthepayloadofaTCP segment.
Thesequencenumberofthissegmentisthesequencenumberoftheﬁrstbyteofthepayload.
Itissetto theﬁrstavailablesequencenumber: snd.nxtandsnd.nxtisincrementedbythelengthofthepayloadoftheTCP segment.
Theacknowledgementnumberofthissegmentissettothecurrentvalueofrcv.nxtandthewindowﬁeld oftheTCPsegmentiscomputedbasedonthecurrentoccupancyofthereceivingbuffer.
Thedataiskeptinthe sendingbufferincaseitneedstoberetransmittedlater.
WhenaTCPsegmentwiththeACK ﬂagsetisreceived,thefollowingoperationsareperformed.
rcv.wndissetto thevalueofthewindowﬁeldofthereceivedsegment.Theacknowledgementnumberiscomparedtosnd.una.The newlyacknowledgeddataisremovefromthesendingbufferandsnd.unaisupdated.IftheTCPsegmentcontained data, the sequence number is compared to rcv.nxt.
If they are equal, the segment was received in sequence and thedatacanbedeliveredtotheuserandrcv.nxtisupdated.
Thecontentsofthereceivingbufferischeckedtosee whetherotherdataalreadypresentinthisbuffercanbedeliveredinsequencetotheuser.
Ifso,rcv.nxtisupdated again.
Otherwise,thesegment’spayloadisplacedinthereceivingbuffer.
Segmenttransmissionstrategies InatransportprotocolsuchasTCPthatoffersabytestream,apracticalissuethatwasleftasanimplementation choiceinRFC793istodecidewhenanewTCPsegmentcontainingdatamustbesent.
Therearetwosimpleand extremeimplementationchoices.
TheﬁrstimplementationchoiceistosendaTCPsegmentassoonastheuser has requested the transmission of some data.
This allows TCP to provide a low delay service.
However, if the userissendingdataonebyteatatime,TCPwouldplaceeachuserbyteinasegmentcontaining20bytesofTCP header17.
Thisisahugeoverheadthatisnotacceptableinwideareanetworks.
Asecondsimplesolutionwould betoonlytransmitanewTCPsegmentoncetheuserhasproducedMSSbytesofdata.
Thissolutionreducesthe overhead,butatthecostofapotentiallyveryhighdelay.
An elegant solution to this problem was proposed by John Nagle in RFC 896.
John Nagle observed that the overhead caused by the TCP header was a problem in wide area connections, but less in local area connections where the available bandwidth is usually higher.
He proposed the following rules to decide to send a new data segmentwhenanewdatahasbeenproducedbytheuseroranewacksegmenthasbeenreceived if rcv.wnd>= MSS and len(data) >= MSS : send one MSS-sized segment else if there are unacknowledged data: place data in buffer until acknowledgement has been received else send one TCP segment containing all buffered data 17ThisTCPsegmentisthenplacedinanIPheader.
WedescribeIPv4andIPv6inthenextchapter.
TheminimumsizeoftheIPv4(resp.
IPv6)headeris20bytes(resp.40bytes).
98 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 The ﬁrst rule ensures that a TCP connection used for bulk data transfer always sends full TCP segments.
The secondrulesendsonepartiallyﬁlledTCPsegmenteveryround-trip-time.
Thisalgorithm,calledtheNaglealgorithm,takesafewlinesofcodeinallTCPimplementations.
Theselinesof codehaveahugeimpactonthepacketsthatareexchangedinTCP/IPnetworks.
Researchershaveanalysedthe distribution of the packet sizes by capturing and analysing all the packets passing through a given link.
These studieshaveshownseveralimportantresults: • inTCP/IPv4networks,alargefractionofthepacketsareTCPsegmentsthatcontainonlyanacknowledge- ment.
Thesepacketsusuallyaccountfor40-50%ofthepacketspassingthroughthestudiedlink • inTCP/IPv4 networks, mostofthebytes areexchangedin longpackets, usuallypacketscontaining upto 1460bytesofpayloadwhichisthedefaultMSSforhostsattachedtoanEthernetnetwork,themostpopular typeofLAN Theﬁgurebelowprovidesadistributionofthepacketsizesmeasuredonalink.Itshowsathree-modaldistribution of the packet size.
50% of the packets contain pure TCP acknowledgements and occupy 40 bytes.
About 20% of the packets contain about 500 bytes 18 of user data and 12% of the packets contain 1460 bytes of user data.
However, mostoftheuserdataistransportedinlargepackets.
Thispacketsizedistributionhasimplicationson thedesignofroutersaswediscussinthenextchapter.
Figure4.43: PacketsizedistributionintheInternet Recentmeasurementsindicatethatthesepacketsizedistributionsarestillvalidintoday’sInternet, althoughthe packet distribution tends to become bimodal with small packets corresponding to TCP pure acks (40-64 bytes dependingontheutilisationofTCPoptions)andlarge1460-bytespacketscarryingmostoftheuserdata.
TCPwindows From a performance point of view, one of the main limitations of the original TCP speciﬁcation is the 16 bits windowﬁeldintheTCPheader.
Asthisﬁeldindicatesthecurrentsizeofthereceivewindowinbytes,itlimitsthe TCPreceivewindowat65535bytes.
ThislimitationwasnotasevereproblemwhenTCPwasdesignedsinceat thattimehigh-speedwideareanetworksofferedamaximumbandwidthof56kbps.
However,intoday’snetwork, thislimitationisnotacceptableanymore.
Thetablebelowprovidestherough19maximumthroughputthatcanbe achievedbyaTCPconnectionwitha64KByteswindowinfunctionoftheconnection’sround-trip-time RTT MaximumThroughput 1msec 524Mbps 10msec 52.4Mbps 100msec 5.24Mbps 500msec 1.05Mbps To solve this problem, a backward compatible extension that allows TCP to use larger receive windows was proposedinRFC1323.
Today,mostTCPimplementationssupportthisoption.
Thebasicideaisthatinsteadof 18Whenthesemeasurementsweretaken,somehostshadadefaultMSSof552bytes(e.g.BSDUnixderivatives)or536bytes(thedefault MSSspeciﬁedinRFC793).Today,mostTCPimplementationderivetheMSSfromthemaximumpacketsizeoftheLANinterfacetheyuse (Ethernetinmostcases).
19ApreciseestimationofthemaximumbandwidththatcanbeachievedbyaTCPconnectionshouldtakeintoaccounttheoverheadofthe TCPandIPheadersaswell.
4.3.
TheTransmissionControlProtocol 99 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 storingsnd.wndandrcv.wndas16bitsintegersintheTCB,theyshouldbestoredas32bitsintegers.
AstheTCP segmentheaderonlycontains16bitstoplacethewindowﬁeld, itisimpossibletocopythevalueofsnd.wnd in eachsentTCPsegment.
Insteadtheheadercontainssnd.wnd>>SwhereSisthescalingfactor(0 ≤ S ≤ 14) negotiated during connection establishment.
The client adds its proposed scaling factor as a TCP option in the SYN segment.
IftheserversupportsRFC1323,itplacesintheSYN+ACK segmentthescalingfactorthatituses when advertising its own receive window.
The local and remote scaling factors are included in the TCB.
If the serverdoesnotsupportRFC1323,itignoresthereceivedoptionandnoscalingisapplied.
By using the window scaling extensions deﬁned in RFC 1323, TCP implementations can use a receive buffer of up to 1 GByte.
With such a receive buffer, the maximum throughput that can be achieved by a single TCP connectionbecomes: RTT MaximumThroughput 1msec 8590Gbps 10msec 859Gbps 100msec 86Gbps 500msec 17Gbps These throughputs are acceptable in today’s networks.
However, there are already servers having 10 Gbps in- terfaces...
Early TCP implementations had ﬁxed receiving and sending buffers 20.
Today’s high performance implementationsareabletoautomaticallyadjustthesizeofthesendingandreceivingbuffertobettersupporthigh bandwidthﬂows[SMM1998] TCP’sretransmissiontimeout Inago-back-ntransportprotocolsuchasTCP,theretransmissiontimeoutmustbecorrectlysetinordertoachieve good performance.
If the retransmission timeout expires too early, then bandwidth is wasted by retransmitting segments that have already been correctly received; whereas if the retransmission timeout expires too late, then bandwidthiswastedbecausethesenderisidlewaitingfortheexpirationofitsretransmissiontimeout.
Agoodsettingoftheretransmissiontimeoutclearlydependsonanaccurateestimationoftheround-trip-timeof each TCP connection.
The round-trip-time differs between TCP connections, but may also change during the lifetimeofasingleconnection.
Forexample,theﬁgurebelowshowstheevolutionoftheround-trip-timebetween twohostsduringaperiodof45seconds.
Figure4.44: Evolutionoftheround-trip-timebetweentwohosts The easiest solution to measure the round-trip-time on a TCP connection is to measure the delay between the transmission of a data segment and the reception of a corresponding acknowledgement 21.
As illustrated in the 20Seehttp://fasterdata.es.net/tuning.htmlformoreinformationonhowtotuneaTCPimplementation 21Intheory,aTCPimplementationcouldstorethetimestampofeachdatasegmenttransmittedandcomputeanewestimatefortheround- trip-timeuponreceptionofthecorrespondingacknowledgement.
However,usingsuchfrequentmeasurementsintroducesalotofnoisein practice and many implementations still measure the round-trip-time once per round-trip-time by recording the transmission time of one segmentatatimeRFC2988 100 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 ﬁgurebelow,thismeasurementworkswellwhentherearenosegmentlosses.
Figure4.45: Howtomeasuretheround-trip-time?
However,whenadatasegmentislost,asillustratedinthebottompartoftheﬁgure,themeasurementisambiguous asthesendercannotdeterminewhetherthereceivedacknowledgementwastriggeredbytheﬁrsttransmissionof segment123oritsretransmission.
Usingincorrectround-trip-timeestimationscouldleadtoincorrectvaluesof the retransmission timeout.
For this reason, Phil Karn and Craig Partridge proposed, in [KP91], to ignore the round-trip-timemeasurementsperformedduringretransmissions.
To avoid this ambiguity in the estimation of the round-trip-time when segments are retransmitted, recent TCP implementations rely on the timestamp option deﬁned in RFC 1323.
This option allows a TCP sender to place two32bittimestampsineachTCPsegmentthatitsends.
Theﬁrsttimestamp,TSValue(TSval)ischosenbythe senderofthesegment.
Itcouldforexamplebethecurrentvalueofitsreal-timeclock22.
Thesecondvalue,TS Echo Reply (TSecr), is the last TSval that was received from the remote host and stored in the TCB.
The ﬁgure below shows how the utilization of this timestamp option allows for the disambiguation of the round-trip-time measurementwhenthereareretransmissions.
Figure4.46: Disambiguatinground-trip-timemeasurementswiththeRFC1323timestampoption Once the round-trip-time measurements have been collected for a given TCP connection, the TCP entity must compute the retransmission timeout.
As the round-trip-time measurements may change during the lifetime of a connection,theretransmissiontimeoutmayalsochange.
Atthebeginningofaconnection23,theTCPentitythat sends a SYN segment does not know the round-trip-time to reach the remote host and the initial retransmission timeoutisusuallysetto3secondsRFC2988.
TheoriginalTCPspeciﬁcationproposedinRFC793toincludetwoadditionalvariablesintheTCB: • srtt : the smoothed round-trip-time computed as srrt = (α×srtt)+((1−α)×rtt) where rtt is the round-trip-timemeasuredaccordingtotheaboveprocedureandαasmoothingfactor(e.g.
0.8or0.9) 22Somesecurityexpertshaveraisedconcernsthatusingthereal-timeclocktosettheTSvalinthetimestampoptioncanleakinformation suchasthesystem’sup-time.Solutionsproposedtosolvethisproblemmaybefoundin[CNPI09] 23AsaTCPclientoftenestablishesseveralparallelorsuccessiveconnectionswiththesameserver,RFC2140hasproposedtoreusefor anewconnectionsomeinformationthatwascollectedintheTCBofapreviousconnection,suchasthemeasuredrtt.However,thissolution hasnotbeenwidelyimplemented.
4.3.
TheTransmissionControlProtocol 101 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • rto: theretransmissiontimeoutiscomputedasrto = min(60,max(1,β×srtt))whereβ isusedtotake intoaccountthedelayvariance(value: 1.3to2.0).
The60and1constantsareusedtoensurethatthertois notlargerthanoneminutenorsmallerthan1second.
However,inpractice,thiscomputationfortheretransmissiontimeoutdidnotworkwell.
Themainproblemwas thatthecomputedrtodidnotcorrectlytakeintoaccountthevariationsinthemeasuredround-trip-time.
VanJa- cobsonproposedinhisseminalpaper[Jacobson1988]animprovedalgorithmtocomputethertoandimplemented itintheBSDUnixdistribution.
ThisalgorithmisnowpartoftheTCPstandardRFC2988.
Jacobson’s algorithm uses two state variables, srtt the smoothed rtt and rttvar the estimation of the variance of therttandtwoparameters: αandβ.
WhenaTCPconnectionstarts,theﬁrstrtoissetto3seconds.
Whenaﬁrst estimationoftherttisavailable,thesrtt,rttvarandrtoarecomputedas srtt=rtt rttvar=rtt/2 rto=srtt+4*rttvar Then,whenotherrttmeasurementsarecollected,srttandrttvarareupdatedasfollows: rttvar =(1−β)×rttvar+β×|srtt−rtt| srtt=(1−α)×srtt+α×rtt rto=srtt+4×rttvar Theproposedvaluesfortheparametersareα = 1 andβ = 1.
ThisallowsaTCPimplementation,implemented 8 4 in the kernel, to perform the rtt computation by using shift operations instead of the more costly ﬂoating point operations[Jacobson1988].
Theﬁgurebelowillustratesthecomputationofthertouponrttchanges.
Figure4.47: Examplecomputationoftherto Advancedretransmissionstrategies Thedefaultgo-back-nretransmissionstrategywasdeﬁnedinRFC793.
Whentheretransmissiontimerexpires, TCP retransmits the ﬁrst unacknowledged segment (i.e.
the one having sequence number snd.una).
After each expirationoftheretransmissiontimeout,RFC2988recommendstodoublethevalueoftheretransmissiontime- out.
This is called an exponential backoff.
This doubling of the retransmission timeout after a retransmission wasincludedinTCPtodealwithissuessuchasnetwork/receiveroverloadandincorrectinitialestimationsofthe retransmissiontimeout.
Ifthesamesegmentisretransmittedseveraltimes,theretransmissiontimeoutisdoubled aftereveryretransmissionuntilitreachesaconﬁguredmaximum.
RFC2988suggestsamaximumretransmission timeout of at least 60 seconds.
Once the retransmission timeout reaches this conﬁgured maximum, the remote hostisconsideredtobeunreachableandtheTCPconnectionisclosed.
This retransmission strategy has been reﬁned based on the experience of using TCP on the Internet.
The ﬁrst reﬁnement was a clariﬁcation of the strategy used to send acknowledgements.
As TCP uses piggybacking, the 102 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 easiestandlesscostlymethodtosendacknowledgementsistoplacetheminthedatasegmentssentintheother direction.However,fewapplicationlayerprotocolsexchangedatainbothdirectionsatthesametimeandthusthis methodrarelyworks.Foranapplicationthatissendingdatasegmentsinonedirectiononly,theremoteTCPentity returnsemptyTCPsegmentswhoseonlyusefulinformationistheiracknowledgementnumber.
Thismaycause alargeoverheadinwideareanetworkifapureACK segmentissentinresponsetoeachreceiveddatasegment.
MostTCPimplementationsuseadelayedacknowledgement strategy.
Thisstrategyensuresthatpiggybackingis used whenever possible, otherwise pure ACK segments are sent for every second received data segments when there are no losses.
When there are losses or reordering, ACK segments are more important for the sender and they are sent immediately RFC 813 RFC 1122.
This strategy relies on a new timer with a short delay (e.g.
50 milliseconds)andoneadditionalﬂagintheTCB.Itcanbeimplementedasfollows reception of a data segment: if pkt.seq==rcv.nxt: # segment received in sequence if delayedack : send pure ack segment cancel acktimer delayedack=False else: delayedack=True start acktimer else: # out of sequence segment send pure ack segment if delayedack: delayedack=False cancel acktimer transmission of a data segment: # piggyback ack if delayedack: delayedack=False cancel acktimer acktimer expiration: send pure ack segment delayedack=False Due to this delayed acknowledgement strategy, during a bulk transfer, a TCP implementation usually acknowl- edgeseverysecondTCPsegmentreceived.
The default go-back-n retransmission strategy used by TCP has the advantage of being simple to implement, in particularonthereceiverside,butwhentherearelosses,ago-back-nstrategyprovidesalowerperformancethan a selective repeat strategy.
The TCP developers have designed several extensions to TCP to allow it to use a selectiverepeatstrategywhilemaintainingbackwardcompatibilitywitholderTCPimplementations.
TheseTCP extensionsassumethatthereceiverisabletobufferthesegmentsthatitreceivesout-of-sequence.
Theﬁrstextensionthatwasproposedisthefastretransmitheuristic.
ThisextensioncanbeimplementedonTCP senders and thus does not require any change to the protocol.
It only assumes that the TCP receiver is able to bufferout-of-sequencesegments.
From a performance point of view, one issue with TCP’s retransmission timeout is that when there are isolated segmentlosses,theTCPsenderoftenremainsidlewaitingfortheexpirationofitsretransmissiontimeouts.
Such isolated losses are frequent in the global Internet [Paxson99].
A heuristic to deal with isolated losses without waiting for the expiration of the retransmission timeout has been included in many TCP implementations since theearly1990s.
Tounderstandthisheuristic,letusconsidertheﬁgurebelowthatshowsthesegmentsexchanged overaTCPconnectionwhenanisolatedsegmentislost.
Asshownabove,whenanisolatedsegmentislostthesenderreceivesseveralduplicateacknowledgementssince the TCP receiver immediately sends a pure acknowledgement when it receives an out-of-sequence segment.
A duplicateacknowledgementisanacknowledgementthatcontainsthesameacknowledgementnumberasaprevious segment.
A single duplicate acknowledgement does not necessarily imply that a segment was lost, as a simple reordering of the segments may cause duplicate acknowledgements as well.
Measurements [Paxson99] have shownthatsegmentreorderingisfrequentintheInternet.Basedontheseobservations,thefastretransmitheuristic hasbeenincludedinmostTCPimplementations.
Itcanbeimplementedasfollows 4.3.
TheTransmissionControlProtocol 103 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.48: Detectingisolatedsegmentlosses ack arrival: if tcp.ack==snd.una: # duplicate acknowledgement dupacks++ if dupacks==3: retransmit segment(snd.una) else: dupacks=0 # process acknowledgement ThisheuristicrequiresanadditionalvariableintheTCB(dupacks).
Mostimplementationssetthedefaultnumber ofduplicateacknowledgementsthattriggeraretransmissionto3.
ItisnowpartofthestandardTCPspeciﬁcation RFC2581.
ThefastretransmitheuristicimprovestheTCPperformanceprovidedthatisolatedsegmentsarelost andthecurrentwindowislargeenoughtoallowthesendertosendthreeduplicateacknowledgements.
Theﬁgurebelowillustratestheoperationofthefastretransmitheuristic.
Figure4.49: TCPfastretransmitheuristics When losses are not isolated or when the windows are small, the performance of the fast retransmit heuristic decreases.
Insuchenvironments, itisnecessarytoallowaTCPsendertouseaselectiverepeatstrategyinstead of the default go-back-n strategy.
Implementing selective-repeat requires a change to the TCP protocol as the receiverneedstobeabletoinformthesenderoftheout-of-ordersegmentsthatithasalreadyreceived.
Thiscan be done by using the Selective Acknowledgements (SACK) option deﬁned in RFC 2018.
This TCP option is 104 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 negotiatedduringtheestablishmentofaTCPconnection.
IfbothTCPhostssupporttheoption,SACKblockscan beattachedbythereceivertothesegmentsthatitsends.
SACKblocksallowaTCPreceivertoindicatetheblocks ofdatathatithasreceivedcorrectlybutoutofsequence.
TheﬁgurebelowillustratestheutilisationoftheSACK blocks.
Figure4.50: TCPselectiveacknowledgements AnSACKoptioncontainsoneormoreblocks.
Ablockcorrespondstoallthesequencenumbersbetweentheleft edgeandtherightedgeoftheblock.
Thetwoedgesoftheblockareencodedas32bitnumbers(thesamesizeas theTCPsequencenumber)inanSACKoption.
AstheSACKoptioncontainsonebytetoencodeitstypeandone byteforitslength,aSACKoptioncontainingbblocksisencodedasasequenceof2+8×bbytes.
Inpractice, thesizeoftheSACKoptioncanbeproblematicastheoptionalTCPheaderextensioncannotbelongerthan44 bytes.
AstheSACKoptionisusuallycombinedwiththeRFC1323timestampextension,thisimpliesthataTCP segmentcannotusuallycontainmorethanthreeSACKblocks.
ThislimitationimpliesthataTCPreceivercannot alwaysplaceintheSACKoptionthatitsends,informationaboutallthereceivedblocks.
TodealwiththelimitedsizeoftheSACKoption,aTCPreceivercurrentlyhavingmorethan3blocksinsideits receivingbuffermustselecttheblockstoplaceintheSACKoption.AgoodheuristicistoputintheSACKoption theblocksthathavemostrecentlychanged,asthesenderislikelytobealreadyawareoftheolderblocks.
WhenasenderreceivesanSACKoptionindicatinganewblockandthusanewpossiblesegmentloss,itusually doesnotretransmitthemissingsegment(simmediately.
Todealwithreordering,aTCPsendercanuseaheuristic similartofastretransmitbyretransmittingagaponlyonceithasreceivedthreeSACKoptionsindicatingthisgap.
ItshouldbenotedthattheSACKoptiondoesnotsupersedetheacknowledgementnumberoftheTCPheader.
A TCPsendercanonlyremovedatafromitssendingbufferoncetheyhavebeenacknowledgedbyTCP’scumulative acknowledgements.
This design was chosen for two reasons.
First, it allows the receiver to discard parts of its receiving buffer when it is running out of memory without loosing data.
Second, as the SACK option is not transmitted reliably, the cumulative acknowledgements are still required to deal with losses of ACK segments carryingonlySACKinformation.
Thus,theSACKoptiononlyservesasahinttoallowthesendertooptimiseits retransmissions.
TCPcongestioncontrol In the previous sections, we have explained the mechanisms that TCP uses to deal with transmission errors and segmentlosses.
InaheterogeneousnetworksuchastheInternetorenterpriseIPnetworks,endsystemshavevery differentlevelsofperformance.
Someendsystemsarehigh-endserversattachedto10Gbpslinkswhileothersare mobiledevicesattachedtoaverylowbandwidthwirelesslink.
Despitethesehugedifferencesinperformance,a mobiledeviceshouldbeabletoefﬁcientlyexchangesegmentswithahigh-endserver.
To understand this problem better, let us consider the scenario shown in the ﬁgure below, where a server (A) 4.3.
TheTransmissionControlProtocol 105 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 attached to a 10 Mbps link is sending TCP segments to another computer (C) through a path that contains a 2 Mbpslink.
Figure4.51: TCPoverheterogeneouslinks Inthisnetwork,theTCPsegmentssentbytheserverreachrouterR1.R1forwardsthesegmentstowardsrouterR2.
RouterR2canpotentiallyreceivesegmentsat10Mbps,butitcanonlyforwardthemat2MbpstorouterR2and thentohostC.RouterR2containsbuffersthatallowittostorethepacketsthatcannotimmediatelybeforwarded totheirdestination.
TounderstandtheoperationofTCPinthisenvironment,letusconsiderasimpliﬁedmodelof thisnetworkwherehostAisattachedtoa10MbpslinktoaqueuethatrepresentsthebuffersofrouterR2.
This queueisemptiedatarateof2Mbps.
Figure4.52: TCPselfclocking Let us consider that host A uses a window of three segments.
It thus sends three back-to-back segments at 10 Mbps and then waits for an acknowledgement.
Host A stops sending segments when its window is full.
These segmentsreachthebuffersofrouterR2.
TheﬁrstsegmentstoredinthisbufferissentbyrouterR2atarateof2 Mbps to the destination host.
Upon reception of this segment, the destination sends an acknowledgement.
This acknowledgement allows host A to transmit a new segment.
This segment is stored in the buffers of router R2 while it is transmitting the second segment that was sent by host A...
Thus, after the transmission of the ﬁrst windowofsegments,TCPsendsonedatasegmentafterthereceptionofeachacknowledgementreturnedbythe destination 24 .
In practice, the acknowledgements sent by the destination serve as a kind of clock that allows thesendinghosttoadaptitstransmissionratetotherateatwhichsegmentsarereceivedbythedestination.
This TCPself-clockingistheﬁrstmechanismthatallowsTCPtoadapttoheterogeneousnetworks[Jacobson1988].
It dependsontheavailabilityofbufferstostorethesegmentsthathavebeensentbythesenderbuthavenotyetbeen transmittedtothedestination.
However, TCP is not always used in this environment.
In the global Internet, TCP is used in networks where a large number of hosts send segments to a large number of receivers.
For example, let us consider the network 24Ifthedestinationisusingdelayedacknowledgements,thesendinghostsendstwodatasegmentsaftereachacknowledgement.
106 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 depictedbelowwhichissimilartotheonediscussedin[Jacobson1988]andRFC896.Inthisnetwork,weassume thatthebuffersoftherouterareinﬁnitetoensurethatnopacketislost.
Figure4.53: Thecongestioncollapseproblem IfmanyTCPsendersareattachedtotheleftpartofthenetworkabove,theyallsendawindowfullofsegments.
Thesesegmentsarestoredinthebuffersoftherouterbeforebeingtransmittedtowardstheirdestination.
Ifthere aremanysendersontheleftpartofthenetwork,theoccupancyofthebuffersquicklygrows.
Aconsequenceof thebufferoccupancyisthattheround-trip-time,measuredbyTCP,betweenthesenderandthereceiverincreases.
Consider a network where 10,000 bits segments are sent.
When the buffer is empty, such a segment requires 1 millisecond to be transmitted on the 10 Mbps link and 5 milliseconds to be the transmitted on the 2 Mbps link.
Thus,theround-trip-timemeasuredbyTCPisroughly6millisecondsifweignorethepropagationdelayonthe links.
MostroutersmanagetheirbuffersasaFIFOqueue25.
Ifthebuffercontains100segments,theround-trip- time becomes 1+100×5+5 milliseconds as new segments are only transmitted on the 2 Mbps link once all previoussegmentshavebeentransmitted.Unfortunately,TCPusesaretransmissiontimerandperformsgo-back-n torecoverfromtransmissionerrors.
Ifthebufferoccupancyishigh,TCPassumesthatsomesegmentshavebeen lostandretransmitsafullwindowofsegments.
Thisincreasestheoccupancyofthebufferandthedelaythrough the buffer...
Furthermore, the buffer may store and send on the low bandwidth links several retransmissions of the same segment.
This problem is called congestion collapse.
It occurred several times in the late 1980s.
For example,[Jacobson1988]notesthatin1986,theusablebandwidthofa32Kbitslinkdroppedto40bitspersecond duetocongestioncollapse26!
The congestion collapse is a problem that all heterogeneous networks face.
Different mechanisms have been proposedinthescientiﬁcliteraturetoavoidorcontrolnetworkcongestion.
Someofthemhavebeenimplemented anddeployedinrealnetworks.
Tounderstandthisprobleminmoredetail,letusﬁrstconsiderasimplenetwork with two hosts attached to a high bandwidth link that are sending segments to destination C attached to a low bandwidthlinkasdepictedbelow.
Figure4.54: Thecongestionproblem To avoid congestion collapse, the hosts must regulate their transmission rate 27 by using a congestion control mechanism.
Such a mechanism can be implemented in the transport layer or in the network layer.
In TCP/IP networks, it is implemented in the transport layer, but other technologies such as Asynchronous Transfer Mode (ATM)orFrameRelayincludecongestioncontrolmechanismsinlowerlayers.
Let us ﬁrst consider the simple problem of a set of i hosts that share a single bottleneck link as shown in the exampleabove.
Inthisnetwork,thecongestioncontrolschememustachievethefollowingobjectives[CJ1989]: 25Wediscussinanotherchapterotherpossibleorganisationsoftherouter’sbuffers.
26Atthistime,TCPimplementationsweremainlyfollowingRFC791.Theround-trip-timeestimationsandtheretransmissionmechanisms wereverysimple.TCPwasimprovedafterthepublicationof[Jacobson1988] 27 Inthissection, wefocusoncongestioncontrolmechanismsthatregulatethetransmissionrateofthehosts.
Othertypesofmecha- nismshavebeenproposedintheliterature.
Forexample,credit-basedﬂow-controlhasbeenproposedtoavoidcongestioninATMnetworks [KR1995].Withacredit-basedmechanism,hostscanonlysendpacketsoncetheyhavereceivedcreditsfromtheroutersandthecreditsdepend ontheoccupancyoftherouter’sbuffers.
4.3.
TheTransmissionControlProtocol 107 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 1.
Thecongestioncontrolschememustavoidcongestion.
Inpractice, thismeansthatthebottle- necklinkcannotbeoverloaded.
Ifr (t)isthetransmissionrateallocatedtohostiattimetand i Rthebandwidthofthebottlenecklink,thenthecongestioncontrolschemeshouldensurethat, (cid:80) onaverage,∀t r (t)≤R.
i 2.
The congestion control scheme must be efﬁcient.
The bottleneck link is usually both a shared and an expensive resource.
Usually, bottleneck links are wide area links that are much more expensivetoupgradethanthelocalareanetworks.Thecongestioncontrolschemeshouldensure that such links are efﬁciently used.
Mathematically, the control scheme should ensure that (cid:80) ∀t r (t)≈R.
i 3.
Thecongestioncontrolschemeshouldbefair.
Mostcongestionschemesaimatachievingmax- minfairness.
Anallocationoftransmissionratestosourcesissaidtobemax-minfairif: • nolinkinthenetworkiscongested • the rate allocated to source j cannot be increased without decreasing the rate allocated to a sourceiwhoseallocationissmallerthantherateallocatedtosourcej [Leboudec2008].
Depending on thenetwork, a max-min fair allocationmay not alwaysexist.
In practice, max-min fairness is an idealobjectivethatcannotnecessarilybeachieved.Whenthereisasinglebottlenecklinkasintheexampleabove, max-minfairnessimpliesthateachsourceshouldbeallocatedthesametransmissionrate.
To visualise the different rate allocations, it is useful to consider the graph shown below.
In this graph, we plot onthex-axis(resp.
y-axis)therateallocatedtohostB(resp.
A).Apointinthegraph(r ,r )correspondstoa B A possible allocation of the transmission rates.
Since there is a 2 Mbps bottleneck link in this network, the graph can be divided into two regions.
The lower left part of the graph contains all allocations (r ,r ) such that the B A bottlenecklinkisnotcongested(r +r < 2).
Therightborderofthisregionistheefﬁciencyline,i.e.
theset A B ofallocationsthatcompletelyutilisethebottlenecklink(r +r =2).
Finally,thefairnesslineisthesetoffair A B allocations.
Figure4.55: Possibleallocatedtransmissionrates Asshowninthegraphabove, arateallocationmaybefairbutnotefﬁcient(e.g.
r = 0.7,r = 0.7), fairand A B efﬁcient(e.g.
r = 1,r = 1)orefﬁcientbutnotfair(e.g.
r = 1.5,r = 0.5).
Ideally,theallocationshould A B A B bebothfairandefﬁcient.
Unfortunately,maintainingsuchanallocationwithﬂuctuationsinthenumberofﬂows thatusethenetworkisachallengingproblem.
Furthermore,theremightbeseveralthousandsofTCPconnections ormorethatpassthroughthesamelink28.
To deal with these ﬂuctuations in demand, which result in ﬂuctuations in the available bandwidth, computer networks use a congestion control scheme.
This congestion control scheme should achieve the three objectives listedabove.
Somecongestioncontrolschemesrelyonaclosecooperationbetweentheendhostsandtherouters, whileothersaremainlyimplementedontheendhostswithlimitedsupportfromtherouters.
28Forexample,themeasurementsperformedintheSprintnetworkin2004reportedmorethan10kactiveTCPconnectionsonalink,see https://research.sprintlabs.com/packstat/packetoverview.php.
Morerecentinformationaboutbackbonelinksmaybeobtainedfromcaida‘s realtimemeasurements,seee.g.http://www.caida.org/data/realtime/passive/ 108 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Acongestion controlschemecan bemodelled asanalgorithm thatadaptsthe transmissionrate(r (t))of hosti i basedonthefeedbackreceivedfromthenetwork.
Differenttypesoffeedbacksarepossible.
Thesimplestscheme isabinaryfeedback[CJ1989][Jacobson1988]wherethehostssimplylearnwhetherthenetworkiscongestedor not.
SomecongestioncontrolschemesallowthenetworktoregularlysendanallocatedtransmissionrateinMbps toeachhost[BF1995].
Let us focus on the binary feedback scheme which is the most widely used today.
Intuitively, the congestion controlschemeshoulddecreasethetransmissionrateofahostwhencongestionhasbeendetectedinthenetwork, in order to avoid congestion collapse.
Furthermore, the hosts should increase their transmission rate when the network is not congested.
Otherwise, the hosts would not be able to efﬁciently utilise the network.
The rate allocated to each host ﬂuctuates with time, depending on the feedback received from the network.
The ﬁgure belowillustratestheevolutionofthetransmissionratesallocatedtotwohostsinoursimplenetwork.
Initially,two hostshavealowallocation,butthisisnotefﬁcient.Theallocationsincreaseuntilthenetworkbecomescongested.
At this point, the hosts decrease their transmission rate to avoid congestion collapse.
If the congestion control schemeworkswell,aftersometimetheallocationsshouldbecomebothfairandefﬁcient.
Figure4.56: Evolutionofthetransmissionrates Varioustypesofrateadaptionalgorithmsarepossible.
DahMingChiuandRajJainhaveanalysed,in[CJ1989], differenttypesofalgorithmsthatcanbeusedbyasourcetoadaptitstransmissionratetothefeedbackreceived fromthenetwork.
Intuitively,sucharateadaptationalgorithmincreasesthetransmissionratewhenthenetwork isnotcongested(ensurethatthenetworkisefﬁcientlyused)anddecreasethetransmissionratewhenthenetwork iscongested(toavoidcongestioncollapse).
Thesimplestformoffeedbackthatthenetworkcansendtoasourceisabinaryfeedback(thenetworkiscongested ornotcongested).
Inthiscase,alinearrateadaptationalgorithmcanbeexpressedas: • rate(t+1)=α +β rate(t)whenthenetworkiscongested C C • rate(t+1)=α +β rate(t)whenthenetworkisnotcongested N N With a linear adaption algorithm, α ,α ,β and β are constants.
The analysis of [CJ1989] shows that to C N C N be fair and efﬁcient, such a binary rate adaption mechanism must rely on Additive Increase and Multiplicative Decrease.
When the network is not congested, the hosts should slowly increase their transmission rate (β = N 1andα > 0).
Whenthenetworkiscongested,thehostsmustmultiplicativelydecreasetheirtransmissionrate N (β <1andα =0).
SuchanAIMDrateadaptationalgorithmcanbeimplementedbythepseudo-codebelow C C # Additive Increase Multiplicative Decrease if congestion : rate=rate*betaC # multiplicative decrease, betaC<1 else rate=rate+alphaN # additive increase, v0>0 Note: Whichbinaryfeedback?
Twotypesofbinaryfeedbackarepossibleincomputernetworks.
Aﬁrstsolutionistorelyonimplicitfeedback.
ThisisthesolutionchosenforTCP.TCP’scongestioncontrolscheme[Jacobson1988]doesnotrequireanycoop- erationfromtherouter.Itonlyassumesthattheyusebuffersandthattheydiscardpacketswhenthereiscongestion.
4.3.
TheTransmissionControlProtocol 109 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 TCPusesthesegmentlossesasanindicationofcongestion.
Whentherearenolosses,thenetworkisassumedto benotcongested.
Thisimpliesthatcongestionisthemaincauseofpacketlosses.
Thisistrueinwirednetworks, but unfortunately not always true in wireless networks.
Another solution is to rely on explicit feedback.
This isthesolutionproposedintheDECBitcongestioncontrolscheme[RJ1995]andusedinFrameRelayandATM networks.
Thisexplicitfeedbackcanbeimplementedintwoways.
Aﬁrstsolutionwouldbetodeﬁneaspecial messagethatcouldbesentbyrouterstohostswhentheyarecongested.
Unfortunately,generatingsuchmessages mayincreasetheamountofcongestioninthenetwork.
Suchacongestionindicationpacketisthusdiscouraged RFC 1812.
A better approach is to allow the intermediate routers to indicate, in the packets that they forward, theircurrentcongestionstatus.
Binaryfeedbackcanbeencodedbyusingonebitinthepacketheader.
Withsucha scheme,congestedrouterssetaspecialbitinthepacketsthattheyforwardwhilenon-congestedroutersleavethis bitunmodiﬁed.
Thedestinationhostreturnsthecongestionstatusofthenetworkintheacknowledgementsthatit sends.
DetailsaboutsuchasolutioninIPnetworksmaybefoundinRFC3168.
Unfortunately,asofthiswriting, thissolutionisstillnotdeployeddespiteitspotentialbeneﬁts.
The TCP congestion control scheme was initially proposed by Van Jacobson in [Jacobson1988].
The current speciﬁcationmaybefoundinRFC5681.
TCPreliesonAdditiveIncreaseandMultiplicativeDecrease(AIMD).
ToimplementAIMD,aTCPhostmustbeabletocontrolitstransmissionrate.
Aﬁrstapproachwouldbetouse timersandadjusttheirexpirationtimesinfunctionoftherateimposedbyAIMD.Unfortunately,maintainingsuch timersforalargenumberofTCPconnectionscanbedifﬁcult.
Instead,VanJacobsonnotedthattherateofTCP congestioncanbeartiﬁciallycontrolledbyconstrainingitssendingwindow.
ATCPconnectioncannotsenddata fasterthan window wherewindowisthemaximumbetweenthehost’ssendingwindowandthewindowadvertised rtt bythereceiver.
TCP’scongestioncontrolschemeisbasedonacongestionwindow.
Thecurrentvalueofthecongestionwindow (cwnd)isstoredintheTCBofeachTCPconnectionandthewindowthatcanbeusedbythesenderisconstrained bymin(cwnd,rwin,swin)whereswinisthecurrentsendingwindowandrwinthelastreceivedreceivewin- dow.
TheAdditiveIncreasepartoftheTCPcongestioncontrolincrementsthecongestionwindowbyMSSbytes everyround-trip-time.
IntheTCPliterature,thisphaseisoftencalledthecongestionavoidancephase.
TheMul- tiplicativeDecreasepartoftheTCPcongestioncontroldividesthecurrentvalueofthecongestionwindowonce congestionhasbeendetected.
When a TCP connection begins, the sending host does not know whether the part of the network that it uses to reach the destination is congested or not.
To avoid causing too much congestion, it must start with a small congestionwindow.
[Jacobson1988]recommendsaninitialwindowofMSSbytes.
Astheadditiveincreasepart of the TCP congestion control scheme increments the congestion window by MSS bytes every round-trip-time, the TCP connection may have to wait many round-trip-times before being able to efﬁciently use the available bandwidth.
This is especially important in environments where thebandwidth×rtt product is high.
To avoid waitingtoomanyround-trip-timesbeforereachingacongestionwindowthatislargeenoughtoefﬁcientlyutilise the network, the TCP congestion control scheme includes the slow-start algorithm.
The objective of the TCP slow-start is to quickly reach an acceptable value for the cwnd.
During slow-start, the congestion window is doubledeveryround-trip-time.
Theslow-startalgorithmusesanadditionalvariableintheTCB:sshtresh(slow- start threshold).
The ssthresh is an estimation of the last value of the cwnd that did not cause congestion.
It is initialisedatthesendingwindowandisupdatedaftereachcongestionevent.
Inpractice,aTCPimplementationconsidersthenetworktobecongestedonceitsneedstoretransmitasegment.
TheTCPcongestioncontrolschemedistinguishesbetweentwotypesofcongestion: • mildcongestion.
TCPconsidersthatthenetworkislightlycongestedifitreceivesthreeduplicateacknowl- edgements and performs a fast retransmit.
If the fast retransmit is successful, this implies that only one segment has been lost.
In this case, TCP performs multiplicative decrease and the congestion window is dividedby2.
Theslow-startthresholdissettothenewvalueofthecongestionwindow.
• severe congestion.
TCP considers that the network is severely congested when its retransmission timer expires.Inthiscase,TCPretransmitstheﬁrstsegment,setstheslow-startthresholdto50%ofthecongestion window.
ThecongestionwindowisresettoitsinitialvalueandTCPperformsaslow-start.
The ﬁgure below illustrates the evolution of the congestion window when there is severe congestion.
At the beginningoftheconnection,thesenderperformsslow-startuntiltheﬁrstsegmentsarelostandtheretransmission timerexpires.
Atthistime,thessthreshissettohalfofthecurrentcongestionwindowandthecongestionwindow is reset at one segment.
The lost segments are retransmitted as the sender again performs slow-start until the 110 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 congestion window reaches the sshtresh.
It then switches to congestion avoidance and the congestion window increaseslinearlyuntilsegmentsarelostandtheretransmissiontimerexpires... Figure4.57: EvaluationoftheTCPcongestionwindowwithseverecongestion The ﬁgure below illustrates the evolution of the congestion window when the network is lightly congested and all lost segments can be retransmitted using fast retransmit.
The sender begins with a slow-start.
A segment is lost but successfully retransmitted by a fast retransmit.
The congestion window is divided by 2 and the sender immediatelyenterscongestionavoidanceasthiswasamildcongestion.
Figure4.58: EvaluationoftheTCPcongestionwindowwhenthenetworkislightlycongested MostTCPimplementationsupdatethecongestionwindowwhentheyreceiveanacknowledgement.
Ifweassume that the receiver acknowledges each received segment and the sender only sends MSS sized segments, the TCP congestioncontrolschemecanbeimplementedusingthesimpliﬁedpseudo-code29below # Initialisation cwnd = MSS; ssthresh= swin; # Ack arrival if tcp.ack > snd.una : # new ack, no congestion if cwnd < ssthresh : # slow-start : increase quickly cwnd # double cwnd every rtt cwnd = cwnd + MSS else: # congestion avoidance : increase slowly cwnd # increase cwnd by one mss every rtt cwnd = cwnd+ mss*(mss/cwnd) else: # duplicate or old ack if tcp.ack==snd.una: # duplicate acknowledgement dupacks++ if dupacks==3: 29Inthispseudo-code,weassumethatTCPusesunlimitedsequenceandacknowledgementnumbers.
Furthermore,wedonotdetailhow thecwndisadjustedaftertheretransmissionofthelostsegmentbyfastretransmit.AdditionaldetailsmaybefoundinRFC5681.
4.3.
TheTransmissionControlProtocol 111 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 retransmitsegment(snd.una) ssthresh=max(cwnd/2,2*MSS) cwnd=ssthresh else: dupacks=0 # ack for old segment, ignored Expiration of the retransmission timer: send(snd.una) # retransmit first lost segment sshtresh=max(cwnd/2,2*MSS) cwnd=MSS FurthermorewhenaTCPconnectionhasbeenidleformorethanitscurrentretransmissiontimer,itshouldresetits congestionwindowtothecongestionwindowsizethatituseswhentheconnectionbegins,asitnolongerknows thecurrentcongestionstateofthenetwork.
Note: Initialcongestionwindow TheoriginalTCPcongestioncontrolmechanismproposedin[Jacobson1988]recommendedthateachTCPcon- nection should begin by setting cwnd = MSS.
However, in today’s higher bandwidth networks, using such a smallinitialcongestionwindowseverelyaffectstheperformanceforshortTCPconnections, suchasthoseused bywebservers.
SincethepublicationofRFC3390,TCPhostsareallowedtouseaninitialcongestionwindow ofabout4KBytes,whichcorrespondsto3segmentsinmanyenvironments.
Thanks to its congestion control scheme, TCP adapts its transmission rate to the losses that occur in the net- work.
Intuitively,theTCPtransmissionratedecreaseswhenthepercentageoflossesincreases.
Researchershave proposed detailed models that allow the prediction of the throughput of a TCP connection when losses occur [MSMO1997] .
To have some intuition about the factors that affect the performance of TCP, let us consider a verysimplemodel.
Itsassumptionsarenotcompletelyrealistic, butitgivesusgoodintuitionwithoutrequiring complexmathematics.
ThismodelconsidersahypotheticalTCPconnectionthatsuffersfromequallyspacedsegmentlosses.
Ifpisthe segmentlossratio,thentheTCPconnectionsuccessfullytransfers 1 −1segmentsandthenextsegmentislost.
p If we ignore the slow-start at the beginning of the connection, TCP in this environment is always in congestion avoidance as there are only isolated losses that can be recovered by using fast retransmit.
The evolution of the congestionwindowisthusasshownintheﬁgurebelow.Notethethatx-axisofthisﬁgurerepresentstimemeasured inunitsofoneround-trip-time,whichissupposedtobeconstantinthemodel,andthey-axisrepresentsthesize ofthecongestionwindowmeasuredinMSS-sizedsegments.
Figure4.59: Evolutionofthecongestionwindowwithregularlosses Asthelossesareequallyspaced,thecongestionwindowalwaysstartsatsomevalue(W),andisincrementedby 2 oneMSSeveryround-trip-timeuntilitreachestwicethisvalue(W).Atthispoint,asegmentisretransmittedand thecyclestartsagain.
IfthecongestionwindowismeasuredinMSS-sizedsegments,acyclelasts W round-trip- 2 times.
The bandwidth of the TCP connection is the number of bytes that have been transmitted during a given periodoftime.
Duringacycle,thenumberofsegmentsthataresentontheTCPconnectionisequaltotheareaof theyellowtrapezeintheﬁgure.
Itsareaisthus: area=(W)2+ 1 ×(W)2 = 3×W2 2 2 2 8 112 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 However,giventheregularlossesthatweconsider,thenumberofsegmentsthataresentbetweentwolosses(i.e.
(cid:113) duringacycle)isbydeﬁnitionequalto 1.
Thus,W = 8 = √k .
Thethroughput(inbytespersecond)ofthe p 3×p p TCPconnectionisequaltothenumberofsegmentstransmitteddividedbythedurationofthecycle: 3×W2 (cid:113) Throughput= area×MSS = 8 or,afterhavingeliminatedW,Throughput= 3 × MS√S time W×rtt 2 rtt× p 2 MoredetailedmodelsandtheanalysisofsimulationshaveshownthataﬁrstordermodeloftheTCPthroughput whenlossesoccurwasThroughput≈ k×M√SS.
Thisisanimportantresultwhichshowsthat: rtt× p • TCPconnectionswithasmallround-trip-timecanachieveahigherthroughputthanTCPconnectionshaving a longer round-trip-time when losses occur.
This implies that the TCP congestion control scheme is not completelyfairsinceitfavorstheconnectionsthathavetheshorterround-trip-time • TCPconnectionsthatusealargeMSScanachieveahigherthroughputthattheTCPconnectionsthatuse ashorterMSS.ThiscreatesanothersourceofunfairnessbetweenTCPconnections.
However,itshouldbe notedthattodaymosthostsareusingalmostthesameMSS,roughly1460bytes.
Ingeneral,themaximumthroughputthatcanbeachievedbyaTCPconnectiondependsonitsmaximumwindow sizeandtheround-trip-timeiftherearenolosses.
Iftherearelosses,itdependsontheMSS,theround-trip-time andthelossratio.
Throughput<min(window,k×M√SS) rtt rtt× p Note: TheTCPcongestioncontrolzoo TheﬁrstTCPcongestioncontrolschemewasproposedbyVanJacobsonin[Jacobson1988].Inadditiontowriting thescientiﬁcpaper, VanJacobsonalsoimplementedtheslow-startandcongestionavoidanceschemesinrelease 4.3TahoeoftheBSDUnixdistributedbytheUniversityofBerkeley.
Later,heimprovedthecongestioncontrol by adding the fast retransmit and the fast recovery mechanisms in the Reno release of 4.3 BSD Unix.
Since then, manyresearchershaveproposed, simulatedandimplementedmodiﬁcationstotheTCPcongestioncontrol scheme.
Someofthesemodiﬁcationsarestillusedtoday,e.g.
: • NewReno(RFC3782),whichwasproposedasanimprovementofthefastrecoverymechanismintheReno implementation • TCPVegas,whichuseschangesintheround-trip-timetoestimatecongestioninordertoavoidit[BOP1994] • CUBIC,whichwasdesignedforhighbandwidthlinksandisthedefaultcongestioncontrolschemeinthe Linux2.6.19kernel[HRX2008] • CompoundTCP,whichwasdesignedforhighbandwidthlinksisthedefaultcongestioncontrolschemein severalMicrosoftoperatingsystems[STBT2009] A search of the scientiﬁc literature will probably reveal more than 100 different variants of the TCP congestion control scheme.
Most of them have only been evaluated by simulations.
However, the TCP implementation in therecentLinuxkernelssupportsseveralcongestioncontrolschemesandnewonescanbeeasilyadded.
Wecan expectthatnewTCPcongestioncontrolschemeswillalwayscontinuetoappear.
4.4 Summary In this chapter, we have studied the transport layer.
This layer provides two types of services to the application layer.
Theunreliableconnectionlessserviceisthesimplestserviceofferedtoapplications.
OntheInternet,thisis theserviceofferedbyUDP.However,mostapplicationsprefertouseareliableandconnection-orientedtransport service.
Wehaveshownthatprovidingthisservicewasmuchmorecomplexthanprovidinganunreliableservice as the transport layer needs to recover from the errors that occur in the network layer.
For this, transport layer protocolsrelyonseveralmechanisms.
First,theyuseahandshakemechanism,suchasthethree-wayhandshake mechanism, to correctly establish a transport connection.
Once the connection has been established, transport entities exchange segments.
Each segment contains a sequence number, and the transport layer uses acknowl- edgementstoconﬁrmthesegmentsthathavebeencorrectlyreceived.
Inaddition,timersareusedtorecoverfrom segment losses and sliding windows are used to avoid overﬂowing the buffers of the transport entities.
Finally, 4.4.
Summary 113 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 weexplainedhowatransportconnectioncanbesafelyreleased.
Wethendiscussedthemechanismsthatareused inTCP,thereliabletransportprotocol,usedbymostapplicationsontheInternet.
Mostnotably,wedescribedthe congestioncontrolmechanismthathasbeenincludedinTCPsincethelate1980sandexplainedhowthereliability mechanismsusedbyTCPhavebeentunedovertheyears.
4.5 Exercises This section is divided in two parts.
The ﬁrst part contains exercises on the principles of transport protocols, includingTCP.Thesecondpartcontainsprogrammingchallengespacketanalysistoolstoobservethebehaviour oftransportprotocols.
4.5.1 Principles 1.
ConsidertheAlternatingBitProtocolasdescribedinthischapter • Howdoestheprotocolrecoverfromthelossofadatasegment?
• Howdoestheprotocolrecoversfromthelossofanacknowledgement?
2.
AstudentproposedtooptimisetheAlternatingBitProtocolbyaddinganegativeacknowledgment,i.e.
the receiversendsaNAKcontrolsegmentwhenitreceivesacorrupteddatasegment.
Whatkindofinformation shouldbeplacedinthiscontrolsegmentandhowshouldthesenderreactwhenreceivingsuchaNAK ?
3.
Transportprotocolsrelyondifferenttypesofchecksumstoverifywhethersegmentshavebeenaffectedby transmissionerrors.
Themostfrequentlyusedchecksumsare: • the Internet checksum used by UDP, TCP and other Internet protocols which is deﬁned in RFC 1071 and implemented in various modules, e.g.
http://ilab.cs.byu.edu/cs460/code/ftp/ichecksum.pyforapythonimplementation • the 16 bits or the 32 bits Cyclical Redundancy Checks (CRC) that are often used on disks, in ziparchivesandindatalinklayerprotocols.
Seehttp://docs.python.org/library/binascii.htmlfor apythonmodulethatcontainsthe32bitsCRC • the Alder checksum deﬁned in RFC 2920 for the SCTP protocol but replaced by a CRC later RFC3309 • the Fletcher checksum [Fletcher1982], see http://drdobbs.com/database/184408761 for imple- mentationdetails ByusingyourknowledgeoftheInternetchecksum,canyouﬁndatransmissionerrorthatwillnotbe detectedbytheInternetchecksum?
4.
TheCRCsareefﬁcienterrordetectioncodesthatareabletodetect: • allerrorsthataffectanoddnumberofbits • allerrorsthataffectasequenceofbitswhichisshorterthanthelengthoftheCRC CarryexperimentswithoneimplementationofCRC-32toverifythatthisisindeedthecase.
5.
Checksums and CRCs should not be confused with secure hash functions such as MD5 deﬁned in RFC 1321orSHA-1describedinRFC4634.
Securehashfunctionsareusedtoensurethatﬁlesorsometimes packets/segmentshavenotbeenmodiﬁed.
Securehashfunctionsaimatdetectingmaliciouschangeswhile checksumsandCRCsonlydetectrandomtransmissionerrors.
Performsomeexperimentswithhashfunc- tionssuchasthosedeﬁnedinthehttp://docs.python.org/library/hashlib.htmlpythonhashlibmoduletoverify thatthisisindeedthecase.
6.
A version of the Alternating Bit Protocol supporting variable length segments uses a header that contains thefollowingﬁelds: • anumber(0or1) • alengthﬁeldthatindicatesthelengthofthedata 114 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • aCRC Tospeedupthetransmissionofthesegments, astudentproposestocomputetheCRCoverthedata partofthesegmentbutnotovertheheader.
Whatdoyouthinkofthisoptimisation?
7.
On Unix hosts, the ping(8) command can be used to measure the round-trip-time to send and receive packets from a remote host.
Use ping(8) to measure the round-trip to a remote host.
Chose a remote destinationwhichisfarfromyourcurrentlocation,e.g.
asmallwebserverinadistantcountry.
Thereare implementations of ping in various languages, see e.g.
http://pypi.python.org/pypi/ping/0.2 for a python implementationof‘’ping’‘ 8.
How would you set the retransmission timer if you were implementing the Alternating Bit Protocol to exchangeﬁleswithaserversuchastheonethatyoumeasuredabove?
9.
WhatarethefactorsthataffecttheperformanceoftheAlternatingBitProtocol?
10.
Links are often considered as symmetrical, i.e.
they offer the same bandwidth in both directions.
Sym- metricallinksarewidelyusedinLocalAreaNetworksandinthecoreoftheInternet, buttherearemany asymmetrical link technologies.
The most common example are the various types of ADSL and CATV technologies.
Consider an implementation of the Alternating Bit Protocol that is used between two hosts thataredirectlyconnectedbyusinganasymmetriclink.
Assumethatahostissendingsegmentscontaining 10bytesofcontrolinformationand90bytesofdataandthattheacknowledgementsare10byteslong.
If theround-trip-timeisnegligible,whatistheminimumbandwidthrequiredonthereturnlinktoensurethat thetransmissionofacknowledgementsisnotabottleneck?
11.
Derive a mathematical expression that provides the goodput achieved by the Alternating Bit Protocol as- sumingthat: • EachsegmentcontainsDbytesofdataandcbytesofcontrolinformation • Eachacknowledgementcontainscbytesofcontrolinformation • ThebandwidthofthetwodirectionsofthelinkissettoBbitspersecond • Thedelaybetweenthetwohostsisssecondsinbothdirections The goodput is deﬁned as the amount of SDUs (measured in bytes) that is successfully transferred duringaperiodoftime 12.
Consider an Alternating Bit Protocol that is used over a link that suffers from deterministic errors.
When theerrorratioissetto 1, thismeansthatp−1bitsaretransmittedcorrectlyandthepth bitiscorrupted.
p DiscussthefactorsthataffecttheperformanceoftheAlternatingBitProtocoloversuchalink.
13.
AmazonprovidestheS3storageservicewherecompaniesandresearcherscanstorelotsofinformationand performcomputationsonthestoredinformation.AmazonallowsuserstosendﬁlesthroughtheInternet,but alsobysendinghard-disks.Assumethata1Terabytehard-diskcanbedeliveredwithin24hourstoAmazon bycourierservice.
Whatistheminimumbandwidthrequiredtomatchthebandwidthofthiscourierservice ?
14.
Several large data centers operators (e.g.
Microsoft and google) have announced that they install servers ascontainerswitheachcontainerhostingupto2000servers.
Assumingacontainerwith2000serversand eachstoring500GBytesofdata,whatisthetimerequiredtomoveallthedatastoredinonecontainerover one10Gbpslink?
Whatisthebandwidthofatruckthatneeds10hourstomoveonecontainerfromone datacentertoanother.
15.
Whatarethetechniquesusedbyago-back-nsendertorecoverfrom: • transmissionerrors • lossesofdatasegments • lossesofacknowledgements 16.
Consider a b bits per second link between two hosts that has a propagation delay of t seconds.
Derive a formulathatcomputesthetimeelapsedbetweenthetransmissionoftheﬁrstbitofadbytessegmentfrom asendinghostandthereceptionofthelastbitofthissegmentonthereceivinghost.
4.5.
Exercises 115 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 17.
Consider a go-back-n sender and a go-back receiver that are directly connected with a 10 Mbps link that hasapropagationdelayof100milliseconds.
Assumethattheretransmissiontimerissettothreeseconds.
If the window has a length of 4 segments, draw a time-sequence diagram showing the transmission of 10 segments(eachsegmentcontains10000bits): • whentherearenolosses • whenthethirdandseventhsegmentsarelost • whenthesecond,fourth,sixth,eighth,... acknowledgementsarelost • whenthethirdandfourthdatasegmentsarereordered(i.e.
thefourtharrivesbeforethethird) 18.
Samequestionwhenusingselectiverepeatinsteadofgo-back-n. Notethattheanswerisnotnecessarilythe same.
19.
Considertwohigh-endserversconnectedback-to-backbyusinga10Gbpsinterface.
Ifthedelaybetween thetwoserversisonemillisecond,whatisthethroughputthatcanbeachievedbyatransportprotocolthat isusing10,000bitssegmentsandawindowof • onesegment • tensegments • hundredsegments 20.
Consider two servers are directly connected by using a b bits per second link with a round-trip-time of r seconds.Thetwoserversareusingatransportprotocolthatsendssegmentscontainingsbytesandacknowl- edgementscomposedofabytes.
Canyouderiveaformulathatcomputesthesmallestwindow(measured insegments)thatisrequiredtoensurethattheserverswillbeabletocompletelyutilisethelink?
21.
Samequestionasaboveifthetwoserversareconnectedthroughanasymmetricallinkthattransmitsbubits persecondinthedirectionusedtosenddatasegmentsandbdbitspersecondinthedirectionusedtosend acknowledgements.
22.
TheTrivialFileTransferProtocolisaverysimpleﬁletransferprotocolthatisoftenusedbydisk-lesshosts when booting from a server.
Read the TFTP speciﬁcation in RFC 1350 and explain how TFTP recovers fromtransmissionerrorsandlosses.
23.
Isitpossibleforago-back-nreceivertointer-operatewithaselective-repeatsender?
Justifyyouranswer.
24.
Isitpossibleforaselective-repeatreceivertointer-operatewithago-back-nsender?
Justifyyouranswer.
25.
The go-back-n and selective repeat mechanisms that are described in the book exclusively rely on cumu- lative acknowledgements.
This implies that a receiver always returns to the sender information about the last segment that was received in-sequence.
If there are frequent losses or reordering, a selective repeat receivercouldreturnseveraltimesthesamecumulativeacknowledgment.
Canyouthinkofothertypesof acknowledgementsthatcouldbeusedbyaselectiverepeatreceivertoprovideadditionalinformationabout the out-of-sequence segments that it has received.
Design such acknowledgements and explain how the sendershouldreactuponreceptionofthisinformation.
26.
The goodput achieved by a transport protocol is usually deﬁned as the number of application layer bytes thatareexchangedperunitoftime.
Whatarethefactorsthatcaninﬂuencethegoodputachievedbyagiven transportprotocol?
27.
When used with IPv4, Transmission Control Protocol (TCP) attaches 40 bytes of control information to each segment sent.
Assuming an inﬁnite window and no losses nor transmission errors, derive a formula thatcomputesthemaximumTCPgoodputinfunctionofthesizeofthesegmentsthataresent.
28.
Ago-back-nsenderusesawindowsizeencodedinanbitsﬁeld.
Howmanysegmentscanitsendwithout receivinganacknowledgement?
29.
Consider the following situation.
A go-back-n receiver has sent a full window of data segments.
All the segmentshavebeenreceivedcorrectlyandin-orderbythereceiver,butallthereturnedacknowledgements havebeenlost.
Showbyusingatimesequencediagram(e.g.
byconsideringawindowoffoursegments) whathappensinthiscase.
Canyouﬁxtheproblemonthego-back-nsender?
116 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 30.
Samequestionasabove,butassumenowthatboththesenderandthereceiverimplementselectiverepeat.
Notethetheanswerwillbedifferentfromtheabovequestion.
31.
Consider a transport that supports window of one hundred 1250 Bytes segments.
What is the maximum bandwidth that this protocol can achieve if the round-trip-time is set to one second ?
What happens if, insteadofadvertisingawindowofonehundredsegments,thereceiverdecidestoadvertiseawindowof10 segments?
32.
Explainunderwhichcircumstancesatransportentitycouldadvertiseawindowof0segments?
33.
To understand the operation of the TCP congestion control mechanism, it is useful to draw some time sequencediagrams.
LetusconsiderasimplescenarioofawebclientconnectedtotheInternetthatwishes to retrieve a simple web page from a remote web server.
For simplicity, we will assume that the delay between the client and the server is 0.5 seconds and that the packet transmission times on the client and theserversarenegligible(e.g.
theyarebothconnectedtoa1Gbpsnetwork).
Wewillalsoassumethatthe clientandtheserveruse1KBytessegments.
1.
ComputethetimerequiredtoopenaTCPconnection,sendanHTTPrequestandretrievea16KBytesweb page.
Thispagesizeistypicaloftheresultsreturnedbysearchengineslikegoogle_orbing.
Animportant factorinthisdelayistheinitialsizeoftheTCPcongestionwindowontheserver.Assumeﬁrstthattheinitial windowissetto1segmentasdeﬁnedinRFC2001,4KBytes(i.e.
4segmentsinthiscase)asproposedin RFC3390or16KBytesasproposedinarecentpaper.
2.
Performthesameanalysiswithaninitialwindowofonesegmentisthethirdsegmentsentbytheserveris lostandtheretransmissiontimeoutisﬁxedandsetto2seconds.
3.
Samequestionasabovebutassumenowthatthe6thsegmentislost.
4.
Samequestionasabove,butconsidernowthelossofthesecondandseventhacknowledgementssentbythe client.
5.
Doestheanalysisabovechangesiftheinitialwindowissetto16KBytesinsteadofonesegment?
34.
SeveralMByteshavebeensentonaTCPconnectionanditbecomesidleforseveralminutes.Discusswhich valuesshouldbeusedforthecongestionwindow,slowstartthresholdandretransmissiontimers.
35.
Tooperatereliably, atransportprotocolthatusesGo-back-n(resp.
selectiverepeat)cannotuseawindow thatislargerthan2n−1(resp.
2n−1)segments.
DoesthislimitationaffectsTCP?Explainyouranswer.
36.
Considerthesimplenetworkshownintheﬁgurebelow.
Inthisnetwork,therouterbetweentheclientand theservercanonlystoreoneachoutgoinginterfaceonepacketinadditiontothepacketthatitiscurrently transmitting.
It discards all the packets that arrive while its buffer is full.
Assuming that you can neglect thetransmissiontimeofacknowledgementsandthattheserverusesaninitialwindowofonesegmentand hasaretransmissiontimersetto500milliseconds,whatisthetimerequiredtotransmit10segmentsfrom theclienttotheserver.
Doestheperformanceincreasesiftheserverusesaninitialwindowof16segments instead?
Figure4.60: Simplenetwork 37.
TheﬁgurebelowdescribestheevolutionofthecongestionwindowofaTCPconnection.
Canyouﬁndthe reasonsforthethreeeventsthataremarkedintheﬁgure?
38.
TheﬁgurebelowdescribestheevolutionofthecongestionwindowofaTCPconnection.
Canyouﬁndthe reasonsforthethreeeventsthataremarkedintheﬁgure?
4.5.
Exercises 117 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.61: Evolutionofthecongestionwindow Figure4.62: Evolutionofthecongestionwindow 39.
AwebserverservesmainlyHTMLpagesthatﬁtinside10TCPsegments.
Assumingthatthetransmission timeofeachsegmentcanbeneglected,computethetotaltransfertimeofsuchapage(inround-trip-times) assumingthat: • theTCPstackusesaninitialwindowsizeof1segment • theTCPstackusesaninitialwindowsizeofthreesegments 40.
RFC3168deﬁnesmechanismthatallowrouterstomarkpacketsbysettingonebitinthepacketheaderwhen theyarecongested.
WhenaTCPdestinationreceivessuchamarkinginapacket,itreturnsthecongestion marking to the source that reacts by halving its congestion window and performs congestion avoidance.
ConsideraTCPconnectionwherethefourthdatasegmentexperiencescongestion.
Comparethedelayto transmit 8 segments in a network where routers discards packets during congestion and a network where routersmarkpacketsduringcongestion.
4.5.2 Practice 1.
The socket interface allows you to use the UDP protocol on a Unix host.
UDP provides a connectionless unreliableservicethatintheoryallowsyoutosendSDUsofupto64KBytes.
• ImplementasmallUDPclientandasmallUDPserver(inpython,youcanstartfromtheexampleprovided inhttp://docs.python.org/library/socket.htmlbutyoucanalsouseCorjava) • run the client and the servers on different workstations to determine experimentally the largest SDU that issupportedbyyourlanguageandOS.Ifpossible,usedifferentlanguagesandOperatingSystemsineach group.
2.
Byusingthesocketinterface,implementontopoftheconnectionlessunreliableserviceprovidedbyUDP asimpleclientthatsendsthefollowingmessageshownintheﬁgurebelow.
In this message, the bit ﬂags should be set to 01010011b, the value of the 16 bits ﬁeld must be the square root of the value contained in the 32 bits ﬁeld, the character string must be an ASCII representation(withoutanytrailing0)ofthenumbercontainedinthe32bitscharacterﬁeld.
Thelast 16bitsofthemessagecontainanInternetchecksumthathasbeencomputedovertheentiremessage.
Uponreceptionofamessage,theserververiﬁesthat: 118 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • theﬂaghasthecorrectvalue • the32bitsintegeristhesquareofthe16bitsinteger • thecharacterstringisanASCIIrepresentationofthe32bitsinteger • theInternetchecksumiscorrect If the veriﬁcation succeeds, the server returns a SDU containing 11111111b.
Otherwise it returns 01010101b Yourimplementationmustbeabletorunonbothlowendianandbigendianmachines.
Ifyouhave access to different types of machines (e.g.
x86 laptops and SPARC servers), try to run your imple- mentationonbothtypesofmachines.
Figure4.63: SimpleSDUformat 3.
The socket library is also used to develop applications above the reliable bytestream service provided by TCP.Wehaveinstalledonthecnp3.info.ucl.ac.beserverasimpleserverthatprovidesasimpleclient-server service.
Theserviceoperatesasfollows: • theserverlistensonport62141foraTCPconnection • upontheestablishmentofaTCPconnection,theserversendsanintegerbyusingthefollowing TLVformat: – theﬁrsttwobitsindicatethetypeofinformation(01forASCII,10forboolean) – thenextsixbitsindicatethelengthoftheinformation(inbytes) – An ASCII TLV has a variable length and the next bytes contain one ASCII character per byte.
AbooleanTLVhasalengthofonebyte.
Thebyteissetto00000000bfortrueand 00000001bforfalse.
• the client replies by sending the received integer encoded as a 32 bits integer in network byte order • theserverreturnsaTLVcontainingtrueiftheintegerwascorrectandaTLVcontainingfalse otherwiseandclosestheTCPconnection ImplementaclienttointeractwiththisserverinC,Javaorpython.
4.
Itisnowtimetoimplementasmalltransportprotocol.
Theprotocolusesaslidingwindowtotransmitmore thanonesegmentwithoutbeingforcedtowaitforanacknowledgment.
Yourimplementationmustsupport variablesizeslidingwindowastheotherendoftheﬂowcansenditsmaximumwindowsize.
Thewindow sizeisencodedasathreebitsunsignedinteger.
The protocol identiﬁes the DATA segments by using sequence numbers.
The sequence number of the ﬁrst segment must be 0.
It is incremented by one for each new segment.
The receiver must acknowledgethedeliveredsegmentsbysendinganACKsegment.
Thesequencenumberﬁeldinthe ACKsegmentalwayscontainsthesequencenumberofthenextexpectedin-sequencesegmentatthe receiver.
Theﬂowofdataisunidirectional,meaningthatthesenderonlysendsDATAsegmentsand thereceiveronlysendsACKsegments.
Todealwithsegmentslosses,theprotocolmustimplementarecoverytechniquesuchasgo-back-nor selectiverepeatanduseretransmissiontimers.
Youcanselectthetechniquethatbestsuiteyourneeds andstartfromasimpletechniquethatyouimprovelater.
4.5.
Exercises 119 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.64: Segmentformat Thissegmentformatcontainsthefollowingﬁelds: • Type: segmenttype – 0x1DATAsegment.
– 0x2ACKsegment • WIN:thesizeofthecurrentwindow(anintegerencodedasa3bitsﬁeld).
InDATAsegments, this ﬁeld indicates the size of the sending window of the sender.
In ACK segments, this ﬁeld indicatesthecurrentvalueofthereceivingwindow.
• Sequence: Sequence number (8 bits unsigned integer), starts at 0.
The sequence number is incrementedby1foreachnewDATAsegmentsentbythesender.
InsideanACKsegment,the sequenceﬁeldcarriesthesequencenumberofthenextin-sequencesegmentthatisexpectedby thereceiver.
• Length: length of the payload in multiple of one byte.
All DATA segments contain a payload with 512 bytes of data, except the last DATA segment of a transfer that can be shorter.
The reception of a DATA segment whose length is different than 512 indicates the end of the data transit.
• Payload: thedatatosend TheclientandtheserverexchangeUDPdatagramsthatcontaintheDATAandACKsegments.
They mustprovideacommand-lineinterfacethatallowstotransmitonebinaryﬁleandsupportthefollow- ingparameters: sender <destination_DNS_name> <destination_port_number> <window_size> <input_file> receiver <listening_port_number> <window_size> <output_file> In order to test the reactions of your protocol against errors and losses, you you can use a random numbergeneratortoprobabilisticallydropreceivedsegmentsandintroducerandomdelaysuponthe arrivalofasegment.
Packettraceanalysis Whendebuggingnetworkingproblemsortoanalyseperformanceproblems,itissometimesusefultocapturethe segmentsthatareexchangedbetweentwohostsandtoanalysethem.
Severalpackettraceanalysistoolsareavailable,eitherascommercialoropen-sourcetools.
Thesetoolsareable tocaptureallthepacketsexchangedonalink.
Ofcourse,capturingpacketsrequireadministratorprivileges.
They can also analyse the content of the captured packets and display information about them.
The captured packets canbestoredinaﬁleforofﬂineanalysis.
tcpdumpisprobablyoneofthemostwellknownpacketcapturesoftware.
Itisabletobothcapturepacketsand displaytheircontent.
tcpdumpisatext-basedtoolthatcandisplaythevalueofthemostimportantﬁeldsofthe capturedpackets.
Additionalinformationabouttcpdumpmaybefoundintcpdump(1).
Thetextbelowisan exampleoftheoutputoftcpdumpfortheﬁrstTCPsegmentsexchangedonanscptransferbetweentwohosts.
21:05:56.230737 IP 192.168.1.101.54150 > 130.104.78.8.22: S 1385328972:1385328972(0) win 65535 <mss 1460,nop,wscale 3,nop,nop,timestamp 274527749 0,sackOK,eol> 21:05:56.251468 IP 130.104.78.8.22 > 192.168.1.101.54150: S 3627767479:3627767479(0) ack 1385328973 win 49248 <nop,nop,timestamp 1212093352 274527749,mss 1452,nop,wscale 0,nop,nop,sackOK> 21:05:56.251560 IP 192.168.1.101.54150 > 130.104.78.8.22: .
ack 1 win 65535 <nop,nop,timestamp 274527749 1212093352> 21:05:56.279137 IP 130.104.78.8.22 > 192.168.1.101.54150: P 1:21(20) ack 1 win 49248 <nop,nop,timestamp 1212093355 274527749> 120 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 21:05:56.279241 IP 192.168.1.101.54150 > 130.104.78.8.22: .
ack 21 win 65535 <nop,nop,timestamp 274527749 1212093355> 21:05:56.279534 IP 192.168.1.101.54150 > 130.104.78.8.22: P 1:22(21) ack 21 win 65535 <nop,nop,timestamp 274527749 1212093355> 21:05:56.303527 IP 130.104.78.8.22 > 192.168.1.101.54150: .
ack 22 win 49248 <nop,nop,timestamp 1212093357 274527749> 21:05:56.303623 IP 192.168.1.101.54150 > 130.104.78.8.22: P 22:814(792) ack 21 win 65535 <nop,nop,timestamp 274527749 1212093357> YoucaneasilyrecogniseintheoutputabovetheSYN segmentcontainingtheMSS,windowscale,timestampand sackOK options, the SYN+ACK segment whosewscale option indicatesthat theserver uses windowscaling for thisconnectionandthentheﬁrstfewsegmentsexchangedontheconnection.
wiresharkismorerecentthantcpdump.
Itevolvedfromtheetherealpackettraceanalysissoftware.
Itcanbeused asatexttoolliketcpdump.
ForaTCPconnection,wiresharkwouldprovidealmostthesameoutputastcpdump.
Themainadvantageofwiresharkisthatitalsoincludesagraphicaluserinterfacethatallowstoperformvarious typesofanalysisonapackettrace.
Figure4.65: Wireshark: defaultwindow Thewiresharkwindowisdividedinthreeparts.
Thetoppartofthewindowisasummaryoftheﬁrstpacketsfrom thetrace.
Byclickingononeofthelines,youcanshowthedetailedcontentofthispacketinthemiddlepartof thewindow.
Themiddleofthewindowallowsyoutoinspectalltheﬁeldsofthecapturedpacket.
Thebottompart ofthewindowisthehexadecimalrepresentationofthepacket,withtheﬁeldselectedinthemiddlewindowbeing highlighted.
wireshark is very good at displaying packets, but it also contains several analysis tools that can be very useful.
TheﬁrsttoolisFollowTCPstream.
ItispartoftheAnalyzemenuandallowsyoutoreassembleanddisplayall thepayloadexchangedduringaTCPconnection.
Thistoolcanbeusefulifyouneedtoanalyseforexamplethe commandsexchangedduringaSMTPsession.
ThesecondtoolistheﬂowgraphthatispartoftheStatisticsmenu.
Itprovidesatimesequencediagramofthe packetsexchangedwithsomecommentsaboutthepacketcontents.
Seeblowforanexample.
Figure4.66: Wireshark: ﬂowgraph ThethirdsetoftoolsaretheTCPstreamgraphtoolsthatarepartoftheStatisticsmenu.
Thesetoolsallowyou to plot various types of information extracted from the segments exchanged during a TCP connection.
A ﬁrst interesting graph is the sequence number graph that shows the evolution of the sequence number ﬁeld of the capturedsegmentswithtime.
Thisgraphcanbeusedtodetectgraphicallyretransmissions.
4.5.
Exercises 121 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure4.67: Wireshark: sequencenumbergraph Asecondinterestinggraphistheround-trip-timegraphthatshowstheevolutionoftheround-trip-timeinfunction of time.
This graph can be used to check whether the round-trip-time remains stable or not.
Note that from a packet trace, wireshark can plot two round-trip-time graphs, One for the ﬂow from the client to the server and the other one.
wireshark will plot the round-trip-time graph that corresponds to the selected packet in the top wiresharkwindow.
Figure4.68: Wireshark: round-trip-timegraph Emulatinganetworkwithnetkit NetkitisnetworkemulatorbasedonUserModeLinux.
ItallowstoeasilysetupanemulatednetworkofLinux machines,thatcanactasend-hostorrouters.
Note: WherecanIﬁndNetkit?
Netkit is available at http://www.netkit.org.
Files can be downloaded from http://wiki.netkit.org/index.php/Download_Ofﬁcial, and instructions for the installations are available here : http://wiki.netkit.org/download/netkit/INSTALL.
There are two ways to use Netkit : The manual way, and by using pre-conﬁgured labs.
In the ﬁrst case, you bootandcontroleachmachineindividually,usingthecommandsstartingwitha“v”(forvirtualmachine).
Inthe secondcase,youcanstartawholenetworkinasingleoperation.
Thecommandsforcontrollingthelabstartwith a“l”.
Themanpagesofthosecommandsisavailablefromhttp://wiki.netkit.org/man/man7/netkit.7.html 122 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Youmustbecarefulnottoforgottostopyourvirtualmachinesandlabs,usingeithervhaltorlhalt.
Anetkitlabissimplyadirectorycontainingatleastaconﬁgurationﬁlecalledlab.conf,andonedirectoryforeach virtualmachine.
InthecasethelabavailableoniCampus,thenetworkiscomposedoftwopcs,pc1andpc2,both ofthembeingconnectedtoarouterr1.
Thelab.confﬁlecontainsthefollowinglines: pc1[0]=A pc2[0]=B r1[0]=A r1[1]=B Thismeansthatpc1andr1areconnectedtoa“virtualLAN”namedAviatheirinterfaceeth0,whilepc2andr1 areconnectedtothe“virtualLAN”Bviarespectivelytheirinterfaceseth0andeth1.
Thedirectoryofeachdeviceisinitiallyempty,butwillbeusedbyNetkittostoretheirﬁlesystem.
The lab directory can contain optional ﬁles.
In the lab provided to you, the “pc1.startup” ﬁle contains the shell instructionstobeexecutedonstartupofthevirtualmachine.Inthisspeciﬁccase,thescriptconﬁgurestheinterface eth0toallowtrafﬁcexchangesbetweenpc1andr1,aswellastheroutingtableentrytojoinpc2.
Startingalabconsiststhussimplyinunpackingtheprovidedarchive,goingintothelabdirectoryandtypinglstart tostartthenetwork.
Note: Filesharingbetweenvirtualmachinesandhost Virtualmachinescanaccesstothedirectoryofthelabtheybelongto.Thisrepertoryismountedintheirﬁlesystem atthepath/hostlab.
Inthenetkitlab(exercises/netkit/netkit_lab_2hosts_1rtr_ipv4.tar.tar.gz,youcanﬁnd asimplepythonclient/serverapplicationthatestablishesTCPconnections.Feelfreetore-usethiscodetoperform youranalysis.
Note: netkittools AsthevirtualmachinesrunLinux,standardnetworkingtoolssuchashping,tcpdump,netstatetc.
areavailableas usual.
Note that capturing network traces can be facilitated by using the uml_dump extension available at http://kartoch.msi.unilim.fr/blog/?p=19.
Thisextensionis alreadyinstalled intheNetkit installationon thestu- dentlab.Inordertocapturethetrafﬁcexchangedonagiven‘virtualLAN’,yousimplyneedtoissuethecommand vdump<LANname>onthehost.
Ifyouwanttopipethetracetowireshark,youcanusevdumpA|wireshark-i- -k 1.
ATCP/IPstackreceivesaSYNsegmentwiththesequencenumbersetto1234.
Whatwillbethevalueof theacknowledgementnumberinthereturnedSYN+ACKsegment?
2.
IsitpossibleforaTCP/IPstacktoreturnaSYN+ACKsegmentwiththeacknowledgementnumbersetto0 ?
Ifno,explainwhy.
Ifyes,whatwasthecontentofthereceivedSYNsegment.
3.
Openthetcpdumppackettraceexercises/traces/trace.5connections_opening_closing.pcap andidentifythenumberofdifferentTCPconnectionsthatareestablishedandclosed.
Foreachconnection, explain by which mechanism they are closed.
Analyse the initial sequence numbers that are used in the SYNandSYN+ACKsegments.
Howdotheseinitialsequencenumbersevolve?
Aretheyincreasedevery 4microseconds?
4.
The tcpdump packet trace exercises/traces/trace.5connections.pcap contains several connectionattempts.
Canyouexplainwhatishappeningwiththeseconnectionattempts?
5.
The tcpdump packet trace exercises/traces/trace.ipv6.google.com.pcap was collected fromapopularwebsitethatisaccessiblebyusingIPv6.
ExplaintheTCPoptionsthataresupportedbythe clientandtheserver.
4.5.
Exercises 123 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 6.
The tcpdump packet trace exercises/traces/trace.sirius.info.ucl.ac.be.pcap Was collectedonthedepartmentalserver.
WhataretheTCPoptionssupportedbythisserver?
7.
ATCPimplementationmaintainsaTransmissionControlBlock(TCB)foreachTCPconnection.ThisTCB isadatastructurethatcontainsthecomplete“state”ofeachTCPconnection.TheTCBisdescribedinRFC 793.
ItcontainsﬁrsttheidentiﬁcationoftheTCPconnection: • localip: theIPaddressofthelocalhost • remoteip: theIPaddressoftheremotehost • remoteport: theTCPportusedforthisconnectionontheremotehost • localport : the TCP port used for this connection on the local host.
Note that when a client opensaTCPconnection,thelocalportwilloftenbechosenintheephemeralportrange(49152 <=localport<=65535).
• sndnxt : the sequence number of the next byte in the byte stream (the ﬁrst byte of a new data segmentthatyousendwillusethissequencenumber) • snduna: theearliestsequencenumberthathasbeensentbuthasnotyetbeenacknowledged • rcvnxt : the sequence number of the next byte that your implementation expects to receive fromtheremotehost.
Forthisexercise,youdonotneedtomaintainareceivebufferandyour implementationcandiscardtheout-of-sequencesegmentsthatitreceives • sndwnd: thecurrentsendingwindow • rcvwnd: thecurrentwindowadvertisedbythereceiver Using the exercises/traces/trace.sirius.info.ucl.ac.be.pcap packet trace, whatistheTCBoftheconnectiononhost130.104.78.8whenitsendsthethirdsegmentofthetrace?
8.
The tcpdump packet trace exercises/traces/trace.maps.google.com was collected by con- taining a popular web site that provides mapping information.
How many TCP connections were used to retrievetheinformationfromthisserver?
9.
Some network monitoring tools such as ntop collect all the TCP segments sent and received by a host or a group of hosts and provide interesting statistics such as the number of TCP connections, the number of bytesexchangedovereachTCPconnection, ... AssumingthatyoucancapturealltheTCPsegmentssent by a host, propose the pseudo-code of an application that would list all the TCP connections established andacceptedbythishostandthenumberofbytesexchangedovereachconnection.
Doyouneedtocount thenumberofbytescontainedinsideeachsegmenttoreportthenumberofbytesexchangedovereachTCP connection?
10.
There are two types of ﬁrewalls 30 : special devices that are placed at the border of campus or enterprise networks and software that runs on endhosts.
Software ﬁrewalls typically analyse all the packets that are received by a host and decide based on the packet’s header and contents whether it can be processed by the host’s network stack or must be discarded.
System administrators often conﬁgure ﬁrewalls on laptop or student machines to prevent students from installing servers on their machines.
How would you de- sign a simple ﬁrewall that blocks all incoming TCP connections but still allows the host to establish TCP connectionstoanyremoteserver?
11.
Using the netkit lab explained above, perform some tests by using hping3(8).
hping3(8) is a com- mandlinetoolthatallowsanyone(havingsystemadministratorprivileges)tosendspecialIPpacketsand TCPsegments.
hping3(8)canbeusedtoverifytheconﬁgurationofﬁrewalls33 ordiagnoseproblems.
WewilluseittotesttheoperationoftheLinuxTCPstackrunninginsidenetkit.
1.
On the server host, launch tcpdump(1) with -vv as parameter to collect all packets received from the clientanddisplaythem.
Usinghping3(8)ontheclienthost, sendavalidSYNsegmenttooneunused portontheserverhost(e.g.
12345).
Whatarethecontentsofthesegmentreturnedbytheserver?
30AﬁrewallisasoftwareorhardwaredevicethatanalysesTCP/IPpacketsanddecides,basedonasetofrules,toacceptordiscardthe packetsreceivedorsent.Therulesusedbyaﬁrewallusuallydependonthevalueofsomeﬁeldsofthepackets(e.g.typeoftransportprotocols, ports,...).Wewilldiscussinmoredetailstheoperationofﬁrewallsinthenetworklayerchapter.
124 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 2.
Performthesameexperiment,butnowsendaSYNsegmenttowardsport7.
Thisportisthedefaultportfor thediscardservice(seeservices(5))launchedbyxinetd(8)).
Whatsegmentdoestheserversends inreply?
Whathappensuponreceptionofthissegment?
Explainyouranswer.
12.
The Linux TCP/IP stack can be easily conﬁgured by using sysctl(8) to change kernel conﬁguration variables.
Seehttp://fasterdata.es.net/TCP-tuning/ip-sysctl-2.6.txtforarecentlistofthesysctlvariableson theLinuxTCP/IPstack.
TrytodisabletheselectiveacknowledgementsandtheRFC1323timestampand large window options and open a TCP connection on port 7 on the server by using :manpage:telnet‘(1)‘.
Checkbyusingtcpdump(1)theeffectofthesekernelvariablesonthesegmentssentbytheLinuxstack innetkit.
13.
Networkadministratorssometimesneedtoverifywhichnetworkingdaemonsareactiveonaserver.
When logged on the server, several tools can be used to verify this.
A ﬁrst solution is to use the netstat(8) command.
ThiscommandallowsyoutoextractvariousstatisticsfromthenetworkingstackontheLinux kernel.
ForTCP,netstatcanlistalltheactiveTCPconnectionswiththestateoftheirFSM.netstatsupports thefollowingoptionsthatcouldbeusefulduringthisexercises: • -trequestsinformationabouttheTCPconnections • -n requests numeric output (by default, netstat sends DNS queries to resolve IP addresses in hosts and uses /etc/services to convert port number in service names, -n is recommended on netkitmachines) • -eprovidesmoreinformationaboutthestateoftheTCPconnections • -oprovidesinformationaboutthetimers • -aprovidesinformationaboutallTCPconnections,notonlythoseintheEstablishedstate On the netkit lab, launch a daemon and start a TCP connection by using telnet(1) and use netstat(8)toverifythestateoftheseconnections.
Asecondsolutiontodeterminewhichnetworkdaemonsarerunningonaserveristouseatoollike nmap(1).
nmap(1)canberunremotelyandthuscanprovideinformationaboutahostonwhich thesystemadministratorcannotlogin.
Usetcpdump(1)tocollectthesegmentssentbynmap(1) runningontheclientandexplainhownmap(1)operates.
14.
LonglivedTCPconnectionsaresusceptibletotheso-calledRSTattacks.
Trytoﬁndadditionalinformation aboutthisattackandexplainhowaTCPstackcouldmitigatesuchattacks.
15.
For the exercises below, we have performed measurements in an emulated 31 network similar to the one shownbelow.
Figure4.69: Emulatednetwork The emulated network iscomposed ofthree UMLmachines32: a client, a serverand arouter.
The clientandtheserverareconnectedviatherouter.Theclientsendsdatatotheserver.Thelinkbetween therouterandtheclientiscontrolledbyusingthenetemLinuxkernelmodule.
Thismoduleallows ustoinsertadditionaldelays,reducethelinkbandwidthandinsertrandompacketlosses.
31 Withanemulatednetwork,itismoredifﬁculttoobtainquantitativeresultsthanwitharealnetworksincealltheemulatedmachines needtosharethesameCPUandmemory.
Thiscreatesinteractionsbetweenthedifferentemulatedmachinesthatdonothappeninthereal world.
However,sincetheobjectiveofthisexerciseisonlytoallowthestudentstounderstandthebehaviouroftheTCPcongestioncontrol mechanism,thisisnotasevereproblem.
32 For more information about the TCP congestion control schemes implemented in the Linux kernel, see http://linuxgazette.net/135/pfeiffer.html and http://www.cs.helsinki.ﬁ/research/iwtcp/papers/linuxtcp.pdf or the source code of a recent Linux.
A description of some of the sysctl variables that allow to tune the TCP implementation in the Linux kernel may be found in http://fasterdata.es.net/TCP-tuning/linux.html.Forthisexercise,wehaveconﬁguredtheLinuxkerneltousetheNewRenoschemeRFC3782 thatisveryclosetotheofﬁcialstandarddeﬁnedinRFC5681 4.5.
Exercises 125 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Weusednetemtocollectseveraltraces: • exercises/traces/trace0.pcap • exercises/traces/trace1.pcap • exercises/traces/trace2.pcap • exercises/traces/trace3.pcap Usingwiresharkortcpdump,carryoutthefollowinganalyses: 1.
IdentifytheTCPoptionsthathavebeenusedontheTCPconnection 2.
Trytoﬁndexplanationsfortheevolutionoftheround-trip-timeoneachoftheseTCP connections.
For this, you can use the round-trip-time graph of wireshark, but be carefulwiththeirestimationassomeversionsofwiresharkarebuggy 3.
Verify whether the TCP implementation used implemented delayed acknowledge- ments 4.
Insideeachpackettrace,ﬁnd: 1. onesegmentthathasbeenretransmittedbyusingfastretransmit.Explainthisretrans- missionindetails.
2. onesegmentthathasbeenretransmittedthankstotheexpirationofTCP’sretransmis- siontimeout.
Explainwhy thissegmentcould nothavebeenretransmitted byusing fastretransmit.
5. wiresharkcontainsseveraltwousefulgraphs: theround-trip-timegraphandthetime sequencegraph.
Explainhowyouwouldcomputethesamegraphfromsuchatrace.
6.
WhendisplayingTCPsegments,recentversionsofwiresharkcontainexpertanalysis heuristics that indicate whether the segment has been retransmitted, whether it is a duplicate ack or whether the retransmission timeout has expired.
Explain how you wouldimplementthesameheuristicsaswireshark.
7.
Canyouﬁndwhichﬁlehasbeenexchangedduringthetransfer?
16.
Youhavebeenhiredasannetworkingexpertbyacompany.
Inthiscompany,usersofanetworkedappli- cationcomplainthatthenetworkisveryslow.
Thedevelopersoftheapplicationarguethatanydelaysare caused by packet losses and a buggy network.
The network administrator argues that the network works perfectlyandthatthedelaysperceivedbytheusersarecausedbytheapplicationsortheserverswherethe applicationisrunning.
Toresolvethecaseanddeterminewhethertheproblemisduetothenetworkorthe serveronwhichtheapplicationisrunning.
Thenetworkadministratorhascollectedarepresentativepacket trace that you can download from exercises/traces/trace9.pcap.
By looking at the trace, can youresolvethiscaseandindicatewhetherthenetworkortheapplicationistheculprit?
126 Chapter4.
Thetransportlayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor Foundation5 CHAPTER The network layer The transport layer enables the applications to efﬁciently and reliably exchange data.
Transport layer entities expecttobeabletosendsegmenttoanydestinationwithouthavingtounderstandanythingabouttheunderlying subnetworktechnologies.
Manysubnetworktechnologiesexist.
Mostofthemdifferinsubtledetails(framesize, addressing,...).
Thenetworklayeristhegluebetweenthesesubnetworksandthetransportlayer.
Ithidestothe transportlayerallthecomplexityoftheunderlyingsubnetworksandensuresthatinformationcanbeexchanged betweenhostsconnectedtodifferenttypesofsubnetworks.
In this chapter, we ﬁrst explain the principles of the network layer.
These principles include the datagram and virtual circuit modes, the separation between the data plane and the control plane and the algorithms used by routingprotocols.
Then,weexplain,inmoredetail,thenetworklayerintheInternet,startingwithIPv4andIPv6 andthenmovingtotheroutingprotocols(RIP,OSPFandBGP).
5.1 Principles The main objective of the network layer is to allow endsystems, connected to different networks, to exchange informationthroughintermediatesystemscalledrouter.
Theunitofinformationinthenetworklayeriscalleda packet.
Figure5.1: Thenetworklayerinthereferencemodel Beforeexplainingthenetworklayerindetail,itisusefultobeginbyanalysingtheserviceprovidedbythedatalink layer.
There are many variants of the datalink layer.
Some provide a connection-oriented service while others provide a connectionless service.
In this section, we focus on connectionless datalink layer services as they are themostwidelyused.
Usingaconnection-orienteddatalinklayercausessomeproblemsthatarebeyondthescope ofthischapter.
SeeRFC3819foradiscussiononthistopic.
Therearethreemaintypesofdatalinklayers.
Thesimplestdatalinklayeriswhenthereareonlytwocommuni- catingsystemsthataredirectlyconnectedthroughthephysicallayer.
Suchadatalinklayerisusedwhenthereisa point-to-pointlinkbetweenthetwocommunicatingsystems.
Thetwosystemscanbeendsystemsorrouters.
PPP (Point-to-Point Protocol), deﬁned in RFC 1661, is an example of such a point-to-point datalink layer.
Datalink layersexchangeframesandadatalinkframesentbyadatalinklayerentityontheleftistransmittedthroughthe physicallayer,sothatitcanreachthedatalinklayerentityontheright.
Point-to-pointdatalinklayerscaneither 127 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.2: Thepoint-to-pointdatalinklayer provideanunreliableservice(framescanbecorruptedorlost)orareliableservice(inthiscase,thedatalinklayer includes retransmission mechanisms similar to the ones used in the transport layer).
The unreliable service is frequentlyusedabovephysicallayers(e.g.
opticalﬁber,twistedpairs)havingalowbiterrorratiowhilereliability mechanismsareoftenusedinwirelessnetworkstorecoverlocallyfromtransmissionerrors.
ThesecondtypeofdatalinklayeristheoneusedinLocalAreaNetworks(LAN).Conceptually,aLANisasetof communicatingdevicessuchthatanytwodevicescandirectlyexchangeframesthroughthedatalinklayer.
Both endsystemsandrouterscanbeconnectedtoaLAN.SomeLANsonlyconnectafewdevices,butthereareLANs thatcanconnecthundredsoreventhousandsofdevices.
Figure5.3: Alocalareanetwork In the next chapter, we describe the organisation and the operation of Local Area Networks.
An important dif- ference between the point-to-point datalink layers and the datalink layers used in LANs is that in a LAN, each communicatingdeviceisidentiﬁedbyauniquedatalinklayeraddress.
Thisaddressisusuallyembeddedinthe hardwareofthedeviceanddifferenttypesofLANsusedifferenttypesofdatalinklayeraddresses.Acommunicat- ingdeviceattachedtoaLANcansendadatalinkframetoanyothercommunicatingdevicethatisattachedtothe sameLAN.MostLANsalsosupportspecialbroadcastandmulticastdatalinklayeraddresses.
Aframesenttothe broadcastaddressoftheLANisdeliveredtoallcommunicatingdevicesthatareattachedtotheLAN.Themul- ticastaddressesareusedtoidentifygroupsofcommunicatingdevices.
Whenaframeissenttowardsamulticast datalinklayeraddress,itisdeliveredbytheLANtoallcommunicatingdevicesthatbelongtothecorresponding group.
ThethirdtypeofdatalinklayersareusedinNon-BroadcastMulti-Access(NBMA)networks.
Thesenetworksare used to interconnect devices like a LAN.
All devices attached to an NBMA network are identiﬁed by a unique datalink layer address.
However, and this is the main difference between an NBMA network and a traditional LAN, the NBMA service only supports unicast.
The datalink layer service provided by an NBMA network supportsneitherbroadcastnormulticast.
Unfortunatelynodatalinklayerisabletosendframesofunlimitedside.
Eachdatalinklayerischaracterisedbya maximumframesize.
Therearemorethanadozendifferentdatalinklayersandunfortunatelymostofthemusea differentmaximumframesize.
Thenetworklayermustcopewiththeheterogeneityofthedatalinklayer.
Thenetworklayeritselfreliesonthefollowingprinciples: 1.
Each network layer entity is identiﬁed by a network layer address.
This address is independent of the datalinklayeraddressesthatitmayuse.
128 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 2.
Theserviceprovidedbythenetworklayerdoesnotdependontheserviceortheinternalorganisationofthe underlyingdatalinklayers.
3.
Thenetworklayerisconceptuallydividedintotwoplanes: thedataplaneandthecontrolplane.
Thedata planecontainstheprotocolsandmechanismsthatallowhostsandrouterstoexchangepacketscarryinguser data.
Thecontrolplanecontainstheprotocolsandmechanismsthatenablerouterstoefﬁcientlylearnhow toforwardpacketstowardstheirﬁnaldestination.
Theindependenceofthenetworklayerfromtheunderlyingdatalinklayerisakeyprincipleofthenetworklayer.It ensuresthatthenetworklayercanbeusedtoallowhostsattachedtodifferenttypesofdatalinklayerstoexchange packetsthroughintermediaterouters.
Furthermore,thisallowsthedatalinklayersandthenetworklayertoevolve independentlyfromeachother.
Thisenablesthenetworklayertobeeasilyadaptedtoanewdatalinklayerevery timeanewdatalinklayerisinvented.
Therearetwotypesofservicethatcanbeprovidedbythenetworklayer: • anunreliableconnectionlessservice • aconnection-oriented,reliableorunreliable,service Connection-oriented services have been popular with technologies such as X.25 and ATM or frame-relay, but nowadaysmostnetworksuseanunreliableconnectionlessservice.
Thisisourmainfocusinthischapter.
5.1.1 Organisation of the network layer Therearetwopossibleinternalorganisationsofthenetworklayer: • datagram • virtualcircuits The internal organisation of the network is orthogonal to the service that it provides, but most of the time a datagram organisation is used to provide a connectionless service while a virtual circuit organisation is used in networksthatprovideaconnection-orientedservice.
Datagramorganisation The ﬁrst and most popular organisation of the network layer is the datagram organisation.
This organisation is inspired by the organisation of the postal service.
Each host is identiﬁed by a network layer address.
To send informationtoaremotehost,ahostcreatesapacketthatcontains: • thenetworklayeraddressofthedestinationhost • itsownnetworklayeraddress • theinformationtobesent Thenetworklayerlimitsthemaximumpacketsize.
Thus,theinformationmusthavebeendividedinpacketsby thetransportlayerbeforebeingpassedtothenetworklayer.
Tounderstandthedatagramorganisation,letusconsidertheﬁgurebelow.
Anetworklayeraddress,represented byaletter,hasbeenassignedtoeachhostandrouter.
TosendsomeinformationtohostJ,hostAcreatesapacket containingitsownaddress,thedestinationaddressandtheinformationtobeexchanged.
With the datagram organisation, routers use hop-by-hop forwarding.
This means that when a router receives a packet that is not destined to itself, it looks up the destination address of the packet in its routing table.
A routingtableisadatastructurethatmapseachdestinationaddress(orsetofdestinationaddresses)totheoutgoing interfaceoverwhichapacketdestinedtothisaddressmustbeforwardedtoreachitsﬁnaldestination.
The main constraint imposed on the routing tables is that they must allow any host in the network to reach any other host.
This implies that each router must know a route towards each destination, but also that the paths composedfromtheinformationstoredintheroutingtablesmustnotcontainloops.
Otherwise,somedestinations wouldbeunreachable.
5.1.
Principles 129 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.4: Asimpleinternetwork Intheexampleabove,hostAsendsitspackettorouterR1.
R1consultsitsroutingtableandforwardsthepacket towards R2.
Based on its own routing table, R2 decides to forward the packet to R5 that can deliver it to its destination.
Toallowhoststoexchangepackets,anetworkreliesontwodifferenttypesofprotocolsandmechanisms.
First, there must be a precise deﬁnition of the format of the packets that are sent by hosts and processed by routers.
Second, the algorithm used by the routers to forward these packets must be deﬁned.
This protocol and this algorithmarepartofthedataplaneofthenetworklayer.
Thedataplanecontainsalltheprotocolsandalgorithms thatareusedbyhostsandrouterstocreateandprocessthepacketsthatcontainuserdata.
The data plane, and in particular the forwarding algorithm used by the routers, depends on the routing tables thataremaintainedonreachrouter.
Theseroutingtablescanbemaintainedbyusingvarioustechniques(manual conﬁguration,distributedprotocols,centralisedcomputation,etc).
Thesetechniquesarepartofthecontrolplane ofthenetworklayer.
Thecontrolplanecontainsalltheprotocolsandmechanismsthatareusedtocomputeand installroutingtablesontherouters.
Thedatagramorganisationhasbeenverypopularincomputernetworks.
Datagrambasednetworklayersinclude IPv4andIPv6intheglobalInternet,CLNPdeﬁnedbytheISO,IPXdeﬁnedbyNovellorXNSdeﬁnedbyXerox [Perlman2000].
Virtualcircuitorganisation Themainadvantageofthedatagramorganisationisitssimplicity.
Theprinciplesofthisorganisationcaneasily beunderstood.
Furthermore,itallowsahosttoeasilysendapackettowardsanydestinationatanytime.
However, as each packet is forwarded independently by intermediate routers, packets sent by a host may not follow the samepathtoreachagivendestination.
Thismaycausepacketreordering,whichmaybeannoyingfortransport protocols.
Furthermore,asarouterusinghop-by-hopforwardingalwaysforwardspacketssenttowardsthesame destinationoverthesameoutgoinginterface,thismaycausecongestionoversomelinks.
The second organisation of the network layer, called virtual circuits, has been inspired by the organisation of telephonenetworks.
Telephonenetworkshavebeendesignedtocarryphonecallsthatusuallylastafewminutes.
Eachphoneisidentiﬁedbyatelephonenumberandisattachedtoatelephoneswitch.
Toinitiateaphonecall,a telephoneﬁrstneedstosendthedestination’sphonenumbertoitslocalswitch.
Theswitchcooperateswiththe otherswitchesinthenetworktocreateabi-directionalchannelbetweenthetwotelephonesthroughthenetwork.
Thischannelwillbeusedbythetwotelephonesduringthelifetimeofthecallandwillbereleasedattheendof thecall.
Untilthe1960s,mostofthesechannelswerecreatedmanually,bytelephoneoperators,uponrequestof thecaller.
Today’stelephonenetworksuseautomatedswitchesandallowseveralchannelstobecarriedoverthe samephysicallink,buttheprinciplesremainroughlythesame.
130 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 In a network using virtual circuits, all hosts are identiﬁed with a network layer address.
However, a host must explicitly request the establishment of a virtual circuit before being able to send packets to a destination host.
Therequesttoestablishavirtualcircuitisprocessedbythecontrolplane,whichinstallsstatetocreatethevirtual circuit between the source and the destination through intermediate routers.
All the packets that are sent on the virtualcircuitcontainavirtualcircuitidentiﬁerthatallowstherouterstodeterminetowhichvirtualcircuiteach packetbelongs.ThisisillustratedintheﬁgurebelowwithonevirtualcircuitbetweenhostAandhostIandanother onebetweenhostAandhostJ.
Figure5.5: Asimpleinternetworkusingvirtual-circuits Theestablishmentofavirtualcircuitisperformedusingasignallingprotocolinthecontrolplane.
Usually, the sourcehostsendsasignallingmessagetoindicatetoitsroutertheaddressofthedestinationandpossiblysome performance characteristics of the virtual circuit to be established.
The ﬁrst router can process the signalling messageintwodifferentways.
Aﬁrstsolutionisfortheroutertoconsultitsroutingtable,rememberthecharacteristicsoftherequestedvirtual circuit and forward it over its outgoing interface towards the destination.
The signalling message is thus for- wardedhop-by-hopuntilitreachesthedestinationandthevirtualcircuitisopenedalongthepathfollowedbythe signallingmessage.
Thisisillustratedwiththeredvirtualcircuitintheﬁgurebelow.
Figure5.6: Virtualcircuitestablishment Asecondsolutioncanbeusediftheroutersknowtheentiretopologyofthenetwork.
Inthiscase,theﬁrstrouter canuseatechniquecalledsourcerouting.
Uponreceptionofthesignallingmessage,theﬁrstrouterchoosesthe pathofthevirtualcircuitinthenetwork.Thispathisencodedasthelistoftheaddressesofallintermediaterouters toreachthedestination.
Itisincludedinthesignallingmessageandintermediaterouterscanremovetheiraddress from the signalling message before forwarding it.
This technique enables routers to spread the virtual circuits throughoutthenetworkbetter.
Iftheroutersknowtheloadofremotelinks,theycanalsoselecttheleastloaded pathwhenestablishingavirtualcircuit.
Thissolutionisillustratedwiththebluecircuitintheﬁgureabove.
Thelastpointtobediscussedaboutthevirtualcircuitorganisationisitsdataplane.Thedataplanemainlydeﬁnes theformatofthedatapacketsandthealgorithmusedbyrouterstoforwardpackets.
Thedatapacketscontaina virtual circuit identiﬁer, encoded as a ﬁxed number of bits.
These virtual circuit identiﬁers are usually called labels.
5.1.
Principles 131 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Each host maintains a ﬂow table that associates a label with each virtual circuit that is has established.
When a routerreceivesapacketcontainingalabel,itextractsthelabelandconsultsitslabelforwardingtable.
Thistable isadatastructurethatmapseachcouple(incominginterface,label)totheoutgoinginterfacetobeusedtoforward thepacketaswellasthelabelthatmustbeplacedintheoutgoingpackets.
Inpractice,thelabelforwardingtable canbeimplementedasavectorandthecouple(incominginterface,label)istheindexoftheentryinthevector thatcontainstheoutgoinginterfaceandtheoutgoinglabel.
Thusasinglememoryaccessissufﬁcienttoconsult thelabelforwardingtable.
Theutilisationofthelabelforwardingtableisillustratedintheﬁgurebelow.
Figure5.7: Labelforwardingtablesinanetworkusingvirtualcircuits Thevirtualcircuitorganisationhasbeenmainlyusedinpublicnetworks,startingfromX.25andthenFrameRelay andAsynchronousTransferMode(ATM)network.
Both the datagram and virtual circuit organisations have advantages and drawbacks.
The main advantage of the datagram organisation is that hosts can easily send packets to any number of destinations while the virtual circuit organisation requires the establishment of a virtual circuit before the transmission of a data packet.
This solution can be costly for hosts that exchange small amounts of data.
On the other hand, the main advantage of the virtual circuit organisation is that the forwarding algorithm used by routers is simpler than when using thedatagramorganisation.
Furthermore, theutilisationofvirtualcircuitsmayallowtheloadtobebetterspread through the network thanks to the utilisation of multiple virtual circuits.
The MultiProtocol Label Switching (MPLS)techniquethatwewilldiscussinanotherrevisionofthisbookcanbeconsideredasagoodcompromise betweendatagramandvirtualcircuits.
MPLSusesvirtualcircuitsbetweenrouters, butdoesnotextendthemto theendhosts.
AdditionalinformationaboutMPLSmaybefoundin[ML2011].
5.1.2 The control plane Oneoftheobjectivesofthecontrolplaneinthenetworklayeristomaintaintheroutingtablesthatareusedonall routers.
Asindicatedearlier,aroutingtableisadatastructurethatcontains,foreachdestinationaddress(orblock ofaddresses)knownbytherouter,theoutgoinginterfaceoverwhichtheroutermustforwardapacketdestinedto thisaddress.
Theroutingtablemayalsocontainadditionalinformationsuchastheaddressofthenextrouteron thepathtowardsthedestinationoranestimationofthecostofthispath.
Inthissection,wediscussthethreemaintechniquesthatcanbeusedtomaintaintheroutingtablesinanetwork.
Staticrouting The simplest solution is to pre-compute all the routing tables of all routers and to install them on each router.
Severalalgorithmscanbeusedtocomputethesetables.
132 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 A simple solution is to use shortest path routing and to minimise the number of intermediate routers to reach each destination.
More complex algorithms can take into account the expected load on the links to ensure that congestiondoesnotoccurforagiventrafﬁcdemand.
Thesealgorithmsmustallensurethat: • allroutersareconﬁguredwitharoutetoreacheachdestination • noneofthepathscomposedwiththeentriesfoundintheroutingtablescontainacycle.
Suchacyclewould leadtoaforwardingloop.
Theﬁgurebelowshowssampleroutingtablesinaﬁveroutersnetwork.
Figure5.8: Routingtablesinasimplenetwork Themaindrawbackofstaticroutingisthatitdoesnotadapttotheevolutionofthenetwork.
Whenanewrouter orlinkisadded,allroutingtablesmustberecomputed.
Furthermore,whenalinkorrouterfails,theroutingtables mustbeupdatedaswell.
Distancevectorrouting Distance vector routing is a simple distributed routing protocol.
Distance vector routing allows routers to auto- maticallydiscoverthedestinationsreachableinsidethenetworkaswellastheshortestpathtoreacheachofthese destinations.
The shortest path is computed based on metrics or costs that are associated to each link.
We use l.costtorepresentthemetricthathasbeenconﬁguredforlinklonarouter.
Eachroutermaintainsaroutingtable.
TheroutingtableRcanbemodelledasadatastructurethatstores,foreach knowndestinationaddressd,thefollowingattributes: • R[d].linkistheoutgoinglinkthattherouterusestoforwardpacketstowardsdestinationd • R[d].costisthesumofthemetricsofthelinksthatcomposetheshortestpathtoreachdestinationd • R[d].timeisthetimestampofthelastdistancevectorcontainingdestinationd Arouterthatusesdistancevectorroutingregularlysendsitsdistancevectoroverallitsinterfaces.
Thedistance vectorisasummaryoftherouter’sroutingtablethatindicatesthedistancetowardseachknowndestination.
This distancevectorcanbecomputedfromtheroutingtablebyusingthepseudo-codebelow.
Every N seconds: v=Vector() for d in R[]: # add destination d to vector v.add(Pair(d,R[d].cost)) for i in interfaces # send vector v on this interface send(v,interface) Whenarouterboots,itdoesnotknowanydestinationinthenetworkanditsroutingtableonlycontainsitself.
It thussendstoallitsneighboursadistancevectorthatcontainsonlyitsaddressatadistanceof0.
Whenarouter receivesadistancevectoronlinkl,itprocessesitasfollows.
# V : received Vector # l : link over which vector is received def received(V,l): # received vector from link l for d in V[] 5.1.
Principles 133 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 if not (d in R[]) : # new route R[d].cost=V[d].cost+l.cost R[d].link=l R[d].time=now else : # existing route, is the new better ?
if ( ((V[d].cost+l.cost) < R[d].cost) or ( R[d].link == l) ) : # Better route or change to current route R[d].cost=V[d].cost+l.cost R[d].link=l R[d].time=now The router iterates over all addresses included in the distance vector.
If the distance vector contains an address thattherouterdoesnotknow,itinsertsthedestinationinsideitsroutingtablevialinklandatadistancewhichis thesumbetweenthedistanceindicatedinthedistancevectorandthecostassociatedtolinkl.
Ifthedestination wasalreadyknownbytherouter,itonlyupdatesthecorrespondingentryinitsroutingtableifeither: • thecostofthenewrouteissmallerthanthecostofthealreadyknownroute((V[d].cost+l.cost)<R[d].cost) • thenewroutewaslearnedoverthesamelinkasthecurrentbestroutetowardsthisdestination(R[d].link ==l) Theﬁrstconditionensuresthattherouterdiscoverstheshortestpathtowardseachdestination.
Thesecondcondi- tionisusedtotakeintoaccountthechangesofroutesthatmayoccurafteralinkfailureorachangeofthemetric associatedtoalink.
Tounderstandtheoperationofadistancevectorprotocol,letusconsiderthenetworkofﬁveroutersshownbelow.
Figure5.9: Operationofdistancevectorroutinginasimplenetwork AssumethatAistheﬁrsttosenditsdistancevector[A=0].
• BandDprocessthereceiveddistancevectorandupdatetheirroutingtablewitharoutetowardsA.
• Dsendsitsdistancevector[D=0,A=1]toAandE.EcannowreachAandD.
• Csendsitsdistancevector[C=0]toBandE • Esendsitsdistancevector[E=0,D=1,A=2,C=2]toD,BandC.BcannowreachA,C,DandE • B sends its distance vector [B=0,A=1,C=1,D=2,E=1] to A, C and E. A, B, C and E can now reach all destinations.
• Asendsitsdistancevector[A=0,B=1,C=2,D=1,E=2]toBandD.
Atthispoint,allrouterscanreachallotherroutersinthenetworkthankstotheroutingtablesshownintheﬁgure below.
Todealwithlinkandrouterfailures, routersusethetimestampstoredintheirroutingtable.
Asallrouterssend theirdistancevectoreveryN seconds,thetimestampofeachrouteshouldberegularlyrefreshed.
Thusnoroute should have a timestamp older than N seconds, unless the route is not reachable anymore.
In practice, to cope with the possible loss of a distance vector due to transmission errors, routers check the timestamp of the routes storedintheirroutingtableeveryN secondsandremovetheroutesthatareolderthan3×N seconds.
Whena routernoticesthataroutetowardsadestinationhasexpired,itmustﬁrstassociatean∞costtothisrouteandsend 134 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.10: Routingtablescomputedbydistancevectorinasimplenetwork itsdistancevectortoitsneighbourstoinformthem.
Theroutecanthenberemovedfromtheroutingtableafter sometime(e.g.
3×N seconds),toensurethattheneighbouringroutershavereceivedthebadnews,evenifsome distancevectorsdonotreachthemduetotransmissionerrors.
ConsidertheexampleaboveandassumethatthelinkbetweenroutersAandBfails.
Beforethefailure,AusedB toreachdestinationsB,CandEwhileBonlyusedtheA-BlinktoreachA.Theaffectedentriestimeoutonrouters AandBandtheybothsendtheirdistancevector.
• A sends its distance vector [A = 0,D = ∞,C = ∞,D = 1,E = ∞].
D knows that it cannot reach B anymoreviaA • Dsendsitsdistancevector[D = 0,B = ∞,A = 1,C = 2,E = 1]toAandE.Arecoversroutestowards CandEviaD.
• Bsendsitsdistancevector[B = 0,A = ∞,C = 1,D = 2,E = 1]toE andC.Dlearnsthatthereisno routeanymoretoreachAviaB.
• Esendsitsdistancevector[E = 0,A = 2,C = 1,D = 1,B = 1]toD,BandC.Dlearnsaroutetowards B.CandBlearnaroutetowardsA.
At this point, all routers have a routing table allowing them to reach all another routers, except router A, which cannot yet reach router B.
A recovers the route towards B once router D sends its updated distance vector[A = 1,B =2,C =2,D =1,E =1].
ThislaststepisillustratedinﬁgureRoutingtablescomputedbydistancevector afterafailure,whichshowstheroutingtablesonallrouters.
Figure5.11: Routingtablescomputedbydistancevectorafterafailure ConsidernowthatthelinkbetweenDandEfails.
Thenetworkisnowpartitionedintotwodisjointparts: (A,D) and(B,E,C).TheroutestowardsB,C andE expireﬁrstonrouterD.Atthistime, routerDupdatesitsrouting table.
IfDsends[D = 0,A = 1,B = ∞,C = ∞,E = ∞],AlearnsthatB,C andE areunreachableandupdatesits routingtable.
Unfortunately,ifthedistancevectorsenttoAislostorifAsendsitsowndistancevector([A = 0,D = 1,B = 3,C = 3,E = 2] ) at the same time as D sends its distance vector, D updates its routing table to use the 5.1.
Principles 135 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 shorter routes advertised by A towards B, C and E. After some time D sends a new distance vector : [D = 0,A = 1,E = 3,C = 4,B = 4].
Aupdatesitsroutingtableandaftersometimesendsitsowndistancevector [A=0,D =1,B =5,C =5,E =4],etc.
Thisproblemisknownasthecounttoinﬁnityprobleminnetworking literature.
Routers A and D exchange distance vectors with increasing costs until these costs reach ∞.
This problemmayoccurinotherscenariosthantheonedepictedintheaboveﬁgure.
Infact, distancevectorrouting may suffer from count to inﬁnity problems as soon as there is a cycle in the network.
Cycles are necessary to haveenoughredundancytodealwithlinkandrouterfailures.
Tomitigatetheimpactofcountingtoinﬁnity,some distancevectorprotocolsconsiderthat16=∞.
Unfortunately,thislimitsthemetricsthatnetworkoperatorscan useandthediameterofthenetworksusingdistancevectors.
ThiscounttoinﬁnityproblemoccursbecauserouterAadvertisestorouterDaroutethatithaslearnedviarouter D.Apossiblesolutiontoavoidthisproblemcouldbetochangehowaroutercreatesitsdistancevector.
Instead ofcomputingonedistancevectorandsendingittoallitsneighbors,aroutercouldcreateadistancevectorthatis speciﬁctoeachneighbourandonlycontainstheroutesthathavenotbeenlearnedviathisneighbour.
Thiscould beimplementedbythefollowingpseudocode.
Every N seconds: # one vector for each interface for l in interfaces: v=Vector() for d in R[]: if (R[d].link != i) : v=v+Pair(d,R[d.cost]) send(v) # end for d in R[] #end for l in interfaces Thistechniqueiscalledsplit-horizon.
Withthistechnique,thecounttoinﬁnityproblemwouldnothavehappened in the above scenario, as router A would have advertised [A = 0], since it learned all its other routes via router D.Anothervariantcalledsplit-horizonwithpoisonreverseisalsopossible.
Routersusingthisvariantadvertisea costof∞forthedestinationsthattheyreachviatheroutertowhichtheysendthedistancevector.
Thiscanbe implementedbyusingthepseudo-codebelow.
Every N seconds: for l in interfaces: # one vector for each interface v=Vector() for d in R[]: if (R[d].link != i) : v=v+Pair(d,R[d.cost]) else: v=v+Pair(d,infinity); send(v) # end for d in R[] #end for l in interfaces Unfortunately,split-horizon,isnotsufﬁcienttoavoidallcounttoinﬁnityproblemswithdistancevectorrouting.
ConsiderthefailureoflinkA-Binthenetworkoffourroutersbelow.
Figure5.12: Counttoinﬁnityproblem 136 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Afterhavingdetectedthefailure,routerAsendsitsdistancevectors: • [A=∞,B =0,C =∞,E =1]torouterC • [A=∞,B =0,C =1,E =∞]torouterE If, unfortunately, the distance vector sent to router C is lost due to a transmission error or because router C is overloaded,anewcounttoinﬁnityproblemcanoccur.
IfrouterCsendsitsdistancevector[A = 2,B = 1,C = 0,E =∞]torouterE,thisrouterinstallsarouteofdistance3toreachAviaC.RouterEsendsitsdistancevectors [A = 3,B = ∞,C = 1,E = 1] to router B and [A = ∞,B = 1,C = ∞,E = 0] to router C. This distance vectorallowsBtorecoverarouteofdistance4toreachA.
Linkstaterouting Link state routing is the second family of routing protocols.
While distance vector routers use a distributed algorithmtocomputetheirroutingtables,link-stateroutersexchangemessagestoalloweachroutertolearnthe entirenetworktopology.
Basedonthislearnedtopology,eachrouteristhenabletocomputeitsroutingtableby usingashortestpathcomputation[Dijkstra1959].
Forlink-staterouting, anetworkismodelledasadirectedweightedgraph.
Eachrouterisanode, andthelinks betweenroutersaretheedgesinthegraph.
Apositiveweightisassociatedtoeachdirectededgeandroutersuse theshortestpathtoreacheachdestination.
Inpractice,differenttypesofweightcanbeassociatedtoeachdirected edge: • unitweight.
Ifalllinkshaveaunitweight,shortestpathroutingprefersthepathswiththeleastnumberof intermediaterouters.
• weightproportionaltothepropagationdelayonthelink.
Ifalllinkweightsareconﬁguredthisway,shortest pathroutingusesthepathswiththesmallestpropagationdelay.
• weight= C whereCisaconstantlargerthanthehighestlinkbandwidthinthenetwork.
Ifalllink bandwidth weightsareconﬁguredthisway,shortestpathroutingprefershigherbandwidthpathsoverlowerbandwidth paths Usually,thesameweightisassociatedtothetwodirectededgesthatcorrespondtoaphysicallink(i.e.
R1→R2 and R2 → R1).
However, nothing in the link state protocols requires this.
For example, if the weight is set in functionofthelinkbandwidth,thenanasymmetricADSLlinkcouldhaveadifferentweightfortheupstreamand downstreamdirections.
Othervariantsarepossible.
Somenetworksuseoptimisationalgorithmstoﬁndthebest setofweightstominimizecongestioninsidethenetworkforagiventrafﬁcdemand[FRT2002].
When a link-state router boots, it ﬁrst needs to discover to which routers it is directly connected.
For this, each router sends a HELLO message every N seconds on all of its interfaces.
This message contains the router’s address.
Each router has a unique address.
As its neighbouring routers also send HELLO messages, the router automaticallydiscoverstowhichneighboursitisconnected.
TheseHELLOmessagesareonlysenttoneighbours whoaredirectlyconnectedtoarouter,andarouterneverforwardstheHELLOmessagesthattheyreceive.HELLO messagesarealsousedtodetectlinkandrouterfailures.
AlinkisconsideredtohavefailedifnoHELLOmessage hasbeenreceivedfromtheneighbouringrouterforaperiodofk×N seconds.
Figure5.13: TheexchangeofHELLOmessages 5.1.
Principles 137 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Oncearouterhasdiscovereditsneighbours,itmustreliablydistributeitslocallinkstoallroutersinthenetwork toallowthemtocomputetheirlocalviewofthenetworktopology.
Forthis,eachrouterbuildsalink-statepacket (LSP)containingthefollowinginformation: • LSP.Router: identiﬁcation(address)ofthesenderoftheLSP • LSP.age: ageorremaininglifetimeoftheLSP • LSP.seq: sequencenumberoftheLSP • LSP.Links[]: linksadvertisedintheLSP.Eachdirectedlinkisrepresentedwiththefollowinginformation : -LSP.Links[i].Id: identiﬁcationoftheneighbour-LSP.Links[i].cost: costofthelink These LSPs must be reliably distributed inside the network without using the router’s routing table since these tables can only be computed once the LSPs have been received.
The Flooding algorithm is used to efﬁciently distributetheLSPsofallrouters.
Eachrouterthatimplementsﬂoodingmaintainsalinkstatedatabase(LSDB) containingthemostrecentLSPsentbyeachrouter.
WhenarouterreceivesanLSP,itﬁrstveriﬁeswhetherthis LSPisalreadystoredinsideitsLSDB.Ifso,therouterhasalreadydistributedtheLSPearlieranditdoesnotneed toforwardit.Otherwise,therouterforwardstheLSPonalllinksexceptthelinkoverwhichtheLSPwasreceived.
Reliableﬂoodingcanbeimplementedbyusingthefollowingpseudo-code.
# links is the set of all links on the router # Router R’s LSP arrival on link l if newer(LSP, LSDB(LSP.Router)) : LSDB.add(LSP) for i in links : if i!=l : send(LSP,i) else: # LSP has already been flooded In this pseudo-code, LSDB(r) returns the most recent LSP originating from router r that is stored in the LSDB.
newer(lsp1,lsp2)returnstrueiflsp1ismorerecentthanlsp2.
Seethenotebelowforadiscussiononhownewer canbeimplemented.
Note: WhichisthemostrecentLSP?
A router that implements ﬂooding must be able to detect whether a received LSP is newer than the stored LSP.
This requires a comparison between the sequence number of the received LSP and the sequence number of the LSPstoredinthelinkstatedatabase.
TheARPANETroutingprotocol[MRR1979]useda6bitssequencenumber andimplementedthecomparisonasfollowsRFC789 def newer( lsp1, lsp2 ): return ( ( ( lsp1.seq > lsp2.seq) and ( (lsp1.seq-lsp2.seq)<=32) ) or ( ( lsp1.seq < lsp2.seq) and ( (lsp2.seq-lsp1.seq)> 32) ) ) Thiscomparisontakesintoaccountthemodulo26arithmeticusedtoincrementthesequencenumbers.Intuitively, thecomparisondividesthecircleofallsequencenumbersintotwohalves.
Usually,thesequencenumberofthe receivedLSPisequaltothesequencenumberofthestoredLSPincrementedbyone,butsometimesthesequence numbersoftwosuccessiveLSPsmaydiffer,e.g.
ifonerouterhasbeendisconnectedfromthenetworkforsome time.ThecomparisonaboveworkedwelluntilOctober27,1980.Onthisday,theARPANETcrashedcompletely.
Thecrashwascomplexandinvolvedseveralrouters.
Atonepoint, LSP40andLSP44fromoneoftherouters werestoredintheLSDBofsomeroutersintheARPANET.AsLSP44wasthenewest, itshouldhavereplaced by LSP 40 on all routers.
Unfortunately, one of the ARPANET routers suffered from a memory problem and sequence number 40 (101000 in binary) was replaced by 8 (001000 in binary) in the buggy router and ﬂooded.
ThreeLSPswerepresentinthenetworkand44wasnewerthan40whichisnewerthan8,butunfortunately8was considered to be newer than 44... All routers started to exchange these three link state packets for ever and the onlysolutiontorecoverfromthisproblemwastoshutdowntheentirenetworkRFC789.
Currentlinkstateroutingprotocolsusuallyuse32bitssequencenumbersandincludeaspecialmechanisminthe unlikelycasethatasequencenumberreachesthemaximumvalue(usinga32bitssequencenumberspacetakes 136yearsifalinkstatepacketisgeneratedeverysecond).
138 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Todealwiththememorycorruptionproblem,linkstatepacketscontainachecksum.
Thischecksumiscomputed by the router that generates the LSP.
Each router must verify the checksum when it receives or ﬂoods an LSP.
Furthermore,eachroutermustperiodicallyverifythechecksumsoftheLSPsstoredinitsLSDB.
Floodingisillustratedintheﬁgurebelow.
ByexchangingHELLOmessages,eachrouterlearnsitsdirectneigh- bours.
Forexample,routerElearnsthatitisdirectlyconnectedtoroutersD,BandC.ItsﬁrstLSPhassequence number0andcontainsthedirectedlinksE->D,E->BandE->C.RouterEsendsitsLSPonallitslinksandrouters D,BandCinserttheLSPintheirLSDBandforwarditovertheirotherlinks.
Figure5.14: Flooding: example FloodingallowsLSPstobedistributedtoallroutersinsidethenetworkwithoutrelyingonroutingtables.
Inthe example above, the LSP sent by router E is likely to be sent twice on some links in the network.
For example, routersBandC receiveE‘sLSPatalmostthesametimeandforwarditovertheB-C link.
Toavoidsendingthe sameLSPtwiceoneachlink,apossiblesolutionistoslightlychangethepseudo-codeabovesothatarouterwaits forsomerandomtimebeforeforwardingaLSPoneachlink.
Thedrawbackofthissolutionisthatthedelayto ﬂoodanLSPtoallroutersinthenetworkincreases.
Inpractice,routersimmediatelyﬂoodtheLSPsthatcontain newinformation(e.g.
additionorremovalofalink)anddelaytheﬂoodingofrefreshLSPs(i.e.
LSPsthatcontain exactlythesameinformationasthepreviousLSPoriginatingfromthisrouter)[FFEB2005].
ToensurethatallroutersreceiveallLSPs,evenwhentherearetransmissionserrors,linkstateroutingprotocols use reliable ﬂooding.
With reliable ﬂooding, routers use acknowledgements and if necessary retransmissions to ensure that all link state packets are successfully transferred to all neighbouring routers.
Thanks to reliable ﬂooding, allroutersstoreintheirLSDBthemostrecentLSPsentbyeachrouterinthenetwork.
Bycombining thereceivedLSPswithitsownLSP,eachroutercancomputetheentirenetworktopology.
Figure5.15: Linkstatedatabasesreceivedbyallrouters 5.1.
Principles 139 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Note: Staticordynamiclinkmetrics?
As link state packets are ﬂooded regularly, routers are able to measure the quality (e.g.
delay or load) of their linksandadjustthemetricofeachlinkaccordingtoitscurrentquality.
Suchdynamicadjustmentswereincluded in the ARPANET routing protocol [MRR1979] .
However, experience showed that it was difﬁcult to tune the dynamic adjustments and ensure that no forwarding loops occur in the network [KZ1989].
Today’s link state routing protocols use metrics that are manually conﬁgured on the routers and are only changed by the network operatorsornetworkmanagementtools[FRT2002].
Whenalinkfails,thetworoutersattachedtothelinkdetectthefailurebythelackofHELLOmessagesreceived inthelastk×N seconds.
Oncearouterhasdetectedalocallinkfailure,itgeneratesandﬂoodsanewLSPthat nolongercontainsthefailedlinkandthenewLSPreplacesthepreviousLSPinthenetwork.
Asthetworouters attached to a link do not detect this failure exactly at the same time, some links may be announced in only one direction.
Thisisillustratedintheﬁgurebelow.
RouterEhasdetectedthefailuresoflinkE-Bandﬂoodedanew LSP,butrouterBhasnotyetdetectedthefailure.
Figure5.16: Thetwo-wayconnectivitycheck WhenalinkisreportedintheLSPofonlyoneoftheattachedrouters,routersconsiderthelinkashavingfailedand theyremoveitfromthedirectedgraphthattheycomputefromtheirLSDB.Thisiscalledthetwo-wayconnectivity check.
This check allows link failures to be ﬂooded quickly as a single LSP is sufﬁcient to announce such bad news.However,whenalinkcomesup,itcanonlybeusedoncethetwoattachedroutershavesenttheirLSPs.The two-way connectivity check also allows for dealing with router failures.
When a router fails, all its links fail by deﬁnition.Unfortunately,itdoesnot,ofcourse,sendanewLSPtoannounceitsfailure.
Thetwo-wayconnectivity checkensuresthatthefailedrouterisremovedfromthegraph.
Whenarouterhasfailed,itsLSPmustberemovedfromtheLSDBofallrouters1.
Thiscanbedonebyusingthe ageﬁeldthatisincludedineachLSP.Theageﬁeldisusedtoboundthemaximumlifetimeofalinkstatepacket inthenetwork.
WhenaroutergeneratesaLSP,itsetsitslifetime(usuallymeasuredinseconds)intheageﬁeld.
AllroutersregularlydecrementtheageoftheLSPsintheirLSDBandaLSPisdiscardedonceitsagereaches0.
Thankstotheageﬁeld,theLSPfromafailedrouterdoesnotremainintheLSDBsforever.
Tocomputeitsroutingtable, eachroutercomputesthespanningtreerootedatitselfbyusingDijkstra’sshortest pathalgorithm[Dijkstra1959].
Theroutingtablecanbederivedautomaticallyfromthespanningasshowninthe ﬁgurebelow.
5.2 Internet Protocol TheInternetProtocol(IP)isthenetworklayerprotocoloftheTCP/IPprotocolsuite.
IPallowstheapplications running above the transport layer (UDP/TCP) to use a wide range of heterogeneous datalink layers.
IP was 1 ItshouldbenotedthatlinkstateroutingassumesthatallroutersinthenetworkhaveenoughmemorytostoretheentireLSDB.The routersthatdonothaveenoughmemorytostoretheentireLSDBcannotparticipateinlinkstaterouting.
Somelinkstateroutingprotocols allowrouterstoreportthattheydonothaveenoughmemoryandmustberemovedfromthegraphbytheotherroutersinthenetwork.
140 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.17: Computationoftheroutingtable designedwhenmostpoint-to-pointlinksweretelephonelineswithmodems.
Sincethen,IPhasbeenabletouse LocalAreaNetworks(Ethernet,TokenRing,FDDI,...),newwideareadatalinklayertechnologies(X.25,ATM, FrameRelay,...) andmorerecentlywirelessnetworks(802.11,802.15,UMTS,GPRS,...).
TheﬂexibilityofIP anditsabilitytousevarioustypesofunderlyingdatalinklayertechnologiesisoneofitskeyadvantages.
Figure5.18: IPandthereferencemodel The current version of IP is version 4 speciﬁed in RFC 791.
We ﬁrst describe this version and later explain IP version6,whichisexpectedtoreplaceIPversion4inthenotsodistantfuture.
5.2.1 IP version 4 IPversion4isthedataplaneprotocolofthenetworklayerintheTCP/IPprotocolsuite.
ThedesignofIPversion 4wasbasedonthefollowingassumptions: • IPshouldprovideanunreliableconnectionlessservice(TCPprovidesreliabilitywhenrequiredbytheap- plication) • IPoperateswiththedatagramtransmissionmode • IPaddresseshaveaﬁxedsizeof32bits • IPmustbeusableabovedifferenttypesofdatalinklayers • IPhostsexchangevariablelengthpackets The addresses are an important part of any network layer protocol.
In the late 1970s, the developers of IPv4 designedIPv4foraresearchnetworkthatwouldinterconnectsomeresearchlabsanduniversities.
Forthisutilisa- tion,32bitswideaddressesweremuchlargerthantheexpectednumberofhostsonthenetwork.
Furthermore,32 bitswasaniceaddresssizeforsoftware-basedrouters.
NoneofthedevelopersofIPv4wereexpectingthatIPv4 wouldbecomeaswidelyusedasitistoday.
IPv4addressesareencodedasa32bitsﬁeld.
IPv4addressesareoftenrepresentedindotted-decimalformatasa sequenceoffourintegersseparatedbyadot.
Theﬁrstintegeristhedecimalrepresentationofthemostsigniﬁcant byteofthe32bitsIPv4address,... Forexample, • 1.2.3.4correspondsto00000001000000100000001100000100 5.2.
InternetProtocol 141 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • 127.0.0.1correspondsto01111111000000000000000000000001 • 255.255.255.255correspondsto11111111111111111111111111111111 AnIPv4addressisusedtoidentifyaninterfaceonarouterorahost.
ArouterhasthusasmanyIPv4addressesas thenumberofinterfacesthatithasinthedatalinklayer.
Mosthostshaveasingledatalinklayerinterfaceandthus haveasingleIPv4address.However,withthegrowthofwireless,moreandmorehostshaveseveraldatalinklayer interfaces(e.g.
anEthernetinterfaceandaWiFiinterface).
Thesehostsaresaidtobemultihomed.
Amultihomed hostwithtwointerfaceshasthustwoIPv4addresses.
Animportantpointtobedeﬁnedinanetworklayerprotocolistheallocationofthenetworklayeraddresses.
A naiveallocationschemewouldbetoprovideanIPv4addresstoeachhostwhenthehostisattachedtotheInternet onaﬁrstcomeﬁrstservedbasis.
Withthissolution,ahostinBelgiumcouldhaveaddress2.3.4.5whileanother hostlocatedinAfricawoulduseaddress2.3.4.6.
Unfortunately,thiswouldforceallrouterstomaintainaspeciﬁc routetowardseachhost.
Theﬁgurebelowshowsasimpleenterprisenetworkwithtworoutersandthreehostsand theassociatedroutingtablesifsuchisolatedaddresseswereused.
Figure5.19: ScalabilityissueswhenusingisolatedIPaddresses Topreservethescalabilityoftheroutingsystem,itisimportanttominimizethenumberofroutesthatarestoredon eachrouter.
Aroutercannotstoreandmaintainonerouteforeachofthealmost1billionhoststhatareconnected totoday’sInternet.
Routersshouldonlymaintainroutestowardsblocksofaddressesandnottowardsindividual hosts.
For this, hosts are grouped in subnets based on their location in the network.
A typical subnet groups all the hosts that are part of the same enterprise.
An enterprise network is usually composed of several LANs interconnected by routers.
A small block of addresses from the Enterprise’s block is usually assigned to each LAN.AnIPv4addressiscomposedoftwoparts: asubnetworkidentiﬁer andahostidentiﬁer.
Thesubnetwork identiﬁeriscomposedofthehighorderbitsoftheaddressandthehostidentiﬁerisencodedintheloworderbits oftheaddress.
Thisisillustratedintheﬁgurebelow.
Figure5.20: ThesubnetworkandhostidentiﬁersinsideanIPv4address Whenarouterneedstoforwardapacket,itmustknowthesubnetofthedestinationaddresstobeabletoconsult itsforwardingtabletoforwardthepacket.
RFC791proposedtousethehigh-orderbitsoftheaddresstoencode thelengthofthesubnetidentiﬁer.
Thisledtothedeﬁnitionofthreeclassesofunicastaddresses2 2InadditiontotheA,BandCclasses,RFC791alsodeﬁnedtheDandEclassesofIPv4addresses.ClassD(resp.E)addressesarethose whosehighorderbitsaresetto1110(resp.1111).ClassDaddressesareusedbyIPmulticastandwillbeexplainedlater.ClassEaddresses arecurrentlyunused,buttherearesomediscussionsonpossiblefutureusages[WMH2008][FLM2008] 142 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Class High-orderbits Lengthofsubnetid Numberofnetworks Addressespernetwork ClassA 0 8bits 128 16,777,216(224) ClassB 10 16bits 16,384 65,536(216) ClassC 110 24bits 2,097,152 256(28) However, these three classes of addresses were not ﬂexible enough.
A class A subnet was too large for most organisations and a class C subnet was too small.
Flexibility was added by the introduction of variable-length subnets in RFC 1519.
With variable-length subnets, the subnet identiﬁer can be any size, from 1 to 31 bits.
Variable-lengthsubnetsallowthenetworkoperatorstouseasubnetthatbettermatchesthenumberofhoststhat areplacedinsidethesubnet.AsubnetidentiﬁerorIPv4preﬁxisusually3representedasA.B.C.D/pwhereA.B.C.D isthenetworkaddressobtainedbyconcatenatingthesubnetidentiﬁerwithahostidentiﬁercontainingonly0and pisthelengthofthesubnetidentiﬁerinbits.
ThetablebelowprovidesexamplesofIPsubnets.
Subnet Numberofaddresses Smallestaddress Highestaddress 10.0.0.0/8 16,777,216 10.0.0.0 10.255.255.255 192.168.0.0/16 65,536 192.168.0.0 192.168.255.255 198.18.0.0/15 131,072 198.18.0.0 198.19.255.255 192.0.2.0/24 256 192.0.2.0 192.0.2.255 10.0.0.0/30 4 10.0.0.0 10.0.0.3 10.0.0.0/31 2 10.0.0.0 10.0.0.1 TheﬁgurebelowprovidesasimpleexampleoftheutilisationofIPv4subnetsinanenterprisenetwork.Thelength ofthesubnetidentiﬁerassignedtoaLANusuallydependsontheexpectednumberofhostsattachedtotheLAN.
Forpoint-to-pointlinks,manydeploymentshaveused/30preﬁxes,butrecentroutersarenowusing/31subnets onpoint-to-pointlinksRFC3021ordonotevenuseIPv4addressesonsuchlinks4.
Figure5.21: IPsubnetsinasimpleenterprisenetwork A second issue concerning the addresses of the network layer is the allocation scheme that is used to allocate blocksofaddressestoorganisations.
Theﬁrstallocationschemewasbasedonthedifferentclassesofaddresses.
ThepoolofIPv4addresseswasmanagedbyasecretariatwhoallocatedaddressblocksonaﬁrst-comeﬁrstserved basis.LargeorganisationssuchasIBM,BBN,aswellasStanfordortheMITwereabletoobtainaclassAaddress block.
MostorganisationsrequestedaclassBaddressblockcontaining65536addresses,whichwassuitablefor mostenterprisesanduniversities.
ThetablebelowprovidesexamplesofsomeIPv4addressblocksintheclassB space.
3AnotherwayofrepresentingIPsubnetsistousenetmasks.Anetmaskisa32bitsﬁeldwhosephighorderbitsaresetto1andthelow orderbitsaresetto0.
Thenumberofhighorderbitsset1indicatesthelengthofthesubnetidentiﬁer.
Netmasksareusuallyrepresentedin thesamedotteddecimalformatasIPv4addresses.
Forexample10.0.0.0/8wouldberepresentedas10.0.0.0255.0.0.0while192.168.1.0/24 wouldberepresentedas192.168.1.0255.255.255.0.Insomecases,thenetmaskcanberepresentedinhexadecimal.
4 Apoint-to-pointlinktowhichnoIPv4addresshasbeenallocatediscalledanunnumberedlink.
SeeRFC1812section2.2.7fora discussionofsuchunnumberedlinks.
5.2.
InternetProtocol 143 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Subnet Organisation 130.100.0.0/16 Ericsson,Sweden 130.101.0.0/16 UniversityofAkron,USA 130.102.0.0/16 TheUniversityofQueensland,Australia 130.103.0.0/16 LotusDevelopment,USA 130.104.0.0/16 UniversitecatholiquedeLouvain,Belgium 130.105.0.0/16 OpenSoftwareFoundation,USA However,theInternetwasavictimofitsownsuccessandinthelate1980s,manyorganisationswererequesting blocks of IPv4 addresses and started connecting to the Internet.
Most of these organisations requested class B addressblocks,asclassAaddressblocksweretoolargeandinlimitedsupplywhileclassCaddressblockswere consideredtobetoosmall.Unfortunately,therewereonly16,384differentclassBaddressblocksandthisaddress spacewasbeingconsumedquickly.
Asaconsequence,theroutingtablesmaintainedbytheroutersweregrowing quicklyandsomeroutershaddifﬁcultiesmaintainingalltheseroutesintheirlimitedmemory5.
Figure5.22: EvolutionofthesizeoftheroutingtablesontheInternet(Jul1988-Dec1992-source: RFC1518) Facedwiththesetwoproblems,theInternetEngineeringTaskForcedecidedtodeveloptheClasslessInterdomain Routing (CIDR) architecture RFC 1518.
This architecture aims at allowing IP routing to scale better than the class-basedarchitecture.
CIDRcontainsthreeimportantmodiﬁcationscomparedtoRFC791.
1.
IPaddressclassesaredeprecated.
AllIPequipmentmustuseandsupportvariable-lengthsubnets.
2.
IP address blocks are no longer allocated on a ﬁrst-come-ﬁrst-served basis.
Instead, CIDR introduces a hierarchicaladdressallocationscheme.
3.
IProutersmustuselongest-preﬁxmatchwhentheylookupadestinationaddressintheirforwardingtable ThelasttwomodiﬁcationswereintroducedtoimprovethescalabilityoftheIProutingsystem.
Themaindraw- back of the ﬁrst-come-ﬁrst-served address block allocation scheme was that neighbouring address blocks were allocatedtoverydifferentorganisationsandconversely,verydifferentaddressblockswereallocatedtosimilaror- ganisations.
WithCIDR,addressblocksareallocatedbyRegionalIPRegistries(RIR)inanaggregatablemanner.
ARIRisresponsibleforalargeblockofaddressesandaregion.
Forexample,RIPEistheRIRthatisresponsible forEurope.
ARIRallocatessmalleraddressblocksfromitslargeblocktoInternetServiceProvidersRFC2050.
InternetServiceProvidersthenallocatesmalleraddressblockstotheircustomers.
Whenanorganisationrequests an address block, it must prove that it already has or expects to have in the near future, a number of hosts or customersthatisequivalenttothesizeoftherequestedaddressblock.
Themainadvantageofthishierarchicaladdressblockallocationschemeisthatitallowstherouterstomaintain fewerroutes.
Forexample,considertheaddressblocksthatwereallocatedtosomeoftheBelgianuniversitiesas showninthetablebelow.
5 Example routers from this period include the Cisco AGS http://www.knossos.net.nz/don/wn1.html and AGS+ http://www.ciscopress.com/articles/article.asp?p=25296 144 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Addressblock Organisation 130.104.0.0/16 UniversitecatholiquedeLouvain 134.58.0.0/16 KatholiekUniversiteitLeuven 138.48.0.0/16 FacultesuniversitairesNotre-DamedelaPaix 139.165.0.0/16 UniversitedeLiege 164.15.0.0/16 UniversiteLibredeBruxelles TheseuniversitiesareallconnectedtotheInternetexclusivelyviaBelnet.
Aseachuniversityhasbeenallocated a different address block, the routers of Belnet must announce one route for each university and all routers on the Internet must maintain a route towards each university.
In contrast, consider all the high schools and the government institutions that are connected to the Internet via Belnet.
An address block was assigned to these institutions after the introduction of CIDR in the 193.190.0.0/15 address block owned by Belnet.
With CIDR, Belnetcanannounceasingleroutetowards193.190.0.0/15thatcoversallofthesehighschools.
However,thereisonedifﬁcultywiththeaggregatablevariablelengthsubnetsusedbyCIDR.Considerforexample FEDICT,agovernmentinstitutionthatusesthe193.191.244.0/23addressblock.
Assumethatinadditiontobeing connected to the Internet via Belnet , FEDICT also wants to be connected to another Internet Service Provider.
TheFEDICTnetworkisthensaidtobemultihomed.
Thisisshownintheﬁgurebelow.
Figure5.23: MultihomingandCIDR Withsuchamultihomednetwork,routersR1andR2wouldhavetworoutestowardsIPv4address193.191.245.88 : onerouteviaBelnet(193.190.0.0/15)andonedirectroute(193.191.244.0/23).
BothroutesmatchIPv4address 193.192.145.88.
Since RFC 1519 when a router knows several routes towards the same destination address, it mustforwardpacketsalongtheroutehavingthelongestpreﬁxlength.
Inthecaseof193.191.245.88,thisisthe route193.191.244.0/23thatisusedtoforwardthepacket.
Thisforwardingruleiscalledthelongestpreﬁxmatch orthemorespeciﬁcmatch.
AllIPv4routersimplementthisforwardingrule.
Tounderstandthelongestpreﬁxmatchforwarding, considertheﬁgurebelow.
Withthisrule, theroute0.0.0.0/0 playsaparticularrole.
Asthisroutehasapreﬁxlengthof0bits,itmatchesalldestinationaddresses.
Thisroute isoftencalledthedefaultroute.
• apacketwithdestination192.168.1.1receivedbyrouterRisdestinedtotherouteritself.
Itisdeliveredto theappropriatetransportprotocol.
• apacketwithdestination11.2.3.4matchestworoutes: 11.0.0.0/8and0.0.0.0/0.
Thepacketisforwarded ontheWestinterface.
• a packet with destination 130.4.3.4 matches one route : 0.0.0.0/0.
The packet is forwarded on the North interface.
• apacketwithdestination4.4.5.6matchestworoutes: 4.0.0.0/8and0.0.0.0/0.
Thepacketisforwardedon theWestinterface.
5.2.
InternetProtocol 145 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • a packet with destination 4.10.11.254 matches three routes : 4.0.0.0/8, 4.10.11.0/24 and ‘0.0.0.0/0.
The packetisforwardedontheSouthinterface.
Figure5.24: Longestpreﬁxmatchexample Thelongestpreﬁxmatchcanbeimplementedbyusingdifferentdatastructures.
Onepossibilityistouseatrie.
Theﬁgurebelowshowsatriethatencodessixrouteshavingdifferentoutgoinginterfaces.
Figure5.25: Atrierepresentingaroutingtable Note: SpecialIPv4addresses Most unicast IPv4 addresses can appear as source and destination addresses in packets on the global Internet.
However,itisworthnotingthatsomeblocksofIPv4addresseshaveaspecialusage,asdescribedinRFC5735.
Theseinclude: 146 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • 0.0.0.0/8, which is reserved for self-identiﬁcation.
A common address in this block is 0.0.0.0, which is sometimesusedwhenahostbootsanddoesnotyetknowitsIPv4address.
• 127.0.0.0/8,whichisreservedforloopbackaddresses.
EachhostimplementingIPv4musthavealoopback interface(thatisnotattachedtoadatalinklayer).
Byconvention,IPv4address127.0.0.1isassignedtothis interface.
ThisallowsprocessesrunningonahosttouseTCP/IPtocontactotherprocessesrunningonthe samehost.
Thiscanbeveryusefulfortestingpurposes.
• 10.0.0.0/8,172.16.0.0/12and192.168.0.0/16arereservedforprivatenetworksthatarenotdirectlyattached totheInternet.
TheseaddressesareoftencalledprivateaddressesorRFC1918addresses.
• 169.254.0.0/16 isusedforlink-localaddressesRFC3927.
Somehostsuseanaddressinthisblockwhen theyareconnectedtoanetworkthatdoesnotallocateaddressesasexpected.
IPv4packets Now that we have clariﬁed the allocation of IPv4 addresses and the utilisation of the longest preﬁx match to forwardIPv4packets,wecanhaveamoredetailedlookatIPv4bystartingwiththeformatoftheIPv4packets.
TheIPv4packetformatwasdeﬁnedinRFC791.
Apartfromafewclariﬁcationsandsomebackwardcompatible changes,theIPv4packetformatdidnotchangesigniﬁcantlysincethepublicationofRFC791.
AllIPv4packets usethe20bytesheadershownbelow.
SomeIPv4packetscontainanoptionalheaderextensionthatisdescribed later.
Figure5.26: TheIPversion4header ThemainﬁeldsoftheIPv4headerare: • a4bitsversionthatindicatestheversionofIPusedtobuildtheheader.
Usingaversionﬁeldintheheader allowsthenetworklayerprotocoltoevolve.
• a4bitsIPHeaderLength(IHL)thatindicatesthelengthoftheIPheaderin32bitswords.
Thisﬁeldallows IPv4touseoptionsifrequired,butasitisencodedasa4bitsﬁeld,theIPv4headercannotbelongerthan 64bytes.
• an8bitsDSﬁeldthatisusedforQualityofServiceandwhoseusageisdescribedlater.
• an8bitsProtocolﬁeldthatindicatesthetransportlayerprotocolthatmustprocessthepacket’spayloadat thedestination.
Commonvaluesforthisﬁeld6are6forTCPand17forUDP • a16bitslengthﬁeldthatindicatesthetotallengthoftheentireIPv4packet(headerandpayload)inbytes.
ThisimpliesthatanIPv4packetcannotbelongerthan65535bytes.
• a32bitssourceaddressﬁeldthatcontainstheIPv4addressofthesourcehost • a32bitsdestinationaddressﬁeldthatcontainstheIPv4addressofthedestinationhost • a16bitschecksumthatprotectsonlytheIPv4headeragainsttransmissionerrors TheotherﬁeldsoftheIPv4headerareusedforspeciﬁcpurposes.
Theﬁrstisthe8bitsTimeToLive(TTL)ﬁeld.
ThisﬁeldisusedbyIPv4toavoidtheriskofhavinganIPv4packetcaughtinaninﬁniteloopduetoatransient 6Seehttp://www.iana.org/assignments/protocol-numbers/forthelistofallassignedProtocolnumbers 5.2.
InternetProtocol 147 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 or permanent error in routing tables 7.
Consider for example the situation depicted in the ﬁgure below where destinationDusesaddress11.0.0.56.IfSsendsapackettowardsthisdestination,thepacketisforwardedtorouter BwhichforwardsittorouterCthatforwardsitbacktorouterA,etc.
Figure5.27: ForwardingloopsinanIPnetwork Unfortunately,suchloopscanoccurfortworeasonsinIPnetworks.
First,ifthenetworkusesstaticrouting,the loopcanbecausedbyasimpleconﬁgurationerror.
Second,ifthenetworkusesdynamicrouting,suchaloopcan occur transiently, for example during the convergence of the routing protocol after a link or router failure.
The TTLﬁeldoftheIPv4headerensuresthatevenifthereareforwardingloopsinthenetwork,packetswillnotloop forever.
HostssendtheirIPv4packetswithapositiveTTL(usually64ormore8).
WhenarouterreceivesanIPv4 packet, itﬁrstdecrementstheTTL byone.
IftheTTL becomes0, thepacketisdiscardedanda messageissent backtothepacket’ssource(seesectionICMP).Otherwise,therouterperformsalookupinitsforwardingtableto forwardthepacket.
A second problem for IPv4 is the heterogeneity of the datalink layer.
IPv4 is used above many very different datalink layers.
Each datalink layer has its own characteristics and as indicated earlier, each datalink layer is characterisedbyamaximumframesize.
FromIP’spointofview,adatalinklayerinterfaceischaracterisedbyits MaximumTransmissionUnit(MTU).TheMTUofaninterfaceisthelargestIPv4packet(includingheader)that itcansend.
ThetablebelowprovidessomecommonMTUsizes9.
Datalinklayer MTU Ethernet 1500bytes WiFi 2272bytes ATM(AAL5) 9180bytes 802.15.4 102or81bytes TokenRing 4464bytes FDDI 4352bytes AlthoughIPv4cansend64KByteslongpackets,fewdatalinklayertechnologiesthatareusedtodayareableto send a 64 KBytes IPv4 packet inside a frame.
Furthermore, as illustrated in the ﬁgure below, another problem is that a host may send a packet that would be too large for one of the datalink layers used by the intermediate routers.
Figure5.28: Theneedforfragmentationandreassembly 7TheinitialIPspeciﬁcationinRFC791suggestedthatrouterswoulddecrementtheTTLatleastonceeverysecond.
Thiswouldensure thatapacketwouldneverremainformorethanTTLsecondsinthenetwork.However,inpracticemostrouterimplementationssimplychose todecrementtheTTLbyone.
8TheinitialTTLvalueusedtosendIPpacketsvaryfromoneimplementationtoanother.
MostcurrentIPimplementationsuseaninitial TTLof64ormore.Seehttp://members.cox.net/~ndav1/self_published/TTL_values.htmlforadditionalinformation.
9SupportingIPoverthe802.15.4datalinklayertechnologyrequiresspecialmechanisms.
SeeRFC4944foradiscussionofthespecial problemsposedby802.15.4 148 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Tosolvetheseproblems,IPv4includesapacketfragmentationandreassemblymechanism.
Bothhostsandinter- mediateroutersmayfragmentanIPv4packetifthepacketistoolongtobesentviathedatalinklayer.
InIPv4, fragmentationiscompletelyperformedintheIPlayerandalargeIPv4isfragmentedintotwoormoreIPv4pack- ets(calledfragments).
TheIPv4fragmentsofalargepacketarenormalIPv4packetsthatareforwardedtowards thedestinationofthelargepacketbyintermediaterouters.
TheIPv4fragmentationmechanismreliesonfourﬁeldsoftheIPv4header: Length,Identiﬁcation,theﬂagsand theFragmentOffset.
TheIPv4headercontainstwoﬂags: MorefragmentsandDon’tFragment(DF).Whenthe DFﬂagisset,thisindicatesthatthepacketcannotbefragmented.
The basic operation of the IPv4 fragmentation is as follows.
A large packet is fragmented into two or more fragments.
Thesizeofallfragments,exceptthelastone,isequaltotheMaximumTransmissionUnitofthelink usedtoforwardthepacket.
EachIPv4packetcontainsa16bitsIdentiﬁcationﬁeld.
Whenapacketisfragmented, theIdentiﬁcationofthelargepacketiscopiedinallfragmentstoallowthedestinationtoreassemblethereceived fragmentstogether.Ineachfragment,theFragmentOffsetindicates,inunitsof8bytes,thepositionofthepayload of the fragment in the payload of the original packet.
The Length ﬁeld in each fragment indicates the length of the payload of the fragment as in a normal IPv4 packet.
Finally, the More fragments ﬂag is set only in the last fragmentofalargepacket.
Thefollowingpseudo-codedetailstheIPv4fragmentation,assumingthatthepacketdoesnotcontainoptions.
#mtu : maximum size of the packet (including header) of outgoing link if p.len < mtu : send(p) # packet is too large maxpayload=8*int((mtu-20)/8) # must be n times 8 bytes if p.flags==’DF’ : discard(p) # packet must be fragmented payload=p[IP].payload pos=0 while len(payload) > 0 : if len(payload) > maxpayload : toSend=IP(dest=p.dest,src=p.src, ttl=p.ttl, id=p.id, frag=p.frag+(pos/8), len=mtu, proto=p.proto)/payload[0:maxpayload] pos=pos+maxpayload payload=payload[maxpayload+1:] else toSend=IP(dest=p.dest,src=p.src, ttl=p.ttl, id=p.id, frag=p.frag+(pos/8), flags=p.flags, len=len(payload), proto=p.proto)/payload forward(toSend) ThefragmentsofanIPv4packetmayarriveatthedestinationinanyorder,aseachfragmentisforwardedinde- pendently in the network and may follow different paths.
Furthermore, some fragments may be lost and never reachthedestination.
The reassembly algorithm used by the destination host is roughly as follows.
First, the destination can verify whether a received IPv4 packet is a fragment or not by checking the value of the More fragments ﬂag and the FragmentOffset.IftheFragmentOffsetissetto0andtheMorefragmentsﬂagisreset,thereceivedpackethasnot beenfragmented.Otherwise,thepackethasbeenfragmentedandmustbereassembled.Thereassemblyalgorithm reliesontheIdentiﬁcationﬁeldofthereceivedfragmentstoassociateafragmentwiththecorrespondingpacket beingreassembled.
Furthermore, theFragmentOffset ﬁeldindicatesthepositionofthefragmentpayloadinthe original unfragmented packet.
Finally, the packet with the More fragments ﬂag reset allows the destination to determinethetotallengthoftheoriginalunfragmentedpacket.
NotethatthereassemblyalgorithmmustdealwiththeunreliabilityoftheIPnetwork.Thisimpliesthatafragment may be duplicated or a fragment may never reach the destination.
The destination can easily detect fragment duplicationthankstotheFragmentOffset.
Todealwithfragmentlosses,thereassemblyalgorithmmustboundthe 5.2.
InternetProtocol 149 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 timeduringwhichthefragmentsofapacketarestoredinitsbufferwhilethepacketisbeingreassembled.
This canbeimplementedbystartingatimerwhentheﬁrstfragmentofapacketisreceived.
Ifthepackethasnotbeen reassembleduponexpirationofthetimer,allfragmentsarediscardedandthepacketisconsideredtobelost.
The original IP speciﬁcation, in RFC 791, deﬁned several types of options that can be added to the IP header.
Eachoptionisencodedusingatypelengthvalueformat.
Theyarenotwidelyusedtodayandarethusonlybrieﬂy described.
AdditionaldetailsmaybefoundinRFC791.
ThemostinterestingoptionsinIPv4arethethreeoptionsthatarerelatedtorouting.
TheRecordrouteoptionwas deﬁnedtoallownetworkmanagerstodeterminethepathfollowedbyapacket.WhentheRecordrouteoptionwas present, routers on the packet’s path had to insert their IP address in the option.
This option was implemented, but as the optional part of the IPv4 header can only contain 44 bytes, it is impossible to discover an entire path ontheglobalInternet.
traceroute(8),despiteitslimitations,isabettersolutiontorecordthepathtowardsa destination.
The other routing options are the Strict source route and the Loose source route option.
The main idea behind theseoptionsisthatahostmaywant,foranyreason,tospecifythepathtobefollowedbythepacketsthatitsends.
TheStrictsourcerouteoptionallowsahosttoindicateinsideeachpackettheexactpathtobefollowed.
TheStrict sourcerouteoptioncontainsalistofIPv4addressandapointertoindicatethenextaddressinthelist.
Whena routerreceivesapacketcontainingthisoption, itdoesnotlookupthedestinationaddressinitsroutingtablebut forwardsthepacketdirectlytothenextrouterinthelistandadvancesthepointer.
Thisisillustratedintheﬁgure belowwhereSforcesitspacketstofollowtheRA-RB-RDpath.
Figure5.29: UsageoftheStrictsourcerouteoption The maximum length of the optional part of the IPv4 header is a severe limitation for the Strict source route optionasfortheRecordRouteoption.
TheLoosesourcerouteoptiondoesnotsufferfromthislimitation.
This optionallowsthesendinghosttoindicateinsideitspacketsomeoftheroutersthatmustbetraversedtoreachthe destination.
Thisisshownintheﬁgurebelow.
Ssendsapacketcontainingalistofaddressesandapointertothe nextrouterinthelist.
Initially,thispointerpointstoRB.WhenRAreceivesthepacketsentbyS,itlooksupinits forwardingtabletheaddresspointedintheLoosesourcerouteoptionandnotthedestinationaddress.
Thepacket isthenforwardedtorouterRBthatrecognisesitsaddressintheoptionandadvancesthepointer.
Asthereisno addresslistedintheLoosesourcerouteoptionanymore,RBandotherdownstreamroutersforwardthepacketby performingalookupforthedestinationaddress.
Figure5.30: UsageoftheLoosesourcerouteoption ThesetwooptionsareusuallyignoredbyroutersbecausetheycausesecurityproblemsRFC6274.
150 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 5.2.2 ICMP version 4 Itissometimesnecessaryforintermediateroutersorthedestinationhosttoinformthesenderofthepacketofa problemthatoccurredwhileprocessingapacket.IntheTCP/IPprotocolsuite,thisreportingisdonebytheInternet ControlMessageProtocol(ICMP).ICMPisdeﬁnedinRFC792.
ICMPmessagesarecarriedasthepayloadof IPpackets(theprotocolvaluereservedforICMPis1).
AnICMPmessageiscomposedofan8byteheaderand avariablelengthpayloadthatusuallycontainstheﬁrstbytesofthepacketthattriggeredthetransmissionofthe ICMPmessage.
Figure5.31: ICMPversion4(RFC792) IntheICMPheader,theTypeandCodeﬁeldsindicatethetypeofproblemthatwasdetectedbythesenderofthe ICMPmessage.
TheChecksumprotectstheentireICMPmessageagainsttransmissionerrorsandtheDataﬁeld containsadditionalinformationforsomeICMPmessages.
ThemaintypesofICMPmessagesare: • Destination unreachable : a Destination unreachable ICMP message is sent when a packet cannotbedeliveredtoitsdestinationduetoroutingproblems.
Differenttypesofunreachability aredistinguished: – Networkunreachable: thisICMPmessageissentbyarouterthatdoesnothavearoutefor thesubnetcontainingthedestinationaddressofthepacket – Host unreachable : this ICMP message is sent by a router that is attached to the subnet that contains the destination address of the packet, but this destination address cannot be reachedatthistime – Protocolunreachable: thisICMPmessageissentbyadestinationhostthathasreceiveda packet,butdoesnotsupportthetransportprotocolindicatedinthepacket’sProtocolﬁeld – Port unreachable : this ICMP message is sent by a destination host that has received a packetdestinedtoaportnumber,butnoserverprocessisboundtothisport • Fragmentationneeded : thisICMPmessageissentbyarouterthatreceivesapacketwiththe Don’tFragmentﬂagsetthatislargerthantheMTUoftheoutgoinginterface • Redirect:thisICMPmessagecanbesentwhentherearetworoutersonthesameLAN.Consider aLANwithonehostandtworouters: R1andR2.
AssumethatR1isalsoconnectedtosubnet 130.104.0.0/16 while R2 is connected to subnet 138.48.0.0/16.
If a host on the LAN sends a packet towards 130.104.1.1 to R2, R2 needs to forward the packet again on the LAN to reach R1.
ThisisnotoptimalasthepacketissenttwiceonthesameLAN.Inthiscase,R2couldsend anICMPRedirectmessagetothehosttoinformitthatitshouldhavesentthepacketdirectlyto R1.
Thisallowsthehosttosendtheotherpacketsto130.104.1.1directlyviaR1.
• Parameterproblem: thisICMPmessageissentwhenarouterorahostreceivesanIPpacket containinganerror(e.g.
aninvalidoption) 5.2.
InternetProtocol 151 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.32: ICMPredirect • Sourcequench: arouterwassupposedtosendthismessagewhenithadtodiscardpacketsdue to congestion.
However, sending ICMP messages in case of congestion was not the best way toreducecongestionandsincetheinclusionofacongestioncontrolschemeinTCP,thisICMP messagehasbeendeprecated.
• TimeExceeded: therearetwotypesofTimeExceededICMPmessages – TTLexceeded:aTTLexceededmessageissentbyarouterwhenitdiscardsanIPv4packet becauseitsTTLreached0.
– Reassemblytimeexceeded: thisICMPmessageissentwhenadestinationhasbeenunable toreassembleallthefragmentsofapacketbeforetheexpirationofitsreassemblytimer.
• EchorequestandEchoreply: theseICMPmessagesareusedbytheping(8)networkdebug- gingsoftware.
Note: Redirectionattacks ICMPredirect messages areuseful whenseveral routersare attachedto thesame LANas hosts.
However, they should be used with care as they also create an important security risk.
One of the most annoying attacks in an IPnetworkiscalledthemaninthemiddleattack.
Suchanattackoccursifanattackerisabletoreceive,process, possibly modify and forward all the packets exchanged between a source and a destination.
As the attacker receivesallthepacketsitcaneasilycollectpasswordsorcreditcardnumbersoreveninjectfakeinformationinan establishedTCPconnection.
ICMPredirectsunfortunatelyenableanattackertoeasilyperformsuchanattack.
In theﬁgureabove,considerhostHthatisattachedtothesameLANasAandR1.
IfHsendstoAanICMPredirect forpreﬁx138.48.0.0/16, AforwardstoH allthepacketsthatitwantstosendtothispreﬁx.
H canthenforward themtoR2.
Toavoidtheseattacks,hostsshouldignoretheICMPredirectmessagesthattheyreceive.
ping(8)isoftenusedbynetworkoperatorstoverifythatagivenIPaddressisreachable.
Eachhostissupposed 10 toreplywithanICMPEchoreplymessagewhenitsreceivesanICMPEchorequestmessage.
Asampleusage ofping(8)isshownbelow.
ping 130.104.1.1 PING 130.104.1.1 (130.104.1.1): 56 data bytes 64 bytes from 130.104.1.1: icmp_seq=0 ttl=243 time=19.961 ms 64 bytes from 130.104.1.1: icmp_seq=1 ttl=243 time=22.072 ms 64 bytes from 130.104.1.1: icmp_seq=2 ttl=243 time=23.064 ms 64 bytes from 130.104.1.1: icmp_seq=3 ttl=243 time=20.026 ms 64 bytes from 130.104.1.1: icmp_seq=4 ttl=243 time=25.099 ms --- 130.104.1.1 ping statistics --- 5 packets transmitted, 5 packets received, 0% packet loss round-trip min/avg/max/stddev = 19.961/22.044/25.099/1.938 ms 10Untilafewyearsago,allhostsrepliedtoEchorequestICMPmessages.However,duetothesecurityproblemsthathaveaffectedTCP/IP implementations,manyoftheseimplementationscannowbeconﬁguredtodisableansweringEchorequestICMPmessages.
152 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Anotherveryusefuldebuggingtoolistraceroute(8).
Thetraceroutemanpagedescribesthistoolas“print theroutepacketstaketonetworkhost”.
tracerouteusestheTTLexceeded ICMPmessagestodiscovertheinter- mediateroutersonthepathtowardsadestination.
Theprinciplebehindtracerouteisverysimple.
Whenarouter receives an IP packet whose TTL is set to 1 it decrements the TTL and is forced to return to the sending host a TTLexceededICMPmessagecontainingtheheaderandtheﬁrstbytesofthediscardedIPpacket.
Todiscoverall routersonanetworkpath, asimplesolutionistoﬁrstsendapacketwhoseTTLissetto1, thenapacketwhose TTLissetto2,etc.
Asampletracerouteoutputisshownbelow.
traceroute www.ietf.org traceroute to www.ietf.org (64.170.98.32), 64 hops max, 40 byte packets 1 CsHalles3.sri.ucl.ac.be (192.168.251.230) 5.376 ms 1.217 ms 1.137 ms 2 CtHalles.sri.ucl.ac.be (192.168.251.229) 1.444 ms 1.669 ms 1.301 ms 3 CtPythagore.sri.ucl.ac.be (130.104.254.230) 1.950 ms 4.688 ms 1.319 ms 4 fe.m20.access.lln.belnet.net (193.191.11.9) 1.578 ms 1.272 ms 1.259 ms 5 10ge.cr2.brueve.belnet.net (193.191.16.22) 5.461 ms 4.241 ms 4.162 ms 6 212.3.237.13 (212.3.237.13) 5.347 ms 4.544 ms 4.285 ms 7 ae-11-11.car1.Brussels1.Level3.net (4.69.136.249) 5.195 ms 4.304 ms 4.329 ms 8 ae-6-6.ebr1.London1.Level3.net (4.69.136.246) 8.892 ms 8.980 ms 8.830 ms 9 ae-100-100.ebr2.London1.Level3.net (4.69.141.166) 8.925 ms 8.950 ms 9.006 ms 10 ae-41-41.ebr1.NewYork1.Level3.net (4.69.137.66) 79.590 ms ae-43-43.ebr1.NewYork1.Level3.net (4.69.137.74) 78.140 ms ae-42-42.ebr1.NewYork1.Level3.net (4.69.137.70) 77.663 ms 11 ae-2-2.ebr1.Newark1.Level3.net (4.69.132.98) 78.290 ms 83.765 ms 90.006 ms 12 ae-14-51.car4.Newark1.Level3.net (4.68.99.8) 78.309 ms 78.257 ms 79.709 ms 13 ex1-tg2-0.eqnwnj.sbcglobal.net (151.164.89.249) 78.460 ms 78.452 ms 78.292 ms 14 151.164.95.190 (151.164.95.190) 157.198 ms 160.767 ms 159.898 ms 15 ded-p10-0.pltn13.sbcglobal.net (151.164.191.243) 161.872 ms 156.996 ms 159.425 ms 16 AMS-1152322.cust-rtr.swbell.net (75.61.192.10) 158.735 ms 158.485 ms 158.588 ms 17 mail.ietf.org (64.170.98.32) 158.427 ms 158.502 ms 158.567 ms The above traceroute(8) output shows a 17 hops path between a host at UCLouvain and one of the main IETFservers.Foreachhop,tracerouteprovidestheIPv4addressoftherouterthatsenttheICMPmessageandthe measuredround-trip-timebetweenthesourceandthisrouter.
traceroutesendsthreeprobeswitheachTTLvalue.
Insomecases,suchasatthe10thhopabove,theICMPmessagesmaybereceivedfromdifferentaddresses.
This isusuallybecausedifferentpacketsfromthesamesourcehavefolloweddifferentpaths11inthenetwork.
Another important utilisation of ICMP messages is to discover the maximum MTU that can be used to reach a destinationwithoutfragmentation.
Asexplainedearlier,whenanIPv4routerreceivesapacketthatislargerthan theMTUoftheoutgoinglink,itmustfragmentthepacket.
Unfortunately,fragmentationisacomplexoperation androuterscannot performitatlinerate [KM1995].
Furthermore, when aTCPsegmentistransported inanIP packetthatisfragmentedinthenetwork,thelossofasinglefragmentforcesTCPtoretransmittheentiresegment (and thus all the fragments).
If TCP was able to send only packets that do not require fragmentation in the network,itcouldretransmitonlytheinformationthatwaslostinthenetwork.
Inaddition,IPreassemblycauses severalchallengesathighspeedasdiscussedinRFC4963.
UsingIPfragmentationtoallowUDPapplicationsto exchangelargemessagesraisesseveralsecurityissues[KPS2003].
ICMP,combinedwiththeDon’tfragment(DF)IPv4ﬂag,isusedbyTCPimplementationstodiscoverthelargest MTUsizethatisallowedtoreachadestinationhostwithoutcausingnetworkfragmentation.ThisisthePathMTU discoverymechanismdeﬁnedinRFC1191.
ATCPimplementationthatincludesPathMTUdiscovery(mostdo) requeststheIPv4layertosendallsegmentsinsideIPv4packetshavingtheDFﬂagset.Thisprohibitsintermediate routersfromfragmentingthesepackets.
Ifarouterneedstoforwardanunfragmentablepacketoveralinkwitha smallerMTU,itreturnsaFragmentationneededICMPmessagetothesource,indicatingtheMTUofitsoutgoing link.
ThisICMPmessagecontainsintheMTUoftherouter’soutgoinglinkinitsDataﬁeld.
Uponreceptionof thisICMPmessage,thesourceTCPimplementationadjustsitsMaximumSegmentSize(MSS)sothatthepackets containingthesegmentsthatitsendscanbeforwardedbythisrouterwithoutrequiringfragmentation.
11Adetailedanalysisoftracerouteoutputisoutsidethescopeofthisdocument.Additionalinformationmaybefoundin[ACO+2006]and [DT2007] 5.2.
InternetProtocol 153 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 InteractionsbetweenIPv4andthedatalinklayer Asmentionedintheﬁrstsectionofthischapter,therearethreemaintypesofdatalinklayers:point-to-pointlinks, LANssupportingbroadcastandmulticastandNBMAnetworks.
Therearetwoimportantissuestobeaddressed whenusingIPv4inthesetypesofnetworks.
TheﬁrstissueishowanIPv4deviceobtainsitsIPv4address.
The secondissueishowIPv4packetsareexchangedoverthedatalinklayerservice.
On a point-to-point link, the IPv4 addresses of the communicating devices can be conﬁgured manually or by using a simple protocol.
IPv4 addresses are often conﬁgured manually on point-to-point links between routers.
When point-to-point links are used to attach hosts to the network, automatic conﬁguration is often preferred in ordertoavoidproblemswithincorrectIPv4addresses.
Forexample, the PPP,speciﬁedinRFC1661, includes anIPnetworkcontrolprotocolthatcanbeusedbytherouterintheﬁgurebelowtosendtheIPv4addressthatthe attached host must conﬁgure for its interface.
The transmission of IPv4 packets on a point-to-point link will be discussedinchapterchap:lan.
Figure5.33: IPv4onpoint-to-pointlinks UsingIPv4inaLANintroducesanadditionalproblem.OnaLAN,eachdeviceisidentiﬁedbyitsuniquedatalink layeraddress.
ThedatalinklayerservicecanbeusedbyanyhostattachedtotheLANtosendaframetoanyother hostattachedtothesameLAN.Forthis,thesendinghostmustknowthedatalinklayeraddressofthedestination host.
Forexample,theﬁgurebelowshowsfourhostsattachedtothesameLANconﬁguredwithIPv4addresses inthe10.0.1.0/24subnetanddatalinklayeraddressesrepresentedasasinglecharacter12.
Inthisnetwork,ifhost 10.0.1.22/24wantstosendanIPv4packettothehosthavingaddress10.0.1.8,itmustknowthatthedatalinklayer addressofthishostisC.
Figure5.34: AsimpleLAN Inasimplenetworksuchastheoneshownabove,itcouldbepossibletomanuallyconﬁgurethemappingbetween theIPv4addressesofthehostsandthecorrespondingdatalinklayeraddresses.
However,inalargerLANthisis impossible.
To ease the utilisation of LANs, IPv4 hosts must be able to automatically obtain the datalink layer address corresponding to any IPv4 address on the same LAN.
This is the objective of the Address Resolution Protocol(ARP)deﬁnedinRFC826.
ARPisadatalinklayerprotocolthatisusedbyIPv4.
Itreliesontheability ofthedatalinklayerservicetoeasilydeliverabroadcastframetoalldevicesattachedtothesameLAN.
12Inpractice,mostlocalareanetworksuseaddressesencodedasa48bitsﬁeld[802]_. Somerecentlocalareanetworktechnologiesuse 64bitsaddresses.
154 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 TheeasiestwaytounderstandtheoperationofARPistoconsiderthesimplenetworkshownaboveandassume that host 10.0.1.22/24 needs to send an IPv4 packet to host 10.0.1.8.
As this IP address belongs to the same subnet, the packet must be sent directly to its destination via the datalink layer service.
To use this service, the sending host must ﬁnd the datalink layer address that is attached to host 10.0.1.8.
Each IPv4 host maintains an ARPcachecontainingthelistofallmappingsbetweenIPv4addressesanddatalinklayeraddressesthatitknows.
When an IPv4 hosts boots, its ARP cache is empty.
10.0.1.22 thus ﬁrst consults its ARP cache.
As the cache does not contain the requested mapping, host 10.0.1.22 sends a broadcast ARP query frame on the LAN.
The framecontainsthedatalinklayeraddressofthesendinghost(A)andtherequestedIPv4address(10.0.1.8).
This broadcast frame is received by all devices on the LAN and only the host that owns the requested IPv4 address replies by returning a unicast ARP reply frame with the requested mapping.
Upon reception of this reply, the sendinghostupdatesitsARPcacheandsendstheIPv4packetbyusingthedatalinklayerservice.
Todealwith devicesthatmoveorwhoseaddressesarereconﬁgured,mostARPimplementationsremovethecacheentriesthat havenotbeenusedforafewminutes.
Someimplementationsre-validateARPcacheentriesfromtimetotimeby sendingARPqueries13.
Note: SecurityissueswiththeAddressResolutionProtocol ARPisanoldandwidelyusedprotocolthatwasunfortunatelydesignedwhensecurityissueswerenotaconcern.
ARPisalmostinsecurebydesign.
HostsusingARPcanbesubjecttoseveraltypesofattack.
First, amalicious host could create a denial of service attack on a LAN by sending random replies to the received ARP queries.
ThiswouldpollutetheARPcacheoftheotherhostsonthesameLAN.Onaﬁxednetwork,suchattackscanbe detectedbythesystemadministratorwhocanphysicallyremovethemalicioushostsfromtheLAN.Onawireless network,removingamalicioushostismuchmoredifﬁcult.
A second type of attack are the man-in-the-middle attacks.
This name is used for network attacks where the attacker is able to read and possibly modify all the messages sent by the attacked devices.
Such an attack is possible in a LAN.
Assume, in the ﬁgure above, that host 10.0.1.9 is malicious and would like to receive and modifyallthepacketssentbyhost10.0.1.22tohost10.0.1.8.Thiscanbeachievedeasilyifhost10.0.1.9manages, bysendingfakeARPreplies,toconvincehost10.0.1.22(resp.
10.0.1.8)thatitsowndatalinklayeraddressmust beusedtoreach10.0.1.8(resp.
10.0.1.22).
ARPisusedbyalldevicesthatareconnectedtoaLANandimplementIPv4.Bothroutersandendhostsimplement ARP.WhenahostneedstosendanIPv4packettoadestinationoutsideofitslocalsubnet,itmustﬁrstsendthe packet to one of the routers that reside on this subnet.
Consider for example the network shown in the ﬁgure below.
Each host is conﬁgured with an IPv4 address in the 10.0.1.0/24 subnet and uses 10.0.1.1 as its default router.
Tosendapackettoaddress1.2.3.4,host10.0.1.8willﬁrstneedtoknowthedatalinklayerofthedefault router.
ItwillthussendanARPrequestfor10.0.1.1.
UponreceptionoftheARPreply,host10.0.1.8updatesits ARPtableandsendsitspacketinaframetoitsdefaultrouter.
Therouterwillthenforwardthepackettowardsits ﬁnaldestination.
Figure5.35: AsimpleLANwitharouter IntheearlydaysoftheInternet,IPaddressesweremanuallyconﬁguredonbothhostsandroutersandalmostnever changed.
However,thismanualconﬁgurationcanbecomplex14 andoftencauseserrorsthataresometimesdifﬁ- culttodebug.
RecentTCP/IPimplementationsareabletodetectsomeofthesemisconﬁgurations.
Forexample, iftwohostsareattachedtothesamesubnetwiththesameIPv4addresstheywillbeunabletocommunicate.
To detectthisproblemhostssendanARPrequestfortheirconﬁguredaddresseachtimetheiraddressedischanged RFC5227.IftheyreceiveananswertothisARPrequest,theytriggeranalarmorinformthesystemadministrator.
13Seechapter28of[Benvenuti2005]foradescriptionoftheimplementationofARPintheLinuxkernel.
14Forexample,consideralltheoptionsthatcanbespeciﬁedfortheifconﬁgutility<http://en.wikipedia.org/wiki/Ifconﬁg>onUnixhosts.
5.2.
InternetProtocol 155 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Toeasetheattachmentofhoststosubnets,mostnetworksnowsupporttheDynamicHostConﬁgurationProtocol (DHCP) RFC 2131.
DHCP allows a host to automatically retrieve its assigned IPv4 address.
A DHCP server is associated to each subnet 15.
Each DHCP server manages a pool of IPv4 addresses assigned to the subnet.
Whenahostisﬁrstattachedtothesubnet,itsendsaDHCPrequestmessageinaUDPsegment(theDHCPserver listens on port 67).
As the host knows neither its IPv4 address nor the IPv4 address of the DHCP server, this UDP segment is sent inside an IPv4 packet whose source and destination addresses are respectively0.0.0.0 and 255.255.255.255.
TheDHCPrequestmaycontainvariousoptionssuchasthenameofthehost,itsdatalinklayer address,etc.
TheservercapturestheDHCPrequestandselectsanunassignedaddressinitsaddresspool.
Itthen sendstheassignedIPv4addressinaDHCPreplymessagewhichcontainsthedatalinklayeraddressofthehost and additional information such as the subnet mask of the IPv4 address, the address of the default router or the addressoftheDNSresolver.
ThisDHCPreplymessageissentinanIPv4packetwhosesourceanddestination addressesarerespectivelytheIPv4addressoftheDHCPserverandthe255.255.255.255broadcastaddress.
The DHCPreplyalsospeciﬁesthelifetimeoftheaddressallocation.Thisforcesthehosttorenewitsaddressallocation onceitexpires.
Thankstothelimitedleasetime,IPaddressesareautomaticallyreturnedtothepoolofaddresses hostsarepoweredoff.
ThisreducesthewasteofIPv4addresses.
InanNBMAnetwork,theinteractionsbetweenIPv4andthedatalinklayeraremorecomplexastheARPprotocol cannot be used as in a LAN.
Such NBMA networks use special servers that store the mappings between IP ad- dressesandthecorrespondingdatalinklayeraddress.
AsynchronousTransferMode(ATM)networksforexample canuseeithertheATMARPprotocoldeﬁnedinRFC2225ortheNextHopResolutionProtocol(NHRP)deﬁned in RFC 2332.
ATM networks are less frequently used today and we will not describe the detailed operation of theseservers.
OperationofIPv4devices AtthispointofthedescriptionofIPv4,itisusefultohaveadetailedlookathowanIPv4implementationsends, receivesandforwardsIPv4packets.
ThesimplestcaseiswhenahostneedstosendasegmentinanIPv4packet.
Thehostperformstwooperations.
First,itmustdecideonwhichinterfacethepacketwillbesent.
Seconditmust createthecorrespondingIPpacket(s).
Tosimplifythediscussioninthissection,weignoretheutilisationofIPv4options.
Thisisnotaseverelimitation astodayIPv4packetsrarelycontainoptions.
DetailsabouttheprocessingoftheIPv4optionsmaybefoundinthe relevantRFCs,suchasRFC791.
Furthermore,wealsoassumethatonlypoint-to-pointlinksareused.
Wedefer theexplanationoftheoperationofIPv4overLocalAreaNetworksuntilthenextchapter.
AnIPv4hosthavingndatalinklayerinterfacesmanagesn+1IPv4addresses: • the127.0.0.1/32IPv4addressassignedbyconventiontoitsloopbackaddress • oneA.B.C.D/pIPv4addressassignedtoeachofitsndatalinklayerinterfaces Suchahostmaintainsaroutingtablecontainingoneentryforitsloopbackaddressandoneentryforeachsubnet identiﬁerassignedtoitsinterfaces.
Furthermore,thehostusuallyusesoneofitsinterfacesasthedefaultinterface whensendingpacketsthatarenotaddressedtoadirectlyconnecteddestination.
Thisisrepresentedbythedefault route: 0.0.0.0/0thatisassociatedtooneinterface.
Whenatransportprotocolrunningonthehostrequeststhetransmissionofasegment,itusuallyprovidestheIPv4 destination address to the IPv4 layer in addition to the segment 16.
The IPv4 implementation ﬁrst performs a longestpreﬁxmatchwiththedestinationaddressinitsroutingtable.
Thelookupreturnstheidentiﬁcationofthe interfacethatmustbeusedtosendthepacket.
ThehostcanthencreatetheIPv4packetcontainingthesegment.
ThesourceIPv4addressofthepacketistheIPv4addressofthehostontheinterfacereturnedbythelongestpreﬁx match.
The Protocol ﬁeld of the packet is set to the identiﬁcation of the local transport protocol which created the segment.
The TTL ﬁeld of the packet is set to the default TTL used by the host.
The host must now choose thepacket’sIdentiﬁcation.
ThisIdentiﬁcationisimportantifthepacketbecomesfragmentedinthenetwork,asit ensuresthatthedestinationisabletoreassemblethereceivedfragments.
Ideally,asendinghostshouldneversend apackettwicewiththesameIdentiﬁcationtothesamedestinationhost,inordertoensurethatallfragmentsare correctlyreassembledbythedestination.Unfortunately,witha16bitsIdentiﬁcationﬁeldandanexpectedMSLof 15 Inpractice,thereisusuallyoneDHCPserverpergroupofsubnetsandtherouterscaptureoneachsubnettheDHCPmessagesand forwardthemtotheDHCPserver.
16AtransportprotocolimplementationcanalsospecifywhetherthepacketmustbesentwiththeDFsetorset.
ATCPimplementation usingPathMTUDiscoverywouldalwaysrequestthetransmissionofIPv4packetswiththeDFﬂagset.
156 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 2minutes,thisimpliesthatthemaximumbandwidthtoagivendestinationislimitedtoroughly286Mbps.
With amorerealistic1500bytesMTU,thatbandwidthdropsto6.4MbpsRFC4963iffragmentationmustbepossible 17.
Thisisverylowandisanotherreasonwhyhostsarehighlyencouragedtoavoidfragmentation.
If;despiteall ofthis,theMTUoftheoutgoinginterfaceissmallerthanthepacket’slength,thepacketisfragmented.
Finally, thepacket’schecksumiscomputedbeforetransmission.
When a host receives an IPv4 packet destined to itself, there are several operations that it must perform.
First, itmustcheckthepacket’schecksum.
Ifthechecksumisincorrect, thepacketisdiscarded.
Then, itmustcheck whetherthepackethasbeenfragmented.Ifyes,thepacketispassedtothereassemblyalgorithmdescribedearlier.
Otherwise,thepacketmustbepassedtotheupperlayer.
ThisisdonebylookingattheProtocolﬁeld(6forTCP, 17 forUDP).IfthehostdoesnotimplementthetransportlayerprotocolcorrespondingtothereceivedProtocol ﬁeld,itsendsaProtocolunreachableICMPmessagetothesendinghost.
IfthereceivedpacketcontainsanICMP message(Protocolﬁeldsetto1), theprocessingismorecomplex.
AnEcho-request ICMPmessagetriggersthe transmission of an ICMP Echo-reply message.
The other types of ICMP messages indicate an error that was causedbyapreviouslytransmittedpacket.
TheseICMPmessagesareusuallyforwardedtothetransportprotocol that sent the erroneous packet.
This can be done by inspecting the contents of the ICMP message that includes theheaderandtheﬁrst64bitsoftheerroneouspacket.
IftheIPpacketdidnotcontainoptions,whichisthecase for most IPv4 packets, the transport protocol can ﬁnd in the ﬁrst 32 bits of the transport header the source and destinationportstodeterminetheaffectedtransportﬂow.
ThisisimportantforPathMTUdiscoveryforexample.
WhenarouterreceivesanIPv4packet,itmustﬁrstcheckthepacket’schecksum.
Ifthechecksumisinvalid,itis discarded.
Otherwise,theroutermustcheckwhetherthedestinationaddressisoneoftheIPv4addressesassigned totherouter.
Ifso,theroutermustbehaveasahostandprocessthepacketasdescribedabove.
Althoughrouters mainly forward IPv4 packets, they sometimes need to be accessed as hosts by network operators or network managementsoftware.
Ifthepacketisnotaddressedtotherouter,itmustbeforwardedonanoutgoinginterfaceaccordingtotherouter’s routingtable.Therouterﬁrstdecrementsthepacket’sTTL.IftheTTLreaches0,aTTLExceededICMPmessageis sentbacktothesource.
Asthepacketheaderhasbeenmodiﬁed,thechecksummustberecomputed.
Fortunately, as IPv4 uses an arithmetic checksum, a router can incrementally update the packet’s checksum as described in RFC1624.
Then,therouterperformsalongestpreﬁxmatchforthepacket’sdestinationaddressinitsforwarding table.
If no match is found, the router must return a Destination unreachable ICMP message to the source.
Otherwise, the lookup returns the interface over which the packet must be forwarded.
Before forwarding the packet over this interface, the router must ﬁrst compare the length of the packet with the MTU of the outgoing interface.
If the packet is smaller than the MTU, it is forwarded.
Otherwise, a Fragmentation needed ICMP messageissentiftheDFﬂagwassentorthepacketisfragmentediftheDFwasnotset.
Note: LongestpreﬁxmatchinIProuters Performing the longest preﬁx match at line rate onrouters requires highly tuned data structures and algorithms.
ConsiderforexampleanimplementationofthelongestmatchbasedonaRadixtreeonarouterwitha10Gbps link.
Onsuchalink,aroutercanreceive31,250,00040bytesIPv4packetseverysecond.
Toforwardthepackets atlinerate,theroutermustprocessoneIPv4packetevery32nanoseconds.
Thiscannotbeachievedbyasoftware implementation.
Forahardwareimplementation,themaindifﬁcultyliesinthenumberofmemoryaccessesthat arenecessarytoperformthelongestpreﬁxmatch.32nanosecondsisverysmallcomparedtothememoryaccesses that are required by a naive longest preﬁx match implement.
Additional information about faster longest preﬁx matchalgorithmsmaybefoundin[Varghese2005].
5.2.3 IP version 6 Inthelate1980sandearly1990sthegrowthoftheInternetwascausingseveraloperationalproblemsonrouters.
ManyoftheseroutershadasingleCPUandupto1MByteofRAMtostoretheiroperatingsystem,packetbuffers androutingtables.
GiventherateofallocationofIPv4preﬁxestocompaniesanduniversitieswillingtojointhe Internet,theroutingtableswheregrowingveryquicklyandsomefearedthatallIPv4preﬁxeswouldquicklybe allocated.
In1987,astudycitedinRFC1752,estimatedthattherewouldbe100,000networksinthenearfuture.
In August 1990, estimates indicated that the class B space would be exhausted by March 1994.
Two types of 17Itshouldbenotedthatonlythepacketsthatcanbefragmented(i.e.whoseDFﬂagisreset)musthavedifferentIdentiﬁcationﬁelds.The IdentiﬁcationﬁeldisnotusedinthepacketshavingtheDFﬂagset.
5.2.
InternetProtocol 157 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 solutionweredevelopedtosolvethisproblem.
TheﬁrstshorttermsolutionwastheintroductionofClasslessInter DomainRouting(CIDR).AsecondshorttermsolutionwastheNetworkAddressTranslation(NAT)mechanism, deﬁnedinRFC1631.
NATallowedmultiplehoststoshareasinglepublicIPaddress, itisexplainedinsection Middleboxes.
However,inparallelwiththeseshort-termsolutions,whichhaveallowedtheIPv4Internettocontinuetobeusable untilnow,theInternetEngineeringTaskForcestartedtoworkondevelopingareplacementforIPv4.
Thiswork startedwithanopencallforproposals,outlinedinRFC1550.Severalgroupsrespondedtothiscallwithproposals foranextgenerationInternetProtocol(IPng): • TUBAproposedinRFC1347andRFC1561 • PIPproposedinRFC1621 • SIPPproposedinRFC1710 The IETFdecided to pursue thedevelopment of IPngbased on the SIPPproposal.
As IP version5 was already usedbytheexperimentalST-2protocoldeﬁnedinRFC1819,thesuccessorofIPversion4isIPversion6.
The initialIPversion6deﬁnedinRFC1752wasdesignedbasedonthefollowingassumptions: • IPv6addressesareencodedasa128bitsﬁeld • TheIPv6headerhasasimpleformatthatcaneasilybeparsedbyhardwaredevices • AhostshouldbeabletoconﬁgureitsIPv6addressautomatically • SecuritymustbepartofIPv6 Note: TheIPngaddresssize WhentheworkonIPngstarted,itwasclearthat32bitswastoosmalltoencodeanIPngaddressandallproposals used longer addresses.
However, there were many discussions about the most suitable address length.
A ﬁrst approach,proposedbySIPinRFC1710,wastouse64bitaddresses.
A64bitsaddressspacewas4billiontimes largerthantheIPv4addressspaceand,furthermore,fromanimplementationperspective,64bitCPUswerebeing consideredand64bitaddresseswouldnaturallyﬁtinsidetheirregisters.
Anotherapproachwastouseanexisting address format.
This was the TUBA proposal ( RFC 1347) that reuses the ISO CLNP 20 bytes addresses.
The 20bytesaddressesprovidedroomforgrowth,butusingISOCLNPwasnotfavoredbytheIETFpartiallydueto politicalreasons,despitethefactthatmatureCLNPimplementationswerealreadyavailable.
128bitsappearedto beareasonablecompromiseatthattime.
IPv6addressingarchitecture The experience of IPv4 revealed that the scalability of a network layer protocol heavily depends on its addressing architecture.
The designers of IPv6 spent a lot of effort deﬁning its address- ing architecture RFC 3513.
All IPv6 addresses are 128 bits wide.
This implies that there are 340,282,366,920,938,463,463,374,607,431,768,211,456(3.4×1038) different IPv6 addresses.
As the sur- face of the Earth is about 510,072,000 km2, this implies that there are about 6.67×1023 IPv6 addresses per squaremeteronEarth.
ComparedtoIPv4,whichoffersonly8addressespersquarekilometer,thisisasigniﬁcant improvementonpaper.
IPv6supportsunicast,multicastandanycastaddresses.
AswithIPv4,anIPv6unicastaddressisusedtoidentify onedatalink-layerinterfaceonahost.
Ifahosthasseveraldatalinklayerinterfaces(e.g.
anEthernetinterfaceand aWiFiinterface),thenitneedsseveralIPv6addresses.
Ingeneral,anIPv6unicastaddressisstructuredasshown intheﬁgurebelow.
AnIPv6unicastaddressiscomposedofthreeparts: 1.
AglobalroutingpreﬁxthatisassignedtotheInternetServiceProviderthatownsthisblockofaddresses 2.
AsubnetidentiﬁerthatidentiﬁesacustomeroftheISP 3.
Aninterfaceidentiﬁerthatidentiﬁesaparticularinterfaceonanendsystem 158 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.36: StructureofIPv6unicastaddresses In today’s deployments, interface identiﬁers are always 64 bits wide.
This implies that while there are 2128 differentIPv6addresses,theymustbegroupedin264subnets.
Thiscouldappearasawasteofresources,however using64bitsforthehostidentiﬁerallowsIPv6addressestobeauto-conﬁguredandalsoprovidessomebeneﬁts fromasecuritypointofview,asexplainedinsectionICMPv6 Note: TextualrepresentationofIPv6addresses ItissometimesnecessarytowriteIPv6addressesintextformat,e.g.
whenmanuallyconﬁguringaddressesorfor documentation purposes.
The preferred format for writing IPv6 addresses is x:x:x:x:x:x:x:x, where the x ‘s are hexadecimaldigitsrepresentingtheeight16-bitpartsoftheaddress.
HereareafewexamplesofIPv6addresses: • ABCD:EF01:2345:6789:ABCD:EF01:2345:6789 • 2001:DB8:0:0:8:800:200C:417A • FE80:0:0:0:219:E3FF:FED7:1204 IPv6addressesoftencontainalongsequenceofbitssetto0.
Inthiscase, acompactnotationhasbeendeﬁned.
Withthisnotation, :: isusedtoindicateoneormoregroupsof16bitsblockscontainingonlybitssetto0.
For example, • 2001:DB8:0:0:8:800:200C:417Aisrepresentedas2001:DB8::8:800:200C:417A • FF01:0:0:0:0:0:0:101isrepresentedasFF01::101 • 0:0:0:0:0:0:0:1isrepresentedas::1 • 0:0:0:0:0:0:0:0isrepresentedas:: AnIPv6preﬁxcanberepresentedasaddress/length,wherelengthisthelengthofthepreﬁxinbits.
Forexample, thethreenotationsbelowcorrespondtothesameIPv6preﬁx: • 2001:0DB8:0000:CD30:0000:0000:0000:0000/60 • 2001:0DB8::CD30:0:0:0:0/60 • 2001:0DB8:0:CD30::/60 In practice, there are several types of IPv6 unicast address.
Most of the IPv6 unicast addresses are allocated in blocks under the responsibility of IANA.
The current IPv6 allocations are part of the 2000::/3 address block.
RegionalInternetRegistries(RIR)suchasRIPEinEurope, ARINinNorth-AmericaorAfriNICinAfricahave eachreceivedablockofIPv6addressesthattheysub-allocatetoInternetServiceProvidersintheirregion.
The ISPsthensub-allocateaddressestotheircustomers.
WhenconsideringtheallocationofIPv6addresses,twotypesofaddressallocationsareoftendistinguished.
The RIRsallocateprovider-independent(PI)addresses.PIaddressesareusuallyallocatedtoInternetServiceProviders and large companies that are connected to at least two different ISPs [CSP2009].
Once a PI address block has beenallocatedtoacompany, thiscompanycanuseitsaddressblockwiththeproviderofitschoiceandchange itsprovideratwill.
InternetServiceProvidersallocateprovider-aggregatable(PA)addressblocksfromtheirown PIaddressblocktotheircustomers.
AcompanythatisconnectedtoonlyoneISPshouldonlyusePAaddresses.
5.2.
InternetProtocol 159 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 ThedrawbackofPAaddressesisthatwhenacompanyusingaPAaddressblockchangesitsprovider,itneedsto changealltheaddressesthatituses.Thiscanbeanightmarefromanoperationalperspectiveandmanycompanies arelobbyingtoobtainPIaddressblockseveniftheyaresmallandconnectedtoasingleprovider.
Thetypicalsize oftheIPv6addressblocksare: • /32foranInternetServiceProvider • /48forasinglecompany • /64forasingleuser(e.g.
ahomeuserconnectedviaADSL) • /128intherarecasewhenitisknownthatnomorethanoneendhostwillbeattached For the companies that want to use IPv6 without being connected to the IPv6 Internet, RFC 4193 deﬁnes the UniqueLocalUnicast(ULA)addresses(FC00::/7).
TheseULAaddressesplayasimilarroleastheprivateIPv4 addressesdeﬁnedinRFC1918.
However,thesizeoftheFC00::/7 addressblockallowsULAtobemuchmore ﬂexiblethanprivateIPv4addresses.
Furthermore,theIETFhasreservedsomeIPv6addressesforaspecialusage.
Thetwomostimportantonesare: • 0:0:0:0:0:0:0:1(::1incompactform)istheIPv6loopbackaddress.Thisistheaddressofalogicalinterface thatisalwaysupandrunningonIPv6enabledhosts.
Thisistheequivalentof127.0.0.1inIPv4.
• 0:0:0:0:0:0:0:0(:: incompactform)istheunspeciﬁedIPv6address.
ThisistheIPv6addressthatahost canuseassourceaddresswhentryingtoacquireanofﬁcialaddress.
The last type of unicast IPv6 addresses are the Link Local Unicast addresses.
These addresses are part of the FE80::/10 address block and are deﬁned in RFC 4291.
Each host can compute its own link local address by concatenating the FE80::/64 preﬁx with the 64 bits identiﬁer of its interface.
Link local addresses can be used when hosts that are attached to the same link (or local area network) need to exchange packets.
They are used notablyforaddressdiscoveryandauto-conﬁgurationpurposes.
Theirusageisrestrictedtoeachlinkandarouter cannotforwardapacketwhosesourceordestinationaddressisalinklocaladdress.Linklocaladdresseshavealso beendeﬁnedforIPv4RFC3927.
However,theIPv4linklocaladdressesareonlyusedwhenahostcannotobtain aregularIPv4address,e.g.
onanisolatedLAN.
Figure5.37: IPv6linklocaladdressstructure AnimportantconsequenceoftheIPv6unicastaddressingarchitectureandtheutilisationoflink-localaddressesis thatanIPv6hosthasseveralIPv6addresses.
ThisimpliesthatanIPv6stackmustbeabletohandlemultipleIPv6 addresses.
ThiswasnotalwaysthecasewithIPv4.
RFC4291deﬁnesaspecialtypeofIPv6anycastaddress.
Onasubnetworkhavingpreﬁxp/n, theIPv6address whose 128-n low-order bits are set to 0 is the anycast address that corresponds to all routers inside this subnet- work.
Thisanycastaddresscanbeusedbyhoststoquicklysendapackettoanyoftheroutersinsidetheirown subnetwork.
Finally,RFC4291deﬁnesthestructureoftheIPv6multicastaddresses18.
Thisstructureisdepictedintheﬁgure below Theloworder112bitsofanIPv6multicastaddressarethegroup’sidentiﬁer.
Thehighorderbitsareusedasa markertodistinguishmulticastaddressesfromunicastaddresses.
Notably,the4bitsﬂagﬁeldindicateswhether the address is temporary or permanent.
Finally, the scope ﬁeld indicates the boundaries of the forwarding of packets destined to a particular address.
A link-local scope indicates that a router should not forward a packet destinedtosuchamulticastaddress.
Anorganisationlocal-scopeindicatesthatapacketsenttosuchamulticast destination address should not leave the organisation.
Finally the global scope is intended for multicast groups spanningtheglobalInternet.
18ThefulllistofallocatedIPv6multicastaddressesisavailableathttp://www.iana.org/assignments/ipv6-multicast-addresses 160 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.38: IPv6multicastaddressstructure Amongtheseaddresses,somearewellknown.
Forexample,allendsystemautomaticallybelongtotheFF02::1 multicastgroupwhileallroutersautomaticallybelongtotheFF02::2multicastgroup.
WediscussIPv6multicast later.
IPv6packetformat TheIPv6packetformatwasheavilyinspiredbythepacketformatproposedfortheSIPPprotocolinRFC1710.
ThestandardIPv6headerdeﬁnedinRFC2460occupies40bytesandcontains8differentﬁelds,asshowninthe ﬁgurebelow.
Figure5.39: TheIPversion6header(RFC2460) Apartfromthesourceanddestinationaddresses,theIPv6headercontainsthefollowingﬁelds: • version: a4bitsﬁeldsetto6andintendedtoallowIPtoevolveinthefutureifneeded • Trafﬁcclass: this8bitsﬁeldplaysasimilarroleastheDSbyteintheIPv4header • Flowlabel: thisﬁeldwasinitiallyintendedtobeusedtotagpacketsbelongingtothesameﬂow.
However, asofthiswriting,thereisnoclearguidelineonhowthisﬁeldshouldbeusedbyhostsandrouters • Payloadlength: thisisthesizeofthepacketpayloadinbytes.
Asthelengthisencodedasa16bitsﬁeld, anIPv6packetcancontainupto65535bytesofpayload.
• Next Header : this 8 bits ﬁeld indicates the type 19 of header that follows the IPv6 header.
It can be a transportlayerheader(e.g.
6forTCPor17forUDP)oranIPv6option.
Handlingoptionsasanextheader allowssimplifyingtheprocessingofIPv6packetscomparedtoIPv4.
19TheIANAmaintainsthelistofallallocatedNextHeadertypesathttp://www.iana.org/assignments/protocol-numbers/Thesameregistry isusedfortheIPv4protocolﬁeldandfortheIPv6NextHeader.
5.2.
InternetProtocol 161 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • HopLimit: this8bitsﬁeldindicatesthenumberofroutersthatcanforwardthepacket.
Itisdecremented byonebyeachrouterandhasthesamepurposeastheTTLﬁeldoftheIPv4header.
IncomparisonwithIPv4, theIPv6packetsaremuchsimplerandeasiertoprocessbyrouters.
Aﬁrstimportant difference is that there is no checksum inside the IPv6 header.
This is mainly because all datalink layers and transport protocols include a checksum or a CRC to protect their frames/segments against transmission errors.
AddingachecksumintheIPv6headerwouldhaveforcedeachroutertorecomputethechecksumofallpackets, withlimitedbeneﬁtindetectingerrors.
Inpractice, anIPchecksumallowsforcatchingerrorsthatoccurinside routers(e.g.
duetomemorycorruption)beforethepacketreachesitsdestination.
However,thisbeneﬁtwasfound tobetoosmallgiventhereliabilityofcurrentmemoriesandthecostofcomputingthechecksumoneachrouter.
AseconddifferencewithIPv4isthattheIPv6headerdoesnotsupportfragmentationandreassembly.
Experience withIPv4hasshownthatfragmentingpacketsinrouterswascostly[KM1995]andthedevelopersofIPv6have decided that routers would not fragment packets anymore.
If a router receives a packet that is too long to be forwarded,thepacketisdroppedandtherouterreturnsanICMPv6messagestoinformthesenderoftheproblem.
ThesendercantheneitherfragmentthepacketorperformPathMTUdiscovery.
InIPv6,packetfragmentationis performedonlybythesourcebyusingIPv6options.
ThethirddifferencearetheIPv6options,whicharesimplerandeasiertoprocessthantheIPv4options.
Note: Headercompressiononlowbandwidthlinks Given the size of the IPv6 header, it can cause huge overhead on low bandwidth links, especially when small packets are exchanged such as for Voice over IP applications.
In such environments, several techniques can be usedtoreducetheoverhead.
Aﬁrstsolutionistousedatacompressioninthedatalinklayertocompressallthe informationexchanged[Thomborson1992].
Thesetechniquesaresimilartothedatacompressionalgorithmsused intoolssuchascompress(1)orgzip(1)RFC1951.Theycompressstreamsofbitswithouttakingadvantage ofthefactthatthesestreamscontainIPpacketswithaknownstructure.
AsecondsolutionistocompresstheIP andTCPheader.
Theseheadercompressiontechniques,suchastheonedeﬁnedinRFC2507takeadvantageof the redundancy found in successive packets from the same ﬂow to signiﬁcantly reduce the size of the protocol headers.
AnothersolutionistodeﬁneacompressedencodingoftheIPv6headerthatmatchesthecapabilitiesof theunderlyingdatalinklayerRFC4944.
IPv6options InIPv6,eachoptionisconsideredasoneheadercontainingamultipleof8bytestoensurethatIPv6optionsina packetarealignedon64bitboundaries.
IPv6deﬁnesseveraltypeofoptions: • thehop-by-hopoptionsareoptionsthatmustbeprocessedbytheroutersonthepacket’spath • thetype0routingheader,whichissimilartotheIPv4loosesourceroutingoption • thefragmentationoption,whichisusedwhenfragmentinganIPv6packet • thedestinationoptions • the security options that allow IPv6 hosts to exchange packets with cryptographic authentication (AH header)orencryptionandauthentication(ESPheader) RFC2460provideslotsofdetailontheencodingsofthedifferenttypesofoptions.
Inthissection,weonlydiscus someofthem.
ThereadermayconsultRFC2460formoreinformationabouttheotheroptions.
Theﬁrstpointto noteisthateachoptioncontainsaNextHeader ﬁeld,whichindicatesthetypeofheaderthatfollowstheoption.
AsecondpointtonoteisthatinordertoallowrouterstoefﬁcientlyparseIPv6packets,theoptionsthatmustbe processedbyrouters(hop-by-hopoptionsandtype0routingheader)mustappearﬁrstinthepacket.
Thisallows the router to process a packet without being forced to analyse all the packet’s options.
A third point to note is thathop-by-hopanddestinationoptionsareencodedusingatypelengthvalueformat.
Furthermore,thetypeﬁeld containsbitsthatindicatewhetherarouterthatdoesnotunderstandthisoptionshouldignoretheoptionordiscard thepacket.Thisallowstheintroductionofnewoptionsintothenetworkwithoutforcingalldevicestobeupgraded tosupportthematthesametime.
Two hop-by-hop options have been deﬁned.
RFC 2675 speciﬁes the jumbogram that enables IPv6 to support packetscontainingapayloadlargerthan65535bytes.
Thesejumbopacketshavetheirpayloadlengthsetto0and 162 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 thejumbogramoptioncontainsthepacketlengthasa32bitsﬁeld.
Suchpacketscanonlybesentfromasource toadestinationifalltheroutersonthepathsupportthisoption.
However,asofthiswritingitdoesnotseemthat thejumbogramoptionhasbeenimplemented.
TherouteralertoptiondeﬁnedinRFC2711isthesecondexample ofahop-by-hopoption.
Thepacketsthatcontainthisoptionshouldbeprocessedinaspecialwaybyintermediate routers.
ThisoptionisusedforIPpacketsthatcarryResourceReservationProtocol(RSVP)messages.
Itsusage isexplainedlater.
Thetype0routingheaderdeﬁnedinRFC2460isanexampleofanIPv6optionthatmustbeprocessedbysome routers.
Thisoptionisencodedasshownbelow.
Figure5.40: TheType0routingheader(RFC2460) Thetype0routingoptionwasintendedtoallowahosttoindicatealoosesourceroutethatshouldbefollowedby apacketbyspecifyingtheaddressesofsomeoftheroutersthatmustforwardthispacket.
Unfortunately,further work with this routing header, including an entertaining demonstration with scapy [BE2007] , revealed some severe security problems with this routing header.
For this reason, loose source routing with the type 0 routing headerhasbeenremovedfromtheIPv6speciﬁcationRFC5095.
InIPv6,fragmentationisperformedexclusivelybythesourcehostandreliesonthefragmentationheader.
This 64bitsheaderiscomposedofsixﬁelds: • aNextHeaderﬁeldthatindicatesthetypeoftheheaderthatfollowsthefragmentationheader • areservedﬁeldsetto0.
• theFragmentOffsetisa13-bitunsignedintegerthatcontainstheoffset,in8bytesunits,ofthedatafollowing thisheader,relativetothestartoftheoriginalpacket.
• theMoreﬂag,whichissetto0inthelastfragmentofapacketandto1inallotherfragments.
• the 32 bits Identiﬁcation ﬁeld indicates to which original packet a fragment belongs.
When a host sends fragmentedpackets, itshouldensurethatitdoesnotreusethesameidentiﬁcationﬁeldforpacketssentto thesamedestinationduringaperiodofMSLseconds.
Thisiseasierwiththe32bitsidentiﬁcationusedin theIPv6fragmentationheader,thanwiththe16bitsidentiﬁcationﬁeldoftheIPv4header.
SomeIPv6implementationssendthefragmentsofapacketinincreasingfragmentoffsetorder,startingfromthe ﬁrstfragment.
Otherssendthefragmentsinreverseorder,startingfromthelastfragment.
Thelattersolutioncan beadvantageousforthehostthatneedstoreassemblethefragments,asitcaneasilyallocatethebufferrequiredto 5.2.
InternetProtocol 163 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 reassembleallfragmentsofthepacketuponreceptionofthelastfragment.Whenahostreceivestheﬁrstfragment ofanIPv6packet,itcannotknowapriorithelengthoftheentireIPv6packet.
TheﬁgurebelowprovidesanexampleofafragmentedIPv6packetcontainingaUDPsegment.
TheNextHeader typereservedfortheIPv6fragmentationoptionis44.
Figure5.41: IPv6fragmentationexample Finally, thelasttypeofIPv6optionsistheEncaspulatingSecurityPayload(ESP)deﬁnedinRFC4303andthe AuthenticationHeader(AH)deﬁnedinRFC4302.
These twoheadersareusedbyIPSecRFC4301.
Theyare discussedinanotherchapter.
5.2.4 ICMP version 6 ICMPv6deﬁnedinRFC4443isthecompanionprotocolforIPv6asICMPv4isthecompanionprotocolforIPv4.
ICMPv6isusedbyroutersandhoststoreportproblemswhenprocessingIPv6packets.However,aswewillseein chapterThedatalinklayerandtheLocalAreaNetworks,ICMPv6isalsousedwhenauto-conﬁguringaddresses.
The traditional utilisation of ICMPv6 is similar to ICMPv4.
ICMPv6 messages are carried inside IPv6 packets (theNextHeaderﬁeldforICMPv6is58).
EachICMPmessagecontainsan8bitsheaderwithatypeﬁeld,acode ﬁeldanda16bitschecksumcomputedovertheentireICMPv6message.
Themessagebodycontainsacopyof theIPv6packetinerror.
Figure5.42: ICMPversion6packetformat ICMPv6 speciﬁes two classes of messages : error messages that indicate a problem in handling a packet and informationalmessages.
FourtypesoferrormessagesaredeﬁnedinRFC4443: • 1 [Destination Unreachable.
Such an ICMPv6 message is sent when the destination address of a packet isunreachable.
ThecodeﬁeldoftheICMPheadercontainsadditionalinformationaboutthetypeof unreachability.
ThefollowingcodesarespeciﬁedinRFC4443] – 0: Noroutetodestination.
ThisindicatesthattherouterthatsenttheICMPv6messagedidnot havearoutetowardsthepacket’sdestination 164 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 – 1:Communicationwithdestinationadministrativelyprohibited.
Thisindicatesthataﬁrewallhas refusedtoforwardthepackettowardsitsdestination.
– 2 : Beyond scope of source address.
This message can be sent if the source is using link-local addressestoreachaglobalunicastaddressoutsideitssubnet.
– 3: Addressunreachable.
Thismessageindicatesthatthepacketreachedthesubnetofthedesti- nation,butthehostthatownsthisdestinationaddresscannotbereached.
– 4:Portunreachable.ThismessageindicatesthattheIPv6packetwasreceivedbythedestination, buttherewasnoapplicationlisteningtothespeciﬁedport.
• 2: PacketTooBig.
TherouterthatwastosendtheICMPv6messagereceivedanIPv6packetthatislarger than the MTU of the outgoing link.
The ICMPv6 message contains the MTU of this link in bytes.
This allowsthesendinghosttoimplementPathMTUdiscoveryRFC1981 • 3: TimeExceeded.
Thiserrormessagecanbesenteitherbyarouterorbyahost.
Arouterwouldsetcode to0toreportthereceptionofapacketwhoseHopLimitreached0.
Ahostwouldsetcodeto1toreportthat itwasunabletoreassemblereceivedIPv6fragments.
• 4: ParameterProblem.
ThisICMPv6messageisusedtoreporteitherthereceptionofanIPv6packetwith anerroneousheaderﬁeld(type0)oranunknownNextHeaderorIPoption(types1and2).
Inthiscase,the messagebodycontainstheerroneousIPv6packetandtheﬁrst32bitsofthemessagebodycontainapointer totheerror.
TwotypesofinformationalICMPv6messagesaredeﬁnedinRFC4443: echorequestandechoreply,whichare usedtotestthereachabilityofadestinationbyusingping6(8).
ICMPv6alsoallowsthediscoveryofthepathbetweenasourceandadestinationbyusingtraceroute6(8).
The output below shows a traceroute between a host at UCLouvain and one of the main IETF servers.
Note that this IPv6 path is different than the IPv4 path that was described earlier although the two traceroutes were performedatthesametime.
traceroute6 www.ietf.org traceroute6 to www.ietf.org (2001:1890:1112:1::20) from 2001:6a8:3080:2:217:f2ff:fed6:65c0, 30 hops max, 12 byte packets 1 2001:6a8:3080:2::1 13.821 ms 0.301 ms 0.324 ms 2 2001:6a8:3000:8000::1 0.651 ms 0.51 ms 0.495 ms 3 10ge.cr2.bruvil.belnet.net 3.402 ms 3.34 ms 3.33 ms 4 10ge.cr2.brueve.belnet.net 3.668 ms 10ge.cr2.brueve.belnet.net 3.988 ms 10ge.cr2.brueve.belnet.net 3.699 ms 5 belnet.rt1.ams.nl.geant2.net 10.598 ms 7.214 ms 10.082 ms 6 so-7-0-0.rt2.cop.dk.geant2.net 20.19 ms 20.002 ms 20.064 ms 7 kbn-ipv6-b1.ipv6.telia.net 21.078 ms 20.868 ms 20.864 ms 8 s-ipv6-b1-link.ipv6.telia.net 31.312 ms 31.113 ms 31.411 ms 9 s-ipv6-b1-link.ipv6.telia.net 61.986 ms 61.988 ms 61.994 ms 10 2001:1890:61:8909::1 121.716 ms 121.779 ms 121.177 ms 11 2001:1890:61:9117::2 203.709 ms 203.305 ms 203.07 ms 12 mail.ietf.org 204.172 ms 203.755 ms 203.748 ms Note: RatelimitationofICMPmessages High-end hardware based routers use special purpose chips on their interfaces to forward IPv6 packets at line rate.
ThesechipsareoptimisedtoprocesscorrectIPpackets.
TheyarenotabletocreateICMPmessagesatline rate.
When such a chip receives an IP packet that triggers an ICMP message, it interrupts the main CPU of the routerandthesoftwarerunningonthisCPUprocessesthepacket.
ThisCPUismuchslowerthanthehardware accelerationfoundontheinterfaces[Gill2004].
ItwouldbeoverloadedifithadtoprocessIPpacketsatlinerate andgenerateoneICMPmessageforeachreceivedpacket.
ToprotectthisCPU,high-endrouterslimittherateat whichthehardwarecaninterruptthemainCPUandthustherateatwhichICMPmessagescanbegenerated.
This impliesthatnotallerroneousIPpacketscausethetransmissionofanICMPmessage.
Theriskofoverloadingthe mainCPUoftherouterisalsothereasonwhyusinghop-by-hopIPv6options,includingtherouteralteroptionis discouraged20.
20ForadiscussionoftheissueswiththerouteralertIPoption,seehttp://tools.ietf.org/html/draft-rahman-rtg-router-alert-dangerous-00or http://tools.ietf.org/html/draft-rahman-rtg-router-alert-considerations-03 5.2.
InternetProtocol 165 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 InteractionsbetweenIPv6andthedatalinklayer ThereareseveraldifferencesbetweenIPv6andIPv4whenconsideringtheirinteractionswiththedatalinklayer.
InIPv6,theinteractionsbetweenthenetworkandthedatalinklayerisperformedusingICMPv6.
First ICMPv6 is used to resolve the datalink layer address that corresponds to a given IPv6 address.
This part ofICMPv6istheNeighbourDiscoveryProtocol(NDP)deﬁnedinRFC4861.
NDPissimilartoARP,butthere are two important differences.
First, NDP messages are exchanged in ICMPv6 messages while ARP messages aresentasdatalinklayerframes.
Second,anARPrequestissentasabroadcastframewhileanNDPsolicitation messageissentasamulticastICMPv6packetthatistransportedinsideamulticastframe.
Theoperationofthe NDPprotocolissimilartoARP.Toobtainanaddressmapping, ahostsendsaNeighbourSolicitationmessage.
This message is sent inside an ICMPv6 message that is placed in an IPv6 packet whose source address is the IPv6addressoftherequestinghostandthedestinationaddressistheall-hostsIPv6multicastaddress(FF02::1) towhichallIPv6hostslisten.
TheNeighbourSolicitationcontainstherequestedIPv6address.
Theownerofthe requested address replies by sending a unicast Neighbour Advertisement message to the requesting host.
NDP suffers from similar security issues as the ARP protocol.
However, it is possible to secure NDP by using the Cryptographically Generated IPv6 Addresses (CGA) deﬁned in RFC 3972.
The Secure Neighbour Discovery ProtocolisdeﬁnedinRFC3971,butadetaileddescriptionofthisprotocolisoutsidethescopeofthischapter.
IPv6networksalsosupporttheDynamicHostConﬁgurationProtocol.
TheIPv6extensionstoDHCParedeﬁned inRFC3315.
TheoperationofDHCPv6issimilartoDHCPthatwasdescribedearlier.
InadditiontoDHCPv6, IPv6networkssupportanothermechanismtoassignIPv6addressestohosts.ThisistheStatelessAddressConﬁg- uration(SLAC)deﬁnedinRFC4862.
Whenahostboots,itderivesitsidentiﬁerfromitsdatalinklayeraddress21 andconcatenatesthis64bitsidentiﬁertotheFE80::/64preﬁxtoobtainitslink-localIPv6address.
Itthensends a Neighbour Solicitation with its link-local address as a target to verify whether another host is using the same link-localaddressonthissubnet.
IfitreceivesaNeighbourAdvertisementindicatingthatthelink-localaddress isusedbyanotherhost,itgeneratesanother64bitsidentiﬁerandsendsagainaNeighbourSolicitation.
Ifthereis noanswer,thehostconsidersitslink-localaddresstobevalid.
Thisaddresswillbeusedasthesourceaddressfor allNDPmessagessentonthesubnet.
ToautomaticallyconﬁgureitsglobalIPv6address,thehostmustknowthe globallyroutableIPv6preﬁxthatisusedonthelocalsubnet.
IPv6routersregularlysendICMPv6RouterAdver- tisementmessagesthatindicatetheIPv6preﬁxassignedtoeachsubnet.
Uponreceptionofthismessage,thehost canderiveitsglobalIPv6addressbyconcatenatingits64bitsidentiﬁerwiththereceivedpreﬁx.
Itconcludesthe SLACbysendingaNeighbourSolicitationmessagetargetedatitsglobalIPv6addresstoensurethatanotherhost isnotusingthesameIPv6address.
5.2.5 Middleboxes When the TCP/IP architecture and the IP protocol were deﬁned, two type of devices were considered in the network layer : endhosts and routers.
Endhosts are the sources and destinations of IP packets while routers forwardpackets.
WhenarouterforwardsanIPpacket,itconsultsitsforwardingtable,updatesthepacket’sTTL, recomputesitschecksumandforwardsittothenexthop.
Arouterdoesnotneedtoreadorchangethecontentsof thepacket’spayload.
However,intoday’sInternet,thereexistdevicesthatarenotstrictlyroutersbutwhichprocess,sometimesmodify, andforwardIPpackets.
ThesedevicesareoftencalledmiddleboxesRFC3234.
Somemiddleboxesonlyoperate inthenetworklayer,butmostmiddleboxesareabletoanalysethepayloadofthereceivedpacketsandextractthe transportheader,andinsomecasestheapplicationlayerprotocols.
In this section, we brieﬂy describe two type of middleboxes : ﬁrewalls and network address translation (NAT) devices.
AdiscussionofthedifferenttypesofmiddleboxeswithreferencesmaybefoundinRFC3234.
Firewalls When the Internet was only a research network interconnecting research labs, security was not a concern, and mosthostsagreedtoexchangepacketsoverTCPconnectionswithmostotherhosts.
However,asmoreandmore 21 Usingadatalinklayeraddresstoderivea64bitsidentiﬁerforeachhostraisesprivacyconcernsasthehostwillalwaysusethesame identiﬁer.AttackerscouldusethistotrackhostsontheInternet.AnextensiontotheStatelessAddressConﬁgurationmechanismthatdoesnot raiseprivacyconcernsisdeﬁnedinRFC4941.Theseprivacyextensionsallowahosttogenerateits64bitsidentiﬁerrandomlyeverytimeit attachestoasubnet.Itthenbecomesimpossibleforanattackertousethe64-bitsidentiﬁertotrackahost.
166 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.43: IPmiddleboxesandthereferencemodel users and companies became connected to the Internet, allowing unlimited access to hosts that they managed startedtoconcerncompanies.
Furthermore,attheendofthe1980s,severalsecurityissuesaffectedtheInternet, such as the ﬁrst Internet worm [RE1989] and some widely publicised security breaches [Stoll1988] [CB2003] [Cheswick1990].
ThesesecurityproblemsconvincedtheindustrythatIPnetworksareakeypartofacompany’sinfrastructure,that shouldbeprotectedbyspecialdeviceslikesecurityguardsandfencesareusedtoprotectbuildings.
Thesespecial deviceswerequicklycalledﬁrewalls.
Atypicalﬁrewallhastwointerfaces: • anexternalinterfaceconnectedtotheglobalInternet • aninternalinterfaceconnectedtoatrustednetwork Theﬁrstﬁrewallsincludedconﬁgurablepacketﬁlters.
Apacketﬁlterisasetofrulesdeﬁningthesecuritypolicy of a network.
In practice, these rules are based on the values of ﬁelds in the IP or transport layer headers.
Any ﬁeldoftheIPortransportheadercanbeusedinaﬁrewallrule,butthemostcommononesare: • ﬁlteronthesourceaddress.
Forexample,acompanymaydecidetodiscardallpacketsreceivedfromone ofitscompetitors.
Inthiscase,allpacketswhosesourceaddressbelongtothecompetitor’saddressblock wouldberejected • ﬁlterondestinationaddress.
Forexample,thehostsoftheresearchlabofacompanymayreceivepackets fromtheglobalInternet,butnotthehostsoftheﬁnancialdepartment • ﬁlterontheProtocolnumberfoundintheIPheader.
Forexample,acompanymayonlyallowitshoststo useTCPorUDP,butnotother,moreexperimental,transportprotocols • ﬁlterontheTCPorUDPportnumbers.
Forexample,onlytheDNSserverofacompanyshouldreceived UDP segments whose destination port is set to 53 or only the ofﬁcial SMTP servers of the company can sendTCPsegmentswhosesourceportsaresetto25 • ﬁlter on the TCP ﬂags.
For example, a simple solution to prohibit external hosts from opening TCP con- nectionswithhostsinsidethecompanyistodiscardallTCPsegmentsreceivedfromtheexternalinterface withonlytheSYN ﬂagset.
SuchﬁrewallsareoftencalledstatelessﬁrewallsbecausetheydonotmaintainanystateabouttheTCPconnections thatpassthroughthem.
Anothertypeofﬁrewallsarestatefulﬁrewalls.
AstatefulﬁrewalltracksthestateofeachTCPconnectionpassing throughitandmaintainsaTCBforeachoftheseTCPconnection.
ThisTCBallowsittoreassemblethereceived segments in order to extract their payload and perform veriﬁcations in the application layer.
Some ﬁrewalls are able to inspect the URLs accessed using HTTP and log all URLs visited or block TCP connections where a dangerousURLisexchanged.
SomeﬁrewallscanverifythatSMTPcommandsareusedwhenaTCPconnection isestablishedonport25orthataTCPconnectiononport80carriesHTTPcommandsandresponses.
Note: Beyondﬁrewalls Apart from ﬁrewalls, different types of “security” devices have been installed at the periphery of corporate net- works.
Intrusion Detection Systems (IDS), such as the popular snort , are stateful devices that are capable of matching reassembled segments against regular expressions corresponding to signatures of viruses, worms or othertypesofattacks.
DeepPacketInspection(DPI)isanothertypeofmiddleboxthatanalysesthepacket’spay- loadandisabletoreassembleTCPsegmentsinordertodetectinappropriateusages.
WhileIDSaremainlyused incorporatenetworks, DPIismainlyusedinInternetServiceProviders.
SomeISPsuseDPItodetectandlimit 5.2.
InternetProtocol 167 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 the bandwidth consumed by peer-to-peer applications.
Some countries such as China or Iran use DPI to detect inappropriateInternetusage.
NAT Network Address Translation (NAT) was proposed in [TE1993] and RFC 3022 as a short term solution to deal withtheexpectedshortageofIPv4addressesinthelate1980s-early1990s.
CombinedwithCIDR,NAThelped to signiﬁcantly slow down the consumption of IPv4 addresses.
A NAT is a middlebox that interconnects two networksthatareusingIPv4addressesfromdifferentaddressingspaces.
Usually,oneoftheseaddressingspaces isthepublicInternetwhiletheotherisusingtheprivateIPv4addressesdeﬁnedinRFC1918.
AverycommondeploymentofNATisinbroadbandaccessroutersasshownintheﬁgurebelow.
Thebroadband access router interconnects a home network, either WiFi or Ethernet based, and the global Internet via one ISP over ADSL or CATV.
A single IPv4 address is allocated to the broadband access router and network address translationallowsallofthehostsattachedtothehomenetworktoshareasinglepublicIPv4address.
Figure5.44: AsimpleNATwithonepublicIPv4address A second type of deployment is in enterprise networks as shown in the ﬁgure below.
In this case, the NAT functionalityisinstalledonaborderrouteroftheenterprise.
AprivateIPv4addressisassignedtoeachenterprise hostwhiletheborderroutermanagesapoolcontainingseveralpublicIPv4addresses.
Figure5.45: AnenterpriseNATwithseveralpublicIPv4addresses Asthenameimplies,aNATisadevicethat“translates”IPaddresses.
ANATmaintainsamappingtablebetween theprivateIPaddressesusedintheinternalnetworkandthepublicIPv4addresses.
NATallowsalargenumberof hoststoshareapoolofIPaddresses,asthesehostsdonotallaccesstheglobalInternetatthesametime.
The simplest NAT is a middlebox that uses a one-to-one mapping between a private IP address and a public IP address.
To understand its operation, let us assume that a NAT, such as the one shown above, has just booted.
When the NAT receives the ﬁrst packet from source S in the internal network which is destined to the public Internet,itcreatesamappingbetweeninternaladdressSandtheﬁrstaddressofitspoolofpublicaddresses(P1).
Then,ittranslatesthereceivedpacketsothatitcanbesenttothepublicInternet.
Thistranslationisperformedas followed: 168 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • thesourceaddressofthepacket(S)isreplacedbythemappedpublicaddress(P1) • thechecksumoftheIPheaderisincrementallyupdatedasitscontenthaschanged • ifthepacketcarriedaTCPorUDPsegment, thetransportlayerchecksumfoundintheincludedsegment mustalsobeupdatedasitiscomputedoverthesegmentandapseudo-headerthatincludesthesourceand destinationaddresses WhenapacketdestinedtoP1isreceivedfromthepublicInternet,theNATconsultsitsmappingtabletoﬁndS.
Thereceivedpacketistranslatedandforwardedintheinternalnetwork.
ThisworksaslongasthepoolofpublicIPaddressesoftheNATdoesnotbecomeempty.
Inthiscase,amapping must be removed from the mapping table to allow a packet from a new host to be translated.
This garbage collection can be implemented by adding to each entry in the mapping table a timestamp that contains the last utilisationtimeofamappingentry.
Thistimestampisupdatedeachtimethecorrespondingentryisused.
Then, thegarbagecollectionalgorithmcanremovetheoldestmappingentryinthetable.
AdrawbackofsuchasimpleenterpriseNATisthesizeofthepoolofpublicIPv4addresseswhichisoftentoo small to allow a large number of hosts share such a NAT.
In this case, a better solution is to allow the NAT to translatebothIPaddressesandportnumbers.
Such a NAT maintains a mapping table that maps an internal IP address and TCP port number with an external IP address and TCP port number.
When such a NAT receives a packet from the internal network, it performs a lookup in the mapping table with the packet’s source IP address and source TCP port number.
If a mapping is found, thesourceIPaddressandthesourceTCPportnumberofthepacketaretranslatedwiththevaluesfound in the mapping table, the checksums are updated and the packet is sent to the global Internet.
If no mapping is found,anewmappingiscreatedwiththeﬁrstavailablecouple(IPaddress,TCPportnumber)andthepacketis translated.
TheentriesofthemappingtableareeitherremovedattheendofthecorrespondingTCPconnection astheNATtracksTCPconnectionstatelikeastatefulﬁrewalloraftersomeidletime.
WhensuchaNATreceivesapacketfromtheglobalInternet,itlooksupitsmappingtableforthepacket’sdesti- nationIPaddressanddestinationTCPportnumber.
Ifamappingisfound,thepacketistranslatedandforwarded into the internal network.
Otherwise, the packet is discarded as the NAT cannot determine to which particular internalhostthepacketshouldbeforwarded.
Forthisreason, With216 differentportnumbers, aNATmaysupportalargenumberofhostswithasinglepublicIPv4address.
However, it should be noted that some applications open a large number of TCP connections [Miyakawa2008].
EachoftheseTCPconnectionsconsumesonemappingentryintheNAT’smappingtable.
NAT allows many hosts to share one or a few public IPv4 addresses.
However, using NAT has two important drawbacks.
First,itisdifﬁcultforexternalhoststoopenTCPconnectionswithhoststhatarebehindaNAT.Some considerthistobeabeneﬁtfromasecurityperspective.
However,aNATshouldnotbeconfusedwithaﬁrewall astherearesometechniquestotraverseNATs.
Second,NATbreakstheend-to-endtransparencyofthenetwork and transport layers.
The main problem is when an application layer protocol uses IP addresses in some of the ADUsthatitsends.
ApopularexampleisftpdeﬁnedinRFC959.
Inthiscase,thereisamismatchbetweenthe packetheadertranslatedbytheNATandthepacketpayload.
Theonlysolutiontosolvethisproblemistoplace an Application Level Gateway (ALG) on the NAT that understands the application layer protocol and can thus translatetheIPaddressesandportnumbersfoundintheADUs.
However,deﬁninganALGforeachapplication iscostlyandapplicationdevelopersshouldavoidusingIPaddressesinthemessagesexchangedintheapplication layerRFC3235.
Note: IPv6andNAT NAThasbeenverysuccessfulwithIPv4.GiventhesizeoftheIPv6addressingspace,theIPv6designersexpected thatNATwouldneverbeusefulwithIPv6.
Theend-to-endtransparencyofIPv6hasbeenoneofitskeyselling pointscomparedtoIPv4.However,theexpectedshortageofIPv4addressesleadenterprisenetworkadministrators toconsiderIPv6moreseriously.OneoftheresultsofthisanalysisisthattheIETFdeﬁnedNATdevices[WB2008] that are IPv6 speciﬁc.
Another usage of NAT with IPv6 is to allow IPv6 hosts to access IPv4 destinations and conversely.
TheearlyIPv6speciﬁcationsincludedtheNetworkAddressTranslation-ProtocolTranslation(NAT- PT)mechanismdeﬁnedinRFC2766.
ThismechanismwaslaterdeprecatedinRFC4966buthasbeenrecently restartedunderthenameNAT64[BMvB2009].
ANAT64isamiddleboxthatperformstheIPv6<->IPv4packet translationtoallowIPv6hoststocontactIPv4serversRFC6144.
5.2.
InternetProtocol 169 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 5.3 Routing in IP networks In a large IP network such as the global Internet, routers need to exchange routing information.
The Internet is aninterconnectionofnetworks,oftencalleddomains,thatareunderdifferentresponsibilities.
Asofthiswriting, theInternetiscomposedonmorethan30,000differentdomainsandthisnumberisstillgrowing.
Adomaincan be a small enterprise that manages a few routers in a single building, a larger enterprise with a hundred routers atmultiplelocations,oralargeInternetServiceProvidermanagingthousandsofrouters.
Twoclassesofrouting protocolsareusedtoallowthesedomainstoefﬁcientlyexchangeroutinginformation.
Figure5.46: OrganisationofasmallInternet Theﬁrstclassofroutingprotocolsaretheintradomainroutingprotocols(sometimesalsocalledtheinteriorgate- wayprotocolsorIGP).Anintradomainroutingprotocolisusedbyallroutersinsideadomaintoexchangerouting information about the destinations that are reachable inside the domain.
There are several intradomain routing protocols.
SomedomainsuseRIP,whichisadistancevectorprotocol.
Otherdomainsuselink-stateroutingpro- tocolssuchasOSPF orIS-IS.Finally,somedomainsusestaticroutingorproprietaryprotocolssuchasIGRPor EIGRP.
These intradomain routing protocols usually have two objectives.
First, they distribute routing information that corresponds to the shortest path between two routers in the domain.
Second, they should allow the routers to quicklyrecoverfromlinkandrouterfailures.
The second class of routing protocols are the interdomain routing protocols (sometimes also called the exterior gatewayprotocolsorEGP).Theobjectiveofaninterdomainroutingprotocolistodistributeroutinginformation between domains.
For scalability reasons, an interdomain routing protocol must distribute aggregated routing informationandconsiderseachdomainasablackbox.
A very important difference between intradomain and interdomain routing are the routing policies that are used byeach domain.
Inside asingledomain, all routersareconsideredequal, andwhenseveralroutes areavailable toreachagivendestinationpreﬁx,thebestrouteisselectedbasedontechnicalcriteriasuchastheroutewiththe shortestdelay,theroutewiththeminimumnumberofhopsortheroutewiththehighestbandwidth.
Whenweconsidertheinterconnectionofdomainsthataremanagedbydifferentorganisations, thisisnolonger true.
Eachdomainimplementsitsownroutingpolicy.
Aroutingpolicyiscomposedofthreeelements: animport ﬁlter thatspeciﬁeswhichroutescanbeacceptedbyadomain,anexportﬁlter thatspeciﬁeswhichroutescanbe advertised by a domain and a ranking algorithm that selects the best route when a domain knows several routes towardsthesamedestinationpreﬁx.
Aswewillseelater,anotherimportantdifferenceisthattheobjectiveofthe interdomainroutingprotocolistoﬁndthecheapestroutetowardseachdestination.
Thereisonlyoneinterdomain routingprotocol: BGP.
5.3.1 Intradomain routing Inthissection, webrieﬂydescribethekeyfeaturesofthetwomainintradomainunicastroutingprotocols: RIP andOSPF.
170 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 RIP The Routing Information Protocol (RIP) is the simplest routing protocol that was standardised for the TCP/IP protocolsuite.
RIPisdeﬁnedinRFC2453.
AdditionalinformationaboutRIPmaybefoundin[Malkin1999] RIProutersperiodicallyexchangeRIPmessages.
Theformatofthesemessagesisshownbelow.
ARIPmessage is sent inside a UDP segment whose destination port is set to 521.
A RIP message contains several ﬁelds.
The CmdﬁeldindicateswhethertheRIPmessageisarequestoraresponse.
RouterssendoneofmoreRIPresponse messagesevery30seconds.Thesemessagescontainthedistancevectorsthatsummarizetherouter’sroutingtable.
TheRIPrequestmessagescanbeusedbyroutersorhoststoqueryotherroutersaboutthecontentoftheirrouting table.
AtypicalusageiswhenarouterbootsandquicklywantstoreceivetheRIPresponsesfromitsneighbours tocomputeitsownroutingtable.
ThecurrentversionofRIPisversion2deﬁnedinRFC2453forIPv4andRFC 2080forIPv6.
Figure5.47: RIPmessageformat The RIP header contains an authentication ﬁeld.
This authentication can be used by network administrators to ensurethatonlytheRIPmessagessentbytheroutersthattheymanageareusedtobuildtheroutingtables.
RFC 2453 only supports a basic authentication scheme where all routers are conﬁgured with the same password and include this password in all RIP messages.
This is not very secure since an attacker can know the password by capturing a single RIP message.
However, this password can protect against conﬁguration errors.
Stronger authenticationschemesaredescribedinRFC2082andRFC4822,butthedetailsofthesemechanismsareoutside thescopeofthissection.
EachRIPmessagecontainsasetofrouteentries.
Eachrouteentryisencodedasa20bytesﬁeldwhoseformat isshownbelow.
RIPwasinitiallydesignedtobesuitablefordifferentnetworklayerprotocols.
Someimplemen- tations of RIP were used in XNS or IPX networks.
The ﬁrst ﬁeld of the RIP route entry is the Address Family Identiﬁer (AFI).
This identiﬁer indicates the type of address found in the route entry 22.
IPv4 uses AFI=1.
The other important ﬁelds of the route entry are the IPv4 preﬁx, the netmask that indicates the length of the subnet identiﬁerandisencodedasa32bitsnetmaskandthemetric.
Althoughthemetricisencodedasa32bitsﬁeld,the maximumRIPmetricis15(forRIP,16=∞) Figure5.48: FormatoftheRIPIPv4routeentries(RFC2453) Witha20bytesrouteentry,itwasdifﬁculttousethesameformatasabovetosupportIPv6.
Insteadofdeﬁninga variablelengthrouteentryformat,thedesignersofRFC2080deﬁnedanewformatthatdoesnotincludeanAFI ﬁeld.
TheformatoftherouteentriesusedbyRFC2080isshownbelow.
Plenisthelengthofthesubnetidentiﬁer inbitsandthemetricisencodedasonebyte.
Themaximummetricisstill15.
22TheAddressFamilyIdentiﬁersaremaintainedbyIANAathttp://www.iana.org/assignments/address-family-numbers/ 5.3.
RoutinginIPnetworks 171 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.49: FormatoftheRIPIPv6routeentries Note: Anoteontimers The ﬁrst RIP implementations sent their distance vector exactly every 30 seconds.
This worked well in most networks, but some researchers noticed that routers were sometimes overloaded because they were processing toomanydistancevectorsatthesametime[FJ1994].
Theycollectedpackettracesinthesenetworksandfound thataftersometimetherouters’timersbecamesynchronised, i.e.
almostallroutersweresendingtheirdistance vectors at almost the same time.
This synchronisation of the transmission times of the distance vectors caused an overload on the routers’ CPU but also increased the convergence time of the protocol in some cases.
This wasmainlyduetothefactthatallrouterssettheirtimerstothesameexpirationtimeafterhavingprocessedthe received distance vectors.
Sally Floyd and Van Jacobson proposed in [FJ1994] a simple solution to solve this synchronisation problem.
Instead of advertising their distance vector exactly after 30 seconds, a router should senditsnextdistancevectorafteradelaychosenrandomlyinthe[15,45]intervalRFC2080.
Thisrandomisation ofthedelayspreventsthesynchronisationthatoccurswithaﬁxeddelayandisnowarecommendedpracticefor protocoldesigners.
OSPF Link-stateroutingprotocolsareusedinIPnetworks.OpenShortestPathFirst(OSPF),deﬁnedinRFC2328,isthe linkstateroutingprotocolthathasbeenstandardisedbytheIETF.ThelastversionofOSPF,whichsupportsIPv6, is deﬁned in RFC 5340.
OSPF is frequently used in enterprise networks and in some ISP networks.
However, ISPnetworksoftenusetheIS-ISlink-stateroutingprotocol[ISO10589],whichwasdevelopedfortheISOCLNP protocol but was adapted to be used in IP RFC 1195 networks before the ﬁnalisation of the standardisation of OSPF.
A detailed analysis of ISIS and OSPF may be found in [BMO2006] and [Perlman2000].
Additional informationaboutOSPFmaybefoundin[Moy1998].
Compared to the basics of link-state routing protocols that we discussed in section Link state routing, there are someparticularitiesofOSPFthatareworthdiscussing.
First,inalargenetwork,ﬂoodingtheinformationabout allroutersandlinkstothousandsofroutersormoremaybecostlyaseachrouterneedstostorealltheinformation about the entire network.
A better approach would be to introduce hierarchical routing.
Hierarchical routing dividesthenetworkintoregions.
Alltheroutersinsidearegionhavedetailedinformationaboutthetopologyof theregionbutonlylearnaggregatedinformationaboutthetopologyoftheotherregionsandtheirinterconnections.
OSPFsupportsarestrictedvariantofhierarchicalrouting.
InOSPF’sterminology,aregioniscalledanarea.
OSPFimposesrestrictionsonhowanetworkcanbedividedintoareas.
Anareaisasetofroutersandlinksthat aregroupedtogether.
Usually,thetopologyofanareaischosensothatapacketsentbyonerouterinsidethearea can reach any other router in the area without leaving the area 23 .
An OSPF area contains two types of routers RFC2328: • Internalrouter: Arouterwhosedirectlyconnectednetworksbelongtothearea • Areaborderrouters: Arouterthatisattachedtoseveralareas.
Forexample,thenetworkshownintheﬁgurebelowhasbeendividedintothreeareas: area1,containingrouters R1, R3, R4, R5 and RA, area 2 containing R7, R8, R9, R10, RB and RC.
OSPF areas are identiﬁed by a 32 bit integer,whichissometimesrepresentedasanIPaddress.AmongtheOSPFareas,area0,alsocalledthebackbone areahasaspecialrole.
Thebackboneareagroupsalltheareaborderrouters(routersRA,RBandRCintheﬁgure below)andtheroutersthataredirectlyconnectedtothebackboneroutersbutdonotbelongtoanotherarea(router 23OSPFcansupportvirtuallinkstoconnectrouterstogetherthatbelongtothesameareabutarenotdirectlyconnected.However,thisgoes beyondthisintroductiontoOSPF.
172 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 RD in the ﬁgure below).
An important restriction imposed by OSPF is that the path between two routers that belongtotwodifferentareas(e.g.
R1andR8intheﬁgurebelow)mustpassthroughthebackbonearea.
Figure5.50: OSPFareas Insideeachnon-backbonearea,routersdistributethetopologyoftheareabyexchanginglinkstatepacketswith theotherroutersinthearea.
Theinternalroutersdonotknowthetopologyofotherareas,buteachrouterknows howtoreachthebackbonearea.
Insideanarea, theroutersonlyexchangelink-statepacketsforalldestinations thatarereachableinsidethearea.
InOSPF,theinter-arearoutingisdonebyexchangingdistancevectors.
Thisis illustratedbythenetworktopologyshownbelow.
LetusﬁrstconsiderOSPFroutinginsidearea2.
Allroutersinthearealearnaroutetowards192.168.1.0/24and 192.168.10.0/24.
The two area border routers, RB and RC, create network summary advertisements.
Assuming thatalllinkshaveaunitlinkmetric,thesewouldbe: • RBadvertises192.168.1.0/24atadistanceof2and192.168.10.0/24atadistanceof3 • RCadvertises192.168.1.0/24atadistanceof3and192.168.10.0/24atadistanceof2 ThesesummaryadvertisementsareﬂoodedthroughthebackboneareaattachedtoroutersRBandRC.Initsrouting table, router RA selects the summary advertised by RB to reach 192.168.1.0/24 and the summary advertised by RC toreach192.168.10.0/24.
Insidearea1, routerRAadvertisesasummaryindicatingthat192.168.1.0/24and 192.168.10.0/24arebothatadistanceof3fromitself.
Ontheotherhand,considerthepreﬁxes10.0.0.0/24and10.0.1.0/24thatareinsidearea1.
RouterRAistheonly areaborderrouterthatisattachedtothisarea.
Thisroutercancreatetwodifferentnetworksummaryadvertise- ments: • 10.0.0.0/24atadistanceof1and10.0.1.0/24atadistanceof2fromRA • 10.0.0.0/23atadistanceof2fromRA Theﬁrstsummaryadvertisementprovidespreciseinformationaboutthedistanceusedtoreacheachpreﬁx.
How- ever,allroutersinthenetworkhavetomaintainaroutetowards10.0.0.0/24andaroutetowards10.0.1.0/24that arebothviarouterRA.ThesecondadvertisementwouldimprovethescalabilityofOSPFbyreducingthenumber of routes that are advertised across area boundaries.
However, in practice this requires manual conﬁguration on theborderrouters.
ThesecondOSPFparticularitythatisworthdiscussingisthesupportofLocalAreaNetworks(LAN).Asshown intheexamplebelow,severalroutersmaybeattachedtothesameLAN.
5.3.
RoutinginIPnetworks 173 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.51: HierarchicalroutingwithOSPF Figure5.52: AnOSPFLANcontainingseveralrouters 174 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 A ﬁrst solution to support such a LAN with a link-state routing protocol would be to consider that a LAN is equivalenttoafull-meshofpoint-to-pointlinksasifeachroutercandirectlyreachanyotherrouterontheLAN.
However,thisapproachhastwoimportantdrawbacks: 1.
Each router must exchange HELLOs and link state packets with all the other routers on the LAN.
This increasesthenumberofOSPFpacketsthataresentandprocessedbyeachrouter.
2.
Remote routers, when looking at the topology distributed by OSPF, consider that there is a full-mesh of linksbetweenalltheLANrouters.
Suchafull-meshimpliesalotofredundancyincaseoffailure,whilein practicetheentireLANmaycompletelyfail.IncaseofafailureoftheentireLAN,allroutersneedtodetect thefailuresandﬂoodlinkstatepacketsbeforetheLANiscompletelyremovedfromtheOSPFtopologyby remoterouters.
TobetterrepresentLANsandreducethenumberofOSPFpacketsthatareexchanged,OSPFhandlesLANdiffer- ently.
WhenOSPFroutersbootonaLAN,theyelect24 oneofthemastheDesignatedRouter(DR)RFC2328.
TheDRrouterrepresentsthelocalareanetwork,andadvertisestheLAN’ssubnet(138.48.4.0/24intheexample above).
Furthermore,LANroutersonlyexchangeHELLOpacketswiththeDR.ThankstotheutilisationofaDR, thetopologyoftheLANappearsasasetofpoint-to-pointlinksconnectedtotheDRasshownintheﬁgurebelow.
Figure5.53: OSPFrepresentationofaLAN Note: Howtoquicklydetectalinkfailure?
NetworkoperatorsexpectanOSPFnetworktobeabletoquicklyrecoverfromlinkorrouterfailures[VPD2004].
InanOSPFnetwork,therecoveryafterafailureisperformedinthreesteps[FFEB2005]: • the routers that are adjacent to the failure detect it quickly.
The default solution is to rely on the regular exchange of HELLO packets.
However, the interval between successive HELLOs is often set to 10 sec- onds... SettingtheHELLOtimerdowntoafewmillisecondsisdifﬁcultasHELLOpacketsarecreatedand processedbythemainCPUoftheroutersandtheserouterscannoteasilygenerateandprocessaHELLO packeteverymillisecondoneachoftheirinterfaces.
Abettersolutionistouseadedicatedfailuredetection protocolsuchastheBidirectionalForwardingDetection(BFD)protocoldeﬁnedin[KW2009]thatcanbe implementeddirectlyontherouterinterfaces.
Anothersolutiontobeabletodetectthefailureistoinstru- mentthephysicalandthedatalinklayersothattheycaninterrupttherouterwhenalinkfails.Unfortunately, suchasolutioncannotbeusedonalltypesofphysicalanddatalinklayers.
• theroutersthathavedetectedthefailureﬂoodtheirupdatedlinkstatepacketsinthenetwork • allroutersupdatetheirroutingtable 5.3.2 Interdomain routing As explained earlier, the Internet is composed of more than 30,000 different networks 25 called domains.
Each domainiscomposedofagroupofroutersandhoststhataremanagedbythesameorganisation.
Exampledomains includebelnet,sprint,level3,geant,abilene,ciscoorgoogle... 24 TheOSPFDesignatedRouterelectionprocedureisdeﬁnedinRFC2328.
Eachroutercanbeconﬁguredwitharouterprioritythat inﬂuencestheelectionprocesssincetherouterwiththehighestpriorityispreferredwhenanelectionisrun.
25 An analysis of the evolution of the number of domains on the global Internet during the last ten years may be found in http://www.potaroo.net/tools/asn32/ 5.3.
RoutinginIPnetworks 175 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Each domain contains a set of routers.
From a routing point of view, these domains can be divided into two classes: thetransitandthestubdomains.
Astubdomainsendsandreceivespacketswhosesourceordestination areoneofitsownhosts.
Atransit domainisadomainthatprovidesatransitserviceforotherdomains,i.e.
the routersinthisdomainforwardpacketswhosesourceanddestinationdonotbelongtothetransitdomain.
Asof thiswriting,about85%ofthedomainsintheInternetarestubdomains26.
Astubdomainthatisconnectedtoa singletransitdomainiscalledasingle-homedstub.
Amultihomedstubisastubdomainconnectedtotwoormore transitproviders.
Figure5.54: Transitandstubdomains Thestubdomainscanbefurtherclassiﬁedbyconsideringwhethertheymainlysendorreceivepackets.Anaccess- rich stub domain is a domain that contains hosts that mainly receive packets.
Typical examples include small ADSL- or cable modem-based Internet Service Providers or enterprise networks.
On the other hand, a content- richstubdomainisadomainthatmainlyproducespackets.Examplesofcontent-richstubdomainsincludegoogle, yahoo,microsoft,facebookorcontentdistributionnetworkssuchasakamaiorlimelightForthelastfewyears,we haveseenarapidgrowthofthesecontent-richstubdomains.
Recentmeasurements[ATLAS2009]indicatethata growingfractionofallthepacketsexchangedontheInternetareproducedinthedatacentersmanagedbythese contentproviders.
Domains need to be interconnected to allow a host inside a domain to exchange IP packets with hosts located in other domains.
From a physical perspective, domains can be interconnected in two different ways.
The ﬁrst solutionistodirectlyconnectarouterbelongingtotheﬁrstdomainwitharouterinsidetheseconddomain.
Such linksbetweendomainsarecalledprivateinterdomainlinksorprivatepeeringlinks.
Inpractice,forredundancyor performancereasons,distinctphysicallinksareusuallyestablishedbetweendifferentroutersinthetwodomains thatareinterconnected.
Figure5.55: Interconnectionoftwodomainsviaaprivatepeeringlink Suchprivatepeeringlinksareusefulwhen,forexample,anenterpriseoruniversitynetworkneedstobeconnected toitsInternetServiceProvider.However,somedomainsareconnectedtohundredsofotherdomains27.Forsome ofthesedomains,usingonlyprivatepeeringlinkswouldbetoocostly.
Abettersolutiontoallowmanydomains tointerconnectcheaplyaretheInterneteXchangePoints(IXP).AnIXPisusuallysomespaceinadatacenterthat hostsroutersbelongingtodifferentdomains.
Adomainwillingtoexchangepacketswithotherdomainspresent attheIXPinstallsoneofitsroutersontheIXPandconnectsittootherroutersinsideitsownnetwork.
TheIXP containsaLocalAreaNetworktowhichalltheparticipatingroutersareconnected.
Whentwodomainsthatare presentattheIXPwish28 toexchangepackets,theysimplyusetheLocalAreaNetwork.
IXPsareverypopular 26 SeveralwebsitescollectandanalysedataabouttheevolutionofBGPintheglobalInternet.
http://bgp.potaroo.netprovideslotsof statisticsandanalysesthatareupdateddaily.
27 Seehttp://as-rank.caida.org/forananalysisoftheinterconnectionsbetweendomainsbasedonmeasurementscollectedintheglobal Internet 28TworoutersthatareattachedtothesameIXPonlyexchangepacketswhentheownersoftheirdomainshaveaneconomicalincentiveto exchangepacketsonthisIXP.Usually,arouteronanIXPisonlyabletoexchangepacketswithasmallfractionoftheroutersthatarepresent onthesameIXP.
176 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 inEuropeandmanyInternetServiceProvidersandContentprovidersarepresentintheseIXPs.
Figure5.56: InterconnectionoftwodomainsatanInterneteXchangePoint IntheearlydaysoftheInternet,domainswouldsimplyexchangealltheroutestheyknowtoallowahostinside one domain to reach any host in the global Internet.
However, in today’s highly commercial Internet, this is no longer true as interdomain routing mainly needs to take into account the economical relationships between the domains.
Furthermore,whileintradomainroutingusuallypreferssomeroutesoverothersbasedontheirtechnical merits (e.g.
prefer route with the minimum number of hops, prefer route with the minimum delay, prefer high bandwidth routes over low bandwidth ones, etc) interdomain routing mainly deals with economical issues.
For interdomainrouting,thecostofusingarouteisoftenmoreimportantthanthequalityoftheroutemeasuredbyits delayorbandwidth.
Therearedifferenttypesofeconomicalrelationshipsthatcanexistbetweendomains.Interdomainroutingconverts theserelationshipsintopeeringrelationshipsbetweendomainsthatareconnectedviapeeringlinks.
Theﬁrstcategoryofpeeringrelationshipisthecustomer->providerrelationship.Sucharelationshipisusedwhen acustomerdomainpaysanInternetServiceProvidertobeabletoexchangepacketswiththeglobalInternetover aninterdomainlink.
AsimilarrelationshipisusedwhenasmallInternetServiceProviderpaysalargerInternet ServiceProvidertoexchangepacketswiththeglobalInternet.
Figure5.57: AsimpleInternetwithpeeringrelationships To understand the customer->provider relationship, let us consider the simple internetwork shown in the ﬁgure above.
Inthisinternetwork,AS7 isastubdomainthatisconnectedtooneprovider: AS4.
Thecontractbetween AS4 and AS7 allows a host inside AS7 to exchange packets with any host in the internetwork.
To enable this exchange of packets, AS7 must know a route towards any domain and all the domains of the internetwork must know a route via AS4 that allows them to reach hosts inside AS7.
From a routing perspective, the commercial contractbetweenAS7andAS4leadstothefollowingroutesbeingexchanged: • overacustomer->providerrelationship,thecustomerdomainadvertisestoitsproviderallitsroutesandall theroutesthatithaslearnedfromitsowncustomers.
• overaprovider->customerrelationship,theprovideradvertisesalltheroutesthatitknowstoitscustomer.
Thesecondruleensuresthatthecustomerdomainreceivesaroutetowardsalldestinationsthatarereachablevia itsprovider.
TheﬁrstruleallowstheroutesofthecustomerdomaintobedistributedthroughouttheInternet.
5.3.
RoutinginIPnetworks 177 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Comingbacktotheﬁgureabove,AS4advertisestoitstwoprovidersAS1andAS2itsownroutesandtheroutes learnedfromitscustomer,AS7.
Ontheotherhand,AS4advertisestoAS7alltheroutesthatitknows.
Thesecondtypeofpeeringrelationshipistheshared-costpeeringrelationship.
Sucharelationshipusuallydoes not involve a payment from one domain to the other in contrast with the customer->provider relationship.
A shared-cost peering relationship is usually established between domains having a similar size and geographic coverage.Forexample,considertheﬁgureabove.IfAS3andAS4exchangemanypacketsviaAS1,theybothneed topayAS1.
AcheaperalternativeforAS3andAS4wouldbetoestablishashared-cost peering.
Suchapeering canbeestablishedatIXPswherebothAS3andAS4arepresentorbyusingprivatepeeringlinks.
Thisshared-cost peeringshouldbeusedtoexchangepacketsbetweenhostsinsideAS3andhostsinsideAS4.
However,AS3does not want to receive on the AS3-AS4 shared-cost peering links packets whose destination belongs to AS1 as AS3 wouldhavetopaytosendthesepacketstoAS1.
From a routing perspective, over a shared-cost peering relationship a domain only advertises its internal routes and the routes that it has learned from its customers.
This restriction ensures that only packets destined to the localdomainoroneofitscustomersisreceivedovertheshared-cost peeringrelationship.
Thisimpliesthatthe routesthathavebeenlearnedfromaproviderorfromanothershared-costpeerisnotadvertisedoverashared-cost peering relationship.
This is motivated by economical reasons.
If a domain were to advertise the routes that it learnedfromaprovideroverashared-costpeeringrelationshipthatdoesnotbringrevenue,itwouldhaveallowed itsshared-costpeertousethelinkwithitsproviderwithoutanypayment.
Ifadomainweretoadvertisetheroutes itlearned overa sharedcost peeringover anothershared-cost peeringrelationship, itwouldhave allowedthese shared-costpeerstouseitsownnetwork(whichmayspanoneormorecontinents)freelytoexchangepackets.
Finally,thelasttypeofpeeringrelationshipisthesibling.Sucharelationshipisusedwhentwodomainsexchange alltheirroutesinbothdirections.
Inpractice,sucharelationshipisonlyusedbetweendomainsthatbelongtothe samecompany.
Thesedifferenttypesofrelationshipsareimplementedintheinterdomainroutingpoliciesdeﬁnedbyeachdomain.
Theinterdomainroutingpolicyofadomainiscomposedofthreemainparts: • theimportﬁlterthatspeciﬁes,foreachpeeringrelationship,theroutesthatcanbeacceptedfromtheneigh- bouringdomain(thenon-acceptableroutesareignoredandthedomainneverusesthemtoforwardpackets) • theexportﬁlter thatspeciﬁes,foreachpeeringrelationship,theroutesthatcanbeadvertisedtotheneigh- bouringdomain • therankingalgorithmthatisusedtoselectthebestrouteamongalltheroutesthatthedomainhasreceived towardsthesamedestinationpreﬁx A domain’s import and export ﬁlters can be deﬁned by using the Route Policy Speciﬁcation Language (RPSL) speciﬁedinRFC2622[GAVE1999].SomeInternetServiceProviders,notablyinEurope,useRPSLtodocument 29theirimportandexportpolicies.
SeveraltoolshelptoeasilyconvertaRPSLpolicyintoroutercommands.
Theﬁgurebelowprovidesasimpleexampleofimportandexportﬁltersfortwodomainsinasimpleinternetwork.
In RPSL, the keyword ANY is used to replace any route from any domain.
It is typically used by a provider to indicate that it announces all its routes to a customer over a provider->customer relationship.
This is the case for AS4‘s export policy.
The example below clearly shows the difference between a provider->customer and a shared-costpeeringrelationship.
AS4‘sexportﬁlterindicatesthatitannouncesonlyitsinternalroutes(AS4)and the routes learned from its clients (AS7) over its shared-cost peering with AS3, while it advertises all the routes thatituses(includingtherouteslearnedfromAS3)toAS7.
TheBorderGatewayProtocol The Internet uses a single interdomain routing protocol : the Border Gateway Protocol (BGP).
The current ver- sionofBGPisdeﬁnedinRFC4271.
BGPdiffersfromtheintradomainroutingprotocolsthatwehavealready discussedinseveralways.
First,BGPisapath-vectorprotocol.
WhenaBGProuteradvertisesaroutetowardsa preﬁx, itannouncestheIPpreﬁxandtheinterdomainpathusedtoreachthispreﬁx.
FromBGP’spointofview, eachdomainisidentiﬁedbyauniqueAutonomousSystem(AS)number30 andtheinterdomainpathcontainsthe ASnumbersofthetransitdomainsthatareusedtoreachtheassociatedpreﬁx.
Thisinterdomainpathiscalledthe 29Seeftp://ftp.ripe.net/ripe/dbasefortheRIPEdatabasethatcontainstheimportandexportpoliciesofmanyEuropeanISPs 30Inthistext,weconsiderAutonomousSystemanddomainassynonyms.Inpractice,adomainmaybedividedintoseveralAutonomous Systems,butweignorethisdetail.
178 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.58: Importandexportpolicies ASPath.
ThankstotheseAS-Paths,BGPdoesnotsufferfromthecount-to-inﬁnityproblemsthataffectdistance vectorroutingprotocols.
Furthermore,theAS-Pathcanbeusedtoimplementsomeroutingpolicies.
Anotherdif- ferencebetweenBGPandtheintradomainroutingprotocolsisthataBGProuterdoesnotsendtheentirecontents ofitsroutingtabletoitsneighboursregularly.
GiventhesizeoftheglobalInternet,routerswouldbeoverloaded by the number of BGP messages that they would need to process.
BGP uses incremental updates, i.e.
it only announcestheroutesthathavechangedtoitsneighbours.
TheﬁgurebelowshowsasimpleexampleoftheBGProutesthatareexchangedbetweendomains.Inthisexample, preﬁx1.0.0.0/8isannouncedbyAS1.
AS1advertisesaBGProutetowardsthispreﬁxtoAS2.
TheAS-Pathofthis routeindicatesthatAS1istheoriginatorofthepreﬁx.WhenAS4receivestheBGProutefromAS1,itre-announces ittoAS2andaddsitsASnumbertotheAS-Path.
AS2haslearnedtworoutestowardspreﬁx1.0.0.0/8.
Itcompares thetworoutesandpreferstheroutelearnedfromAS4basedonitsownrankingalgorithm.
AS2advertisestoAS5 aroutetowards1.0.0.0/8withitsAS-PathsettoAS2:AS4:AS1.
ThankstotheAS-Path,AS5knowsthatifitsends a packet towards 1.0.0.0/8 the packet ﬁrst passes through AS2, then through AS4 before reaching its destination insideAS1.
Figure5.59: SimpleexchangeofBGProutes BGProutersexchangeroutesoverBGPsessions.
ABGPsessionisestablishedbetweentworoutersbelongingto twodifferentdomainsthataredirectlyconnected.
Asexplainedearlier,thephysicalconnectionbetweenthetwo routerscanbeimplementedasaprivatepeeringlinkoroveranInterneteXchangePoint.
ABGPsessionbetween two adjacent routers runs above a TCP connection (the default BGP port is 179).
In contrast with intradomain routingprotocolsthatexchangeIPpacketsorUDPsegments,BGPrunsaboveTCPbecauseTCPensuresareliable delivery of the BGP messages sent by each router without forcing the routers to implement acknowledgements, checksums,etc.
Furthermore,thetworoutersconsiderthepeeringlinktobeupaslongastheBGPsessionand theunderlyingTCPconnectionremainup31.
ThetwoendpointsofaBGPsessionarecalledBGPpeers.
31TheBGPsessionsandtheunderlyingTCPconnectionaretypicallyestablishedbytherouterswhentheybootbasedoninformationfound intheirconﬁguration.
TheBGPsessionsarerarelyreleased,exceptifthecorrespondingpeeringlinkfailsoroneoftheendpointscrashesor 5.3.
RoutinginIPnetworks 179 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 AS3 R1 BGP session R2 AS4 Figure5.60: ABGPpeeringsessionbetweentwodirectlyconnectedrouters Inpractice,toestablishaBGPsessionbetweenroutersR1andR2intheﬁgureabove,thenetworkadministrator ofAS3mustﬁrstconﬁgureonR1theIPaddressofR2ontheR1-R2linkandtheASnumberofR2.RouterR1then regularlytriestoestablishtheBGPsessionwithR2.
R2onlyagreestoestablishtheBGPsessionwithR1onceit hasbeenconﬁguredwiththeIPaddressofR1anditsASnumber.
Forsecurityreasons,arouterneverestablishes aBGPsessionthathasnotbeenmanuallyconﬁguredontherouter.
TheBGPprotocolRFC4271deﬁnesseveraltypesofmessagesthatcanbeexchangedoveraBGPsession: • OPEN :thismessageissentassoonastheTCPconnectionbetweenthetworoutershasbeenestablished.
ItinitialisestheBGPsessionandallowsthenegotiationofsomeoptions.
Detailsaboutthismessagemay befoundinRFC4271 • NOTIFICATION :thismessageisusedtoterminateaBGPsession,usuallybecauseanerrorhasbeende- tectedbytheBGPpeer.
ArouterthatsendsorreceivesaNOTIFICATIONmessageimmediatelyshutdowns thecorrespondingBGPsession.
• UPDATE: this message is used to advertise new or modiﬁed routes or to withdraw previously advertised routes.
• KEEPALIVE : this message is used to ensure a regular exchange of messages on the BGP session, even whennoroutechanges.
WhenaBGProuterhasnotsentanUPDATEmessageduringthelast30seconds, itshallsendaKEEPALIVEmessagetoconﬁrmtotheotherpeerthatitisstillup.
Ifapeerdoesnotreceive anyBGPmessageduringaperiodof90seconds32,theBGPsessionisconsideredtobedownandallthe routeslearnedoverthissessionarewithdrawn.
Asexplainedearlier,BGPreliesonincrementalupdates.
ThisimpliesthatwhenaBGPsessionstarts,eachrouter ﬁrst sends BGP UPDATE messages to advertise to the other peer all the exportable routes that it knows.
Once all these routes have been advertised, the BGP router only sends BGP UPDATE messages about a preﬁx if the routeisnew,oneofitsattributeshaschangedortheroutebecameunreachableandmustbewithdrawn.
TheBGP UPDATEmessageallowsBGProuterstoefﬁcientlyexchangesuchinformationwhileminimisingthenumberof bytesexchanged.
EachUPDATEmessagecontains: • alistofIPpreﬁxesthatarewithdrawn • alistofIPpreﬁxesthatare(re-)advertised • thesetofattributes(e.g.
AS-Path)associatedtotheadvertisedpreﬁxes Intheremainderofthischapter,andalthoughallroutinginformationisexchangedusingBGPUPDATEmessages, weassumeforsimplicitythataBGPmessagecontainsonlyinformationaboutonepreﬁxandweusethewords: • WithdrawmessagetoindicateaBGPUPDATEmessagecontainingoneroutethatiswithdrawn • Update message to indicate a BGP UPDATE containing a new or updated route towards one destination preﬁxwithitsattributes needstoberebooted.
32 90 seconds is the default delay recommended by RFC 4271.
However, two BGP peers can negotiate a different timer during the establishmentoftheirBGPsession.
UsingatoosmallintervaltodetectBGPsessionfailuresisnotrecommended.
BFD[KW2009]canbe usedtoreplaceBGP’sKEEPALIVEmechanismiffastdetectionofinterdomainlinkfailuresisrequired.
180 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Fromaconceptualpointofview,aBGProuterconnectedtoN BGPpeers,canbedescribedasbeingcomposed offourpartsasshownintheﬁgurebelow.
Figure5.61: OrganisationofaBGProuter Inthisﬁgure,therouterreceivesBGPmessagesontheleftpartoftheﬁgure,processesthesemessagesandpossibly sendsBGPmessagesontherightpartoftheﬁgure.
ABGProutercontainsthreeimportantdatastructures: • the Adj-RIB-In contains the BGP routes that have been received from each BGP peer.
The routes in the Adj-RIB-In are ﬁltered by the import ﬁlter before being placed in the BGP-Loc-RIB.
There is one import ﬁlterperBGPpeer.
• theLocalRoutingInformationBase(Loc-RIB)containsalltheroutesthatareconsideredasacceptableby the router.
The Loc-RIB may contain several routes, learned from different BGP peers, towards the same destinationpreﬁx.
• theForwardingInformationBase(FIB)isusedbythedataplanetoforwardpacketstowardstheirdestination.
TheFIBcontains,foreachdestination,thebestroutethathasbeenselectedbytheBGPdecisionprocess.
Thisdecisionprocessisanalgorithmthatselects,foreachdestinationpreﬁx,thebestrouteaccordingtothe router’srankingalgorithmthatispartofitspolicy.
• theAdj-RIB-OutcontainstheBGProutesthathavebeenadvertisedtoeachBGPpeer.
TheAdj-RIB-Outfor a given peer is built by applying the peer‘s export ﬁlter on the routes that have been installed in the FIB.
Thereisoneexportﬁlter perBGPpeer.
Forthisreason, theAdj-RIB-Outofapeermaycontaindifferent routesthantheAdj-RIB-Outofanotherpeer.
WhenaBGPsessionstarts,theroutersﬁrstexchangeOPENmessagestonegotiatetheoptionsthatapplythrough- outtheentiresession.Then,eachrouterextractsfromitsFIBtheroutestobeadvertisedtothepeer.Itisimportant tonotethat,foreachknowndestinationpreﬁx,aBGProutercanonlyadvertisetoapeertheroutethatithasitself installedinsideitsFIB.Theroutesthatareadvertisedtoapeermustpassthepeer’sexportﬁlter.
Theexportﬁlter isasetofrulesthatdeﬁnewhichroutescanbeadvertisedoverthecorrespondingsession, possiblyafterhaving modiﬁedsomeofitsattributes.
OneexportﬁlterisassociatedtoeachBGPsession.
Forexample,onashared-cost peering, the export ﬁlter only selects the internal routes and the routes that have been learned from a customer.
Thepseudo-codebelowshowstheinitialisationofaBGPsession.
def initiliaze_BGP_session( RemoteAS, RemoteIP): # Initialize and start BGP session # Send BGP OPEN Message to RemoteIP on port 179 # Follow BGP state machine # advertise local routes and routes learned from peers*/ for d in BGPLocRIB : B=build_BGP_Update(d) S=Apply_Export_Filter(RemoteAS,B) if (S != None) : send_Update(S,RemoteAS,RemoteIP) # entire RIB has been sent # new Updates will be sent to reflect local or distant # changes in routers In the above pseudo-code, the build_BGP_UPDATE(d) procedure extracts from the BGP Loc-RIB the best path towardsdestinationd(i.e.
therouteinstalledintheFIB)andpreparesthecorrespondingBGPUPDATEmessage.
5.3.
RoutinginIPnetworks 181 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 ThismessageisthenpassedtotheexportﬁlterthatreturnsNULLiftheroutecannotbeadvertisedtothepeeror the (possibly modiﬁed) BGP UPDATE message to be advertised.
BGP routers allow network administrators to specifyverycomplexexportﬁlters,seee.g.
[WMS2004].
Asimpleexportﬁlterthatimplementstheequivalentof splithorizonisshownbelow.
def apply_export_filter(RemoteAS, BGPMsg) : # check if RemoteAS already received route if RemoteAS is BGPMsg.ASPath : BGPMsg=None # Many additional export policies can be configured : # Accept or refuse the BGPMsg # Modify selected attributes inside BGPMsg return BGPMsg Atthispoint,theremoterouterhasreceivedalltheexportableBGProutes.
Afterthisinitialexchange,therouter onlysendsBGPUPDATEmessageswhenthereisachange(additionofaroute,removalofarouteorchangein theattributesofaroute)inoneoftheseexportableroutes.
Suchachangecanhappenwhentherouterreceivesa BGPmessage.
Thepseudo-codebelowsummarizestheprocessingoftheseBGPmessages.
def Recvd_BGPMsg(Msg, RemoteAS) : B=apply_import_filer(Msg,RemoteAS) if (B== None): # Msg not acceptable return if IsUPDATE(Msg): Old_Route=BestRoute(Msg.prefix) Insert_in_RIB(Msg) Run_Decision_Process(RIB) if (BestRoute(Msg.prefix) != Old_Route) : # best route changed B=build_BGP_Message(Msg.prefix); S=apply_export_filter(RemoteAS,B); if (S!=None) : # announce best route send_UPDATE(S,RemoteAS,RemoteIP); else if (Old_Route != None) : send_WITHDRAW(Msg.prefix,RemoteAS, RemoteIP) else : # Msg is WITHDRAW Old_Route=BestRoute(Msg.prefix) Remove_from_RIB(Msg) Run_Decision_Process(RIB) if (Best_Route(Msg.prefix) !=Old_Route): # best route changed B=build_BGP_Message(Msg.prefix) S=apply_export_filter(RemoteAS,B) if (S != None) : # still one best route towards Msg.prefix send_UPDATE(S,RemoteAS, RemoteIP); else if(Old_Route != None) : # No best route anymore send_WITHDRAW(Msg.prefix,RemoteAS,RemoteIP); WhenaBGPmessageisreceived,therouterﬁrstappliesthepeer’simportﬁltertoverifywhetherthemessageis acceptableornot.
Ifthemessageisnotacceptable,theprocessingstops.
Thepseudo-codebelowshowsasimple importﬁlter.
Thisimportﬁlteracceptsallroutes,exceptthosethatalreadycontainthelocalASintheirAS-Path.
Ifsucharoutewasused,itwouldcausearoutingloop.
Anotherexampleofanimportﬁlterwouldbeaﬁlterused byanInternetServiceProvideronasessionwithacustomertoonlyacceptroutestowardstheIPpreﬁxesassigned tothecustomerbytheprovider.
Onrealrouters,importﬁlterscanbemuchmorecomplexandsomeimportﬁlters modifytheattributesofthereceivedBGPUPDATE[WMS2004].
def apply_import_filter(RemoteAS, BGPMsg): if MysAS in BGPMsg.ASPath : BGPMsg=None # Many additional import policies can be configured : # Accept or refuse the BGPMsg # Modify selected attributes inside BGPMsg return BGPMsg 182 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Note: Thebogonﬁlters Another example of frequently used import ﬁlters are the ﬁlters that Internet Service Providers use to ignore bogonroutes.
IntheISPcommunity,abogonrouteisaroutethatshouldnotbeadvertisedontheglobalInternet.
TypicalexamplesincludetheprivateIPv4preﬁxesdeﬁnedinRFC1918,theloopbackpreﬁxes(127.0.0.1/8and ::1/128)ortheIPpreﬁxesthathavenotyetbeenallocatedbyIANA.AwellmanagedBGProutershouldensure thatitneveradvertisesbogonsontheglobalInternet.
Detailedinformationaboutthesebogonsmaybefoundat http://www.team-cymru.org/Services/Bogons/ If the import ﬁlter accepts the BGP message, the pseudo-code distinguishes two cases.
If this is an Update messageforpreﬁxp,thiscanbeanewrouteforthispreﬁxoramodiﬁcationoftheroute’sattributes.
Therouter ﬁrstretrievesfromitsRIBthebestroutetowardspreﬁxp.
Then,thenewrouteisinsertedintheRIBandtheBGP decisionprocessisruntoﬁndwhetherthebestroutetowardsdestinationpchanges.ABGPmessageonlyneedsto besenttotherouter’speersifthebestroutehaschanged.Foreachpeer,therouterappliestheexportﬁltertoverify whether the route can be advertised.
If yes, the ﬁltered BGP message is sent.
Otherwise, a Withdraw message issent.
WhentherouterreceivesaWithdrawmessage, italsoveriﬁeswhethertheremovaloftheroutefromits RIBcauseditsbestroutetowardsthispreﬁxtochange.
Itshouldbenotedthat, dependingonthecontentofthe RIBandtheexportﬁlters,aBGProutermayneedtosendaWithdrawmessagetoapeerafterhavingreceivedan Updatemessagefromanotherpeerandconversely.
LetusnowdiscussinmoredetailtheoperationofBGPinanIPv4network.
Forthis, letusconsiderthesimple networkcomposedofthreerouterslocatedinthreedifferentASesandshownintheﬁgurebelow.
AASS1100 AASS2200 AASS3300 195.100.0.0/30 195.100.0.4/30 R1 R2 R3 195.100.0.1 195.100.0.2 195.100.0.5 195.100.0.6 194.100.0.0/24 BBGGPP BBGGPP 194.100.1.0/24 194.100.2.0/23 Figure5.62: UtilisationoftheBGPnexthopattribute Thisnetworkcontainsthreerouters:R1,R2andR3.EachrouterisattachedtoalocalIPv4subnetthatitadvertises usingBGP.TherearetwoBGPsessions,onebetweenR1andR2andthesecondbetweenR2andR3.A/30subnet is used on each interdomain link (195.100.0.0/30 on R1-R2 and 195.100.0.4/30 on R2-R3).
The BGP sessions runaboveTCPconnectionsestablishedbetweentheneighbouringrouters(e.g.
195.100.0.1-195.100.0.2forthe R1-R2session).
LetusassumethattheR1-R2BGPsessionistheﬁrsttobeestablished.
ABGPUpdatemessagesentonsucha sessioncontainsthreeﬁelds: • theadvertisedpreﬁx • theBGPnexthop • theattributesincludingtheAS-Path WeusethenotationU(preﬁx,nexthop,attributes)torepresentsuchaBGPUpdatemessageinthissection.
Simi- larly,W(preﬁx)representsaBGPwithdrawforthespeciﬁedpreﬁx.
OncetheR1-R2sessionhasbeenestablished, R1sendsU(194.100.0.0/24,195.100.0.1,AS10)toR2andR2sendsU(194.100.2.0/23,195.100.0.2,AS20).
Atthis point,R1canreach194.100.2.0/23via195.100.0.2andR2canreach194.100.0.0/24via195.100.0.1.
Once the R2-R3 has been established, R3 sends U(194.100.1.0/24,195.100.0.6,AS30).
R2 announces on the R2- R3 session all the routes inside its RIB.
It thus sends to R3 : U(194.100.0.0/24,195.100.0.5,AS20:AS10) and U(194.100.2.0/23,195.100.0.5,AS20).NotethatwhenR2advertisestheroutethatitlearnedfromR1,itupdatesthe BGPnexthopandaddsitsASnumbertotheAS-Path.
R2alsosendsU(194.100.1.0/24,195.100.0.2,AS20:AS30) to R1 on the R1-R3 session.
At this point, all BGP routes have been exchanged and all routers can reach 194.100.0.0/24,194.100.2.0/23and194.100.1.0/24.
5.3.
RoutinginIPnetworks 183 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 IfthelinkbetweenR2andR3fails,R3detectsthefailureasitdidnotreceiveKEEPALIVEmessagesrecentlyfrom R2.
Atthistime, R3removesfromitsRIBalltherouteslearnedovertheR2-R3BGPsession.
R2alsoremoves from its RIB the routes learned from R3.
R2 also sends W(194.100.1.0/24) to R1 over the R1-R3 BGP session sinceitdoesnothavearouteanymoretowardsthispreﬁx.
Note: OriginoftheroutesadvertisedbyaBGProuter AfrequentpracticalquestionabouttheoperationofBGPishowaBGProuterdecidestooriginateoradvertisea routefortheﬁrsttime.
Inpractice,thisoccursintwosituations: • therouterhasbeenmanuallyconﬁguredbythenetworkoperatortoalwaysadvertiseoneorseveralroutes onaBGPsession.
Forexample,ontheBGPsessionbetweenUCLouvainanditsprovider,belnet,UCLou- vain’srouteralwaysadvertisesthe130.104.0.0/16IPv4preﬁxassignedtothecampusnetwork • therouterhasbeenconﬁguredbythenetworkoperatortoadvertiseoveritsBGPsessionsomeoftheroutes thatitlearnswithitsintradomainroutingprotocol.
Forexample,anenterpriseroutermayadvertiseovera BGPsessionwithitsprovidertheroutestoremotesiteswhentheseroutesarereachableandadvertisedby theintradomainroutingprotocol The ﬁrst solution is the most frequent.
Advertising routes learned from an intradomain routing protocol is not recommended, this is because if the route ﬂaps 33, this would cause a large number of BGP messages being exchangedintheglobalInternet.
MostnetworksthatuseBGPcontainmorethanonerouter.
Forexample,considerthenetworkshownintheﬁgure belowwhereAS20containstworoutersattachedtointerdomainlinks: R2andR4.
Inthisnetwork,tworouting protocolsareusedbyR2andR4.
TheyuseanintradomainroutingprotocolsuchasOSPFtodistributetheroutes towardstheinternalpreﬁxes: 195.100.0.8/30,195.100.0.0/30,... R2andR4alsouseBGP.R2receivestheroutes advertised by AS10 while R4 receives the routes advertised by AS30.
These two routers need to exchange the routesthattheyhaverespectivelyreceivedovertheirBGPsessions.
194.100.2.0/23 AS30 AS10 195.100.0.2 195.100.0.0/30 R2 195.100.0.10 195.100.0.6 R3 R1 195.100.0.1 BGP 194.100.0.0/23 195.100.0.8/30 BGP AS20 195.100.0.4/30 195.100.0.9 194.100.4.0/23 R4 195.100.0.5 Figure5.63: AlargernetworkusingBGP AﬁrstsolutiontoallowR2andR3toexchangetheinterdomainroutesthattheyhavelearnedovertheirrespective BGPsessionswouldbetoconﬁguretheintradomainroutingprotocoltodistributeinsideAS20therouteslearned overtheBGPsessions.
Althoughcurrentrouterssupportthisfeature,thisisabadsolutionfortworeasons: 1.
IntradomainroutingprotocolscannotdistributetheattributesthatareattachedtoaBGProute.IfR4received viatheintradomainroutingprotocolaroutetowards194.100.0.0/23thatR2learnedviaBGP,itwouldnot know that the route was originated by AS10 and the only advertisement that it could send to R3 would containanincorrectAS-Path 2.
Intradomainroutingprotocolshavenotbeendesignedtosupportthehundredsofthousandsofroutesthata BGProutercanreceiveontoday’sglobalInternet.
33Alinkissaidtobeﬂappingifitswitchesseveralbetweenanoperationalstateandadisabledstatewithinashortperiodoftime.Arouter attachedtosuchalinkwouldneedtofrequentlysendroutingmessages.
184 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 ThebestsolutiontoallowBGProuterstodistribute,insideanAS,alltherouteslearnedoverBGPsessionsisto establishBGPsessionsamongalltheBGProutersinsidetheAS.Inpractice,therearetwotypesofBGPsessions : • eBGP session or external BGP session.
Such a BGP session is established between two routers that are directlyconnectedandbelongtotwodifferentdomains.
• iBGPsessionorinternalBGPsession.
SuchaBGPsessionisestablishedbetweentworoutersbelongingto thesamedomain.
Thesetworoutersdonotneedtobedirectlyconnected.
In practice, each BGP router inside a domain maintains an iBGP session with every other BGP router in the domain34.
Thiscreatesafull-meshofiBGPsessionsamongallBGProutersofthedomain.
iBGPsessions,like eBGPsessionsrunoverTCPconnections.
NotethatincontrastwitheBGPsessionsthatareestablishedbetween directlyconnectedrouters,iBGPsessionsareoftenestablishedbetweenroutersthatarenotdirectlyconnected.
AnimportantpointtonoteaboutiBGPsessionsisthataBGProuteronlyadvertisesarouteoveraniBGPsession providedthat: • therouterusesthisroutetoforwardpackets,and • theroutewaslearnedoveroneoftherouter’seBGPsessions ABGProuterdoesnotadvertisearoutethatithaslearnedoveraniBGPsessionoveranotheriBGPsession.
Note that a router can, of course, advertise over an eBGP session a route that it has learned over an iBGP session.
ThisdifferencebetweenthebehaviourofaBGProuteroveriBGPandeBGPsessionisduetotheutilisationofa full-meshofiBGPsessions.
ConsideranetworkcontainingthreeBGProuters: A,BandCinterconnectedviaa full-meshofiBGPsessions.
IfrouterAlearnsaroutetowardspreﬁxpfromrouterB,routerAdoesnotneedto advertisethereceivedroutetorouterCsincerouterCalsolearnsthesamerouteovertheC-BiBGPsession.
To understand the utilisation of an iBGP session, let us consider what happens when router R1 sends U(194.100.0.0/23,195.100.0.1,AS10)inthenetworkshownbelow.
ThisBGPmessageisprocessedbyR2which advertisesitoveritsiBGPsessionwithR4.
TheBGPUpdatesentbyR2containsthesamenexthopandthesame AS-PathasintheBGPUpdatereceivedbyR2.
R4thensendsU(194.100.0.0/23,195.100.0.5,AS20:AS10)toR3.
Note that the BGP nexthop and the AS-Path are only updated 35 when a BGP route is advertised over an eBGP session.
194.100.2.0/23 AS30 AS10 195.100.0.2 R2 195.100.0.0/30 195.100.0.6 195.100.0.10 R3 R1 195.100.0.1eBGP 194.100.0.0/23 195.100.0.8/30 AS20 iBGP eBGP 195.100.0.9 195.100.0.4/30 194.100.4.0/23 R4 195.100.0.5 Figure5.64: iBGPandeBGPsessions Note: LoopbackinterfacesandiBGPsessions Inadditiontotheirphysicalinterfaces,routerscanalsobeconﬁguredwithaspecialloopbackinterface.
Aloop- back interface is a software interface that is always up.
When a loopback interface is conﬁgured on a router, the address associated to this interface is advertised by the intradomain routing protocol.
Consider for example 34 Usingafull-meshofiBGPsessionsissuitableinsmallnetworks.
However,thissolutiondoesnotscaleinlargenetworkscontaining hundredsormorerouterssince n×(n−1) iBGPsessionsmustbeestablishedinadomaincontainingnBGProuters.Largedomainsuseeither 2 RouteReﬂectionRFC4456orconfederationsRFC5065toscaletheiriBGP,butthisgoesbeyondthisintroduction.
35Somerouters,whentheyreceiveaBGPUpdateoveraneBGPsession,setthenexthopofthereceivedroutetooneoftheirownaddresses.
Thisiscallednexthop-self.Seee.g.[WMS2004]foradditionaldetails.
5.3.
RoutinginIPnetworks 185 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 a router with two point-to-point interfaces and one loopback interface.
When a point-to-point interface fails, it becomesunreachableandtheroutercannotreceiveanymorepacketsviathisIPaddress.
Thisisnotthecasefor the loopback interface.
It remains reachable as long as at least one of the router’s interfaces remains up.
iBGP sessionsareusuallyestablishedusingtherouter’sloopbackaddressesasendpoints.
ThisallowstheiBGPsession anditsunderlyingTCPconnectiontoremainupevenifphysicalinterfacesfailontherouters.
NowthatrouterscanlearninterdomainroutesoveriBGPandeBGPsessions,letusexaminewhathappenswhen routerR3sendsapacketdestinedto194.100.1.234.R3forwardsthispackettoR4.R4usesanintradomainrouting protocolandBGP.ItsBGProutingtablecontainsthefollowinglongestpreﬁxmatch: • 194.100.0.0/23via195.100.0.1 Thisroutesindicatesthattoforwardapackettowards194.100.0.0/23, R4needstoforwardthepacketalongthe routetowards195.100.0.1.
However,R4isnotdirectlyconnectedto195.100.0.1.
R4learnedaroutethatmatches thisaddressthankstoitsintradomainroutingprotocolthatdistributedthefollowingroutes: • 195.100.0.0/30via195.100.0.10 • 195.100.0.4/30East • 195.100.0.8/30North • 194.100.2.0/23via195.100.0.10 • 194.100.0.4/23West Tobuilditsforwardingtable,R4mustcombinetherouteslearnedfromtheintradomainroutingprotocolwiththe routeslearnedfromBGP.Thankstoitsintradomainroutingtable,foreachinterdomainrouteR4replacestheBGP nexthop with its shortest path computed by the intradomain routing protocol.
In the ﬁgure above, R4 forwards packetsto194.100.0.0/23via195.100.0.10towhichitisdirectlyconnectedviaitsNorthinterface.R4‘sresulting forwarding table, which associates an outgoing interface for a directly connected preﬁx or a directly connected nexthopandanoutgoinginterfaceforpreﬁxeslearnedviaBGP,isshownbelow: • 194.100.0.0/23via195.100.0.10(North) • 195.100.0.0/30via195.100.0.10(North) • 195.100.0.4/30East • 195.100.0.8/30North • 194.100.2.0/23via195.100.0.10(North) • 194.100.4.0/23West There is thus a coupling between the interdomain and the intradomain routing tables.
If the intradomain routes change, e.g.
due to link failures or changes in link metrics, then the forwarding table must be updated on each routerastheshortestpathtowardsaBGPnexthopmayhavechanged.
ThelastpointtobediscussedbeforelookingattheBGPdecisionprocessisthatanetworkmaycontainrouters thatdonotmaintainanyeBGPsession.Theserouterscanbestubroutersattachedtoasinglerouterinthenetwork orcoreroutersthatresideonthepathbetweentwoborderroutersthatareusingBGPasillustratedintheﬁgure below.
In the scenario above, router R2 needs to be able to forward a packet towards any destination in the 12.0.0.0/8 preﬁxinsideAS30.
SuchapacketwouldneedtobeforwardedbyrouterR5sincethisrouterresidesonthepath betweenR2anditsBGPnexthopattachedtoR4.
TwosolutionscanbeusedtoensurethatR2isabletoforward suchinterdomainpackets: • enableBGPonrouterR5andincludethisrouterintheiBGPfull-mesh.
TwoiBGPsessionswouldbeadded intheﬁgureabove: R2-R5andR4-R5.
ThissolutionworksandisusedbymanyASes.
However,itforces allrouterstohaveenoughresources(CPUandmemory)torunBGPandmaintainalargeforwardingtable • encapsulatetheinterdomainpacketssentthroughtheASsothatrouterR5neverneedstoforwardapacket whosedestinationisoutsidethelocalAS.Differentencapsulationmechanismsexist.
MultiProtocolLabel Switching(MPLS)RFC3031andtheLayer2TunnelingProtocol(L2TP)RFC3931arefrequentlyused in large domains, but a detailed explanation of these techniques is outside the scope of this section.
The 186 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 194.100.2.0/23 AS30 AS10 195.100.0.2 R2 195.100.0.0/30 195.100.0.6 R3 R1 195.100.0.1eBGP 194.100.0.0/23 R3 AS20 iBGP eBGP 195.100.0.9 195.100.0.4/30 194.100.4.0/23 R4 195.100.0.5 Figure5.65: Howtodealwithnon-BGProuters?
simplestencapsulationschemetounderstandisinIPinIPdeﬁnedinRFC2003.Thisencapsulationscheme places an IP packet (called the inner packet), including its payload, as the payload of a larger IP packet (calledtheouterpacket).Itcanbeusedbyborderrouterstoforwardpacketsviaroutersthatdonotmaintain a BGP routing table.
For example, in the ﬁgure above, if router R2 needs to forward a packet towards destination12.0.0.1,itcanaddatthefrontofthispacketanIPv4headerwhosesourceaddressissettoone ofitsIPv4addressesandwhosedestinationaddressisoneoftheIPv4addressesofR4.
TheProtocolﬁeld of the IP header is set to 4 to indicate that it contains an IPv4 packet.
The packet is forwarded by R5 to R4basedontheforwardingtablethatitbuiltthankstoitsintradomainroutingtable.
Uponreceptionofthe packet,R4removestheouterheaderandconsultsits(BGP)forwardingtabletoforwardthepackettowards R3.
TheBGPdecisionprocess Besidestheimportandexportﬁlters,akeydifferencebetweenBGPandtheintradomainroutingprotocolsisthat each domain can deﬁne is own ranking algorithm to determine which route is chosen to forward packets when severalrouteshavebeenlearnedtowardsthesamepreﬁx.
ThisrankingdependsonseveralBGPattributesthatcan beattachedtoaBGProute.
TheﬁrstBGPattributethatisusedtorankBGProutesisthelocal-preference(local-pref)attribute.
Thisattribute isanunsignedintegerthatisattachedtoeachBGProutereceivedoveraneBGPsessionbytheassociatedimport ﬁlter.
When comparing routes towards the same destination preﬁx, a BGP router always prefers the routes with the highestlocal-pref.
IftheBGProuterknowsseveralrouteswiththesamelocal-pref, itprefersamongtheroutes havingthislocal-pref theoneswiththeshortestAS-Path.
The local-pref attribute is often used to prefer some routes over others.
This attribute is always present inside BGPUpdatesexchangedoveriBGPsessions,butneverpresentinthemessagesexchangedovereBGPsessions.
Acommonutilisationoflocal-pref istosupportbackuplinks.
Considerthesituationdepictedintheﬁgurebelow.
AS1wouldalwaysliketousethehighbandwidthlinktosendandreceivepacketsviaAS2andonlyusethebackup linkuponfailureoftheprimaryone.
As BGP routers always prefer the routes with the highest local-pref attribute, this policy can be implemented usingthefollowingimportﬁlteronR1 import: from AS2 RA at R1 set localpref=100; from AS2 RB at R1 set localpref=200; accept ANY Withthisimportﬁlter, alltheBGProuteslearnedfromRBoverthehighbandwidthlinksarepreferredoverthe routeslearnedoverthebackuplink.
Iftheprimarylinkfails,thecorrespondingroutesareremovedfromR1‘sRIB andR1usestheroutelearnedfromRA.R1reusestheroutesviaRBassoonastheyareadvertisedbyRBoncethe R1-RBlinkcomesback.
5.3.
RoutinginIPnetworks 187 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 RA AASS22 RB Backup: 2Mbps Primary: 34Mbps R1 Figure5.66: HowtocreateabackuplinkwithBGP?
TheimportﬁlterabovemodiﬁestheselectionoftheBGProutesinsideAS1.
Thus,itinﬂuencestheroutefollowed bythepacketsforwardedbyAS1.
Inadditiontousingtheprimarylinktosendpackets,AS1wouldliketoreceive itspacketsviathehighbandwidthlink.
Forthis,AS2alsoneedstosetthelocal-pref attributeinitsimportﬁlter.
import: from AS1 R1 at RA set localpref=100; from AS1 R1 at RB set localpref=200; accept AS1 Sometimes,thelocal-pref attributeisusedtopreferacheaplinkcomparedtoamoreexpensiveone.
Forexample, inthenetworkbelow,AS1couldwishtosendandreceivepacketsmainlyviaitsinterdomainlinkwithAS4.
RB AASS33 RA AASS22 R3 Expensive R5 AASS55 Cheap AASS11 R1 R2 AASS44 Figure5.67: Howtopreferacheaplinkoveranmoreexpensiveone?
AS1caninstallthefollowingimportﬁlteronR1toensurethatitalwayssendspacketsviaR2whenithaslearned arouteviaAS2andanotherviaAS4.
import: from AS2 RA at R1 set localpref=100; from AS4 R2 at R1 set localpref=200; accept ANY However,thisimportﬁlterdoesnotinﬂuencehowAS3,forexample,preferssomeroutesoverothers.
Ifthelink betweenAS3andAS2islessexpensivethanthelinkbetweenAS3andAS4,AS3couldsendallitspacketsviaAS2 andAS1wouldreceivepacketsoveritsexpensivelink.
Animportantpointtorememberaboutlocal-pref isthat itcanbeusedtoprefersomeroutesoverotherstosendpackets,butithasnoinﬂuenceontheroutesfollowedby receivedpackets.
Anotherimportantutilisationofthelocal-pref attributeistosupportthecustomer->providerandshared-costpeer- ingrelationships.
Fromaneconomicpointofview,thereisanimportantdifferencebetweenthesethreetypesof peeringrelationships.
Adomainusuallyearnsmoneywhenitsendspacketsoveraprovider->customerrelation- ship.
Ontheotherhand, itmustpayitsproviderwhenitsendspacketsoveracustomer->provider relationship.
188 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Usingashared-costpeeringtosendpacketsisusuallyneutralfromaneconomicperspective.
Totakeintoaccount theseeconomicissues,domainsusuallyconﬁguretheimportﬁltersontheirroutersasfollows: • insertahighlocal-pref attributeintherouteslearnedfromacustomer • insertamediumlocal-pref attributeintherouteslearnedoverashared-costpeering • insertalowlocal-pref attributeintherouteslearnedfromaprovider Withsuchanimportﬁlter,theroutersofadomainalwaysprefertoreachdestinationsviatheircustomerswhenever such a route exists.
Otherwise, they prefer to use shared-cost peering relationships and they only send packets viatheirproviderswhentheydonotknowanyalternateroute.
Aconsequenceofsettingthelocal-pref attribute likethisisthatInternetpathsareoftenasymmetrical.
Considerforexampletheinternetworkshownintheﬁgure below.
AASS22 $ AASS11 AASS33 $ $ $ AASS44 AASS88 $ $ AASS66 AASS55 $ Shared-cost $ Customer-provider AASS77 $$ Figure5.68: AsymmetryofInternetpaths ConsiderinthisinternetworktheroutesavailableinsideAS1toreachAS5.
AS1learnstheAS4:AS6:AS7:AS5path fromAS4,theAS3:AS8:AS5pathfromAS3andtheAS2:AS5pathfromAS2.
Theﬁrstpathischosensinceitwas fromlearnedfromacustomer.
AS5ontheotherhandreceivesthreepathstowardsAS1viaitsproviders.
Itmay selectanyofthesepathstoreachAS1,dependingonhowitprefersoneproviderovertheothers.
ComingbacktotheorganisationofaBGProutershowninﬁgureOrganisationofaBGProuter,thelastpartto bediscussedistheBGPdecisionprocess.
TheBGPDecisionProcessisthealgorithmusedbyrouterstoselect the route to be installed in the FIB when there are multiple routes towards the same preﬁx.
The BGP decision processreceivesasetofcandidateroutestowardsthesamepreﬁxandusessevensteps.
Ateachstep,someroutes areremovedfromthecandidatesetandtheprocessstopswhenthesetonlycontainsoneroute36: 1.
IgnorerouteshavinganunreachableBGPnexthop 2.
Preferrouteshavingthehighestlocal-pref 3.
PreferrouteshavingtheshortestAS-Path 4.
PreferrouteshavingthesmallestMED 5.
PreferrouteslearnedviaeBGPsessionsoverrouteslearnedviaiBGPsessions 6.
Preferrouteshavingtheclosestnext-hop 36SomeBGPimplementationscanbeconﬁguredtoinstallseveralroutestowardsasinglepreﬁxintheirFIBforload-balancingpurposes.
However,thisgoesbeyondthisintroductiontoBGP.
5.3.
RoutinginIPnetworks 189 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 7.
Tiebreakingrules: preferrouteslearnedfromtherouterwithlowestrouterid The ﬁrst step of the BGP decision process ensures that a BGP router does not install in its FIB a route whose nexthop is considered to be unreachable by the intradomain routing protocol.
This could happen, for example, when a router has crashed.
The intradomain routing protocol usually advertises the failure of this router before thefailureoftheBGPsessionsthatitterminates.
ThisruleimpliesthattheBGPdecisionprocessmustbere-run eachtimetheintradomainroutingprotocolreportsachangeinthereachabilityofapreﬁxcontainingoneofmore BGPnexthops.
Thesecondruleallowseachdomaintodeﬁneitsroutingpreferences.
Thelocal-pref attributeissetbytheimport ﬁlteroftherouterthatlearnedarouteoveraneBGPsession.
In contrast with intradomain routing protocols, BGP does not contain an explicit metric.
This is because in the global Internet it is impossible for all domains to agree on a common metric that meets the requirements of all domains.
Despite this, BGP routers prefer routes having a short AS-Path attribute over routes with a long AS- Path.
ThisstepoftheBGPdecisionprocessismotivatedbythefactthatoperatorsexpectthataroutewithalong AS-Path is lower quality than a route with a shorter AS-Path.
However, studies have shown that there was not alwaysastrongcorrelationbetweenthequalityofarouteandthelengthofitsAS-Path[HFPMC2002].
BeforeexplainingthefourthstepoftheBGPdecisionprocess,letusﬁrstdescribetheﬁfthandthesixthstepsof theBGPdecisionprocess.
Thesetwostepsareusedtoimplementhotpotatorouting.
Intuitively,whenadomain implementshotpotatorouting,ittriestoforwardpacketsthataredestinedtoaddressesoutsideofitsdomain,to otherdomainsasquicklyaspossible.
Tounderstandhotpotatorouting,letusconsiderthetwodomainsshownintheﬁgurebelow.AS2advertisespreﬁx 1.0.0.0/8overtheR2-R6andR3-R7peeringlinks.
TheroutersinsideAS1learntworoutestowards1.0.0.0/8: one viaR6-R2andthesecondviaR7-R3.
AASS11 R8 C=50 C=1 R6 R7 C=1 C=98 R2 R0 R3 1.0.0.0/8 AASS22 Figure5.69: Hotandcoldpotatorouting WiththeﬁfthstepoftheBGPdecisionprocess,arouteralwayspreferstousearoutelearnedoveraneBGPsession comparedtoaroutelearnedoveraniBGPsession.
Thus,routerR6(resp.
R7)preferstousetherouteviarouter R2(resp.
R3)toreachpreﬁx1.0.0.0/8.
ThesixthstepoftheBGPdecisionprocesstakesintoaccountthedistance,measuredasthelengthoftheshortest intradomainpath,betweenaBGProuterandtheBGPnexthopforrouteslearnedoveriBGPsessions.
Thisruleis usedonrouterR8intheexampleabove.
Thisrouterhasreceivedtworoutestowards1.0.0.0/8: • 1.0.0.0/8viaR7thatisatadistanceof1fromR8 • 1.0.0.0/8viaR6thatisatadistanceof50fromR8 Theﬁrstroute,viaR7 istheonethatrouterR8prefers,asthisistheroutethatminimisesthecostofforwarding packetsinsideAS1beforesendingthemtoAS2.
190 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Hot potato routing allows AS1 to minimise the cost of forwarding packets towards AS2.
However, there are situations where this is not desirable.
For example, assume that AS1 and AS2 are domains with routers on both theEastandtheWestcoastoftheUS.Inthesetwodomains,thehighmetricassociatedtolinksR6-R8andR0-R2 correspondtothecostofforwardingapacketacrosstheUSA.IfAS2isacustomerthatpaysAS1,itwouldprefer toreceivethepacketsdestinedto1.0.0.0/8viatheR2-R6 linkinsteadoftheR7-R3link.
Thisistheobjectiveof coldpotatorouting.
Cold potato routing is implemented using the Multi-Exit Discriminator (MED) attribute.
This attribute is an optionalBGPattributethatmaybeset37 byborderrouterswhenadvertisingaBGProuteoveraneBGPsession.
The MED attribute is usually used to indicate over an eBGP session the cost to reach the BGP nexthop for the advertised route.
The MED attribute is set by the router that advertises a route over an eBGP session.
In the exampleabove,routerR2sendsU(1.0.0.0/8,R2,AS2,MED=1)whileR3sendsU(1.0.0.0/8,R3,AS2,MED=98).
AssumethattheBGPsessionR7-3istheﬁrsttobeestablished.
R7 sendsU(1.0.0.0/8,R3,AS2,MED=98)toboth R8 and R6.
At this point, all routers inside AS1 send the packets towards 1.0.0.0/8 via R7-R3.
Then, the R6- R2BGPsessionisestablishedandrouterR6 receivesU(1.0.0.0/8,R2,AS2,MED=1).
RouterR6 runsitsdecision processfordestination1.0.0.0/8andselectstherouteviaR2asitschosenroutetoreachthispreﬁxsincethisisthe onlyroutethatitknows.R6sendsU(1.0.0.0/8,R2,AS2,MED=1)toroutersR8andR7.Theybothruntheirdecision processandprefertherouteadvertisedbyR6,asitcontainsthesmallestMED.Now,allroutersinsideAS1forward thepacketsto1.0.0.0/8vialinkR6-R2asexpectedbyAS2.
AsrouterR7 nolongerusestheBGProutelearned viaR3,itmuststopadvertisingitoveriBGPsessionsandsendsW(1.0.0.0/8)overitsiBGPsessionswithR6and R8.
However, router R7 still keeps the route learned from R3 inside its Adj-RIB-In.
If the R6-R2 link fails, R6 sendsW(1.0.0.0/8)overitsiBGPsessionsandrouterR7respondsbysendingU(1.0.0.0/8,R3,AS2,MED=98)over itsiBGPsessions.
Inpractice,theﬁfthstepoftheBGPdecisionprocessisslightlymorecomplex,astheroutestowardsagivenpreﬁx canbelearnedfromdifferentASes.
Forexample,assumethatinﬁgureHotandcoldpotatorouting,1.0.0.0/8is alsoadvertisedbyAS3(notshownintheﬁgure)thathaspeeringlinkswithroutersR6andR8.
IfAS3advertisesa routewhoseMEDattributeissetto2andanotherwithaMEDsetto3,howshouldAS1‘sroutercomparethefour BGProutestowards1.0.0.0/8?
IsaMEDvalueof1fromAS2betterthanaMEDvalueof2fromAS3?
Theﬁfth stepoftheBGPdecisionprocesssolvesthisproblembyonlycomparingtheMEDattributeoftherouteslearned fromthesameneighbourAS.AdditionaldetailsabouttheMEDattributemaybefoundinRFC4451.
Itshould benotedthatusingtheMEDattributemaycausesomeproblemsinBGPnetworksasexplainedin[GW2002].
In practice,theMEDattributeisnotusedoneBGPsessionsunlessthetwodomainsagreetoenableit.
ThelaststepoftheBGPdecisionallowstheselectionofasingleroutewhenaBGProuterhasreceivedseveral routes that are considered as equal by the ﬁrst six steps of the decision process.
This can happen for example in a dual-homed stub attached to two different providers.
As shown in the ﬁgure below, router R1 receives two equallygoodBGProutestowards1.0.0.0/8.Tobreaktheties,eachrouterisidentiﬁedbyauniquerouter-idwhich in practice is one of the IP addresses assigned to the router.
On some routers, the lowest router id step in the BGPdecisionprocessisreplacedbytheselectionoftheoldestrouteRFC5004.
Preferringtheoldestroutewhen breakingtiesisusedtopreferstablepathsoverunstablepaths.
However,adrawbackofthisapproachisthatthe selection of the BGP routes depends on the arrival times of the corresponding messages.
This makes the BGP selectionprocessnon-deterministicandcanleadtoproblemsthataredifﬁculttodebug.
R0 AASS11 1.0.0.0/8 AASS22 R2 R3 AASS33 R1 Figure5.70: Astubconnectedtotwoproviders 37 TheMEDattributecanbeusedoncustomer->provider peeringrelationshipsuponrequestofthecustomer.
Onshared-costpeering relationship,theMEDattributeisonlyenabledwhenthereisaexplicitagreementbetweenthetwopeers.
5.3.
RoutinginIPnetworks 191 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 BGPconvergence In the previous sections, we have explained the operation of BGP routers.
Compared to intradomain routing protocols, a key feature of BGP is its ability to support interdomain routing policies that are deﬁned by each domain as its import and export ﬁlters and ranking process.
A domain can deﬁne its own routing policies and routervendorshaveimplementedmanyconﬁgurationtweakstosupportcomplexroutingpolicies.
However,the routingpolicychosenbyadomainmayinterferewiththeroutingpolicychosenbyanotherdomain.Tounderstand thisissue,letusﬁrstconsiderthesimpleinternetworkshownbelow.
1.0.0.0/8 AASS11 Preferred paths for AS4 Preferred paths for AS3 1.
AS3:AS1 1.
AS4:AS1 2.
AS1 2.
AS1 AASS33 AASS44 Figure5.71: Thedisagreeinternetwork Inthisinternetwork,wefocusontheroutetowards1.0.0.0/8whichisadvertisedbyAS1.
Letusalsoassumethat AS3(resp.
AS4)prefers,e.g.
foreconomicreasons,aroutelearnedfromAS4(AS3)overaroutelearnedfromAS1.
WhenAS1sendsU(1.0.0.0/8,AS1)toAS3andAS4,threesequencesofexchangesofBGPmessagesarepossible: 1.
AS3sendsﬁrstU(1.0.0.0/8,AS3:AS1)toAS4.
AS4haslearnedtworoutestowards1.0.0.0/8.
ItrunsitsBGP decisionprocessandselectstherouteviaAS3anddoesnotadvertisearoutetoAS3 2.
AS4ﬁrstsendsU(1.0.0.0/8,AS3:AS1)toAS3.
AS3haslearnedtworoutestowards1.0.0.0/8.
ItrunsitsBGP decisionprocessandselectstherouteviaAS4anddoesnotadvertisearoutetoAS4 3.
AS3sendsU(1.0.0.0/8,AS3:AS1)toAS4and,atthesametime,AS4sendsU(1.0.0.0/8,AS4:AS1).AS3prefers therouteviaAS4andthussendsW(1.0.0.0/8)toAS4.
Inthemeantime,AS4preferstherouteviaAS3and thussendsW(1.0.0.0/8)toAS3.
UponreceptionoftheBGPWithdraws,AS3andAS4onlyknowthedirect routetowards1.0.0.0/8.
AS3(resp.
AS4)sendsU(1.0.0.0/8,AS3:AS1)(resp.
U(1.0.0.0/8,AS4:AS1))toAS4 (resp.
AS3).
AS3andAS4couldintheorycontinuetoexchangeBGPmessagesforever.
Inpractice,oneof themsendsonemessagefasterthantheotherandBGPconverges.
TheexampleabovehasshownthattheroutesselectedbyBGProutersmaysometimesdependontheorderingof theBGPmessagesthatareexchanged.
OthersimilarscenariosmaybefoundinRFC4264.
From an operational perspective, the above conﬁguration is annoying since the network operators cannot easily predictwhichpathsarechosen.
Unfortunately,thereareevenmoreannoyingBGPconﬁgurations.
Forexample, letusconsidertheconﬁgurationbelowwhichisoftennamedBadGadget[GW1999] In this internetwork, there are four ASes.
AS0 advertises one route towards one preﬁx and we only analyse the routestowardsthispreﬁx.
TheroutingpreferencesofAS1,AS3andAS4arethefollowing: • AS1prefersthepathAS3:AS0overallotherpaths • AS3prefersthepathAS4:AS0overallotherpaths • AS4prefersthepathAS1:AS0overallotherpaths AS0sendsU(p,AS0)toAS1,AS3andAS4.
AsthisistheonlyrouteknownbyAS1,AS3andAS4towardsp,they allselectthedirectpath.
LetusnowconsideronepossibleexchangeofBGPmessages: 1.
AS1sendsU(p,AS1:AS0)toAS3andAS4.
AS4selectsthepathviaAS1sincethisisitspreferredpath.
AS3 stillusesthedirectpath.
2.
AS4advertisesU(p,AS4:AS1:AS0)toAS3.
192 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Preferred paths for AS1 AASS11 1.
AS3:AS0 2. other paths Preferred paths for AS3 1.
AS4:AS0 AASS00 Preferred paths for AS4 2. other paths 1.
AS1:AS0 2. other paths AASS33 AASS44 Figure5.72: Thebadgadgetinternetwork 3.
AS3sendsU(p,AS3:AS0)toAS1andAS4.
AS1selectsthepathviaAS3sincethisisitspreferredpath.
AS4 stillusesthepathviaAS1.
4.
AsAS1haschangeditspath,itsendsU(p,AS1:AS3:AS0)toAS4andW(p)toAS3sinceitsnewpathisvia AS3.
AS4switchesbacktothedirectpath.
5.
AS4sendsU(p,AS4:AS0)toAS1andAS3.
AS3prefersthepathviaAS4.
6.
AS3 sends U(p,AS3:AS4:AS0) to AS1 and W(p) to AS4.
AS1 switches back to the direct path and we are backattheﬁrststep.
This example shows that the convergence of BGP is unfortunately not always guaranteed as some interdomain routingpoliciesmayinterferewitheachotherincomplexways.
[GW1999]haveshownthatcheckingforglobal convergenceiseitherNP-completeorNP-hard.
See[GSW2002]foramoredetaileddiscussion.
Fortunately,therearesomeoperationalguidelines[GR2001][GGR2001]thatcanguaranteeBGPconvergencein theglobalInternet.ToensurethatBGPwillconverge,theseguidelinesconsiderthattherearetwotypesofpeering relationships : customer->provider and shared-cost.
In this case, BGP convergence is guaranteed provided that thefollowingconditionsarefulﬁlled: 1.
Thetopologycomposedofallthedirectedcustomer->providerpeeringlinksisanacyclicgraph 2.
AnASalwaysprefersaroutereceivedfromacustomeroveraroutereceivedfromashared-costpeerora provider.
TheﬁrstguidelineimpliesthattheprovideroftheproviderofASxcannotbeacustomerofASx.Sucharelationship wouldnotmakesensefromaneconomicperspectiveasitwouldimplycircularpayments.
Furthermore,providers areusuallylargerthancustomers.
The second guideline also corresponds to economic preferences.
Since a provider earns money when sending packets to one of its customers, it makes sense to prefer such customer learned routes over routes learned from providers.
[GR2001]alsoshowsthatBGPconvergenceisguaranteedevenifanASassociatesthesamepreference torouteslearnedfromashared-costpeerandrouteslearnedfromacustomer.
Fromatheoreticalperspective,theseguidelinesshouldbeveriﬁedautomaticallytoensurethatBGPwillalways convergeintheglobalInternet.
However,suchaveriﬁcationcannotbeperformedinpracticebecausethiswould forcealldomainstodisclosetheirroutingpolicies(andfewarewillingtodoso)andfurthermoretheproblemis knowntobeNP-hard[GW1999].
Inpractice,researchersandoperatorsexpectthattheseguidelinesareveriﬁed38 inmostdomains.
Thankstothe largeamountofBGPdatathathasbeencollectedbyoperatorsandresearchers39,severalstudieshaveanalysed 38Someresearcherssuchas[MUF+2007]haveshownthatmodellingtheInternettopologyattheAS-levelrequiresmorethantheshared- costandcustomer->providerpeeringrelationships.
However,thereisnopubliclyavailablemodelthatgoesbeyondtheseclassicalpeering relationships.
39 BGP data is often collected by establishing BGP sessions between Unix hosts running a BGP daemon and BGP routers in differ- entASes.
TheUnixhostsstoresallBGPmessagesreceivedandregulardumpsofitsBGProutingtable.
Seehttp://www.routeviews.org, http://www.ripe.net/ris,http://bgp.potaroo.netorhttp://irl.cs.ucla.edu/topology/ 5.3.
RoutinginIPnetworks 193 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 the AS-level topology of the Internet.
[SARK2002] is one of the ﬁrst analysis.
More recent studies include [COZ2008]and[DKF+2007] Based on these studies and [ATLAS2009], the AS-level Internet topology can be summarised as shown in the ﬁgurebelow.
Figure5.73: ThelayeredstructureoftheglobalInternet ThedomainsontheInternetcanbedividedinaboutfourcategoriesaccordingtotheirroleandtheirpositionin theAS-leveltopology.
• thecoreoftheInternetiscomposedofadozen-twentyTier-1ISPs.ATier-1isadomainthathasnoprovider.
SuchanISPhasshared-costpeeringrelationshipswithallotherTier-1ISPsandprovider->customerrela- tionshipswithsmallerISPs.
ExamplesofTier-1ISPsincludesprint,level3oropentransit • theTier-2ISPsarenationalorcontinentalISPsthatarecustomersofTier-1ISPs.
TheseTier-2ISPshave smaller customers and shared-cost peering relationships with other Tier-2 ISPs.
Example of Tier-2 ISPs includeFranceTelecom,Belgacom,BritishTelecom,... • the Tier-3 networks are either stub domains such as enterprise or campus networks networks and smaller ISPs.
TheyarecustomersofTier-1andTier-2ISPsandhavesometimesshared-costpeeringrelationships • the large content providers that are managing large datacenters.
These content providers are producing a growing fraction of the packets exchanged on the global Internet [ATLAS2009].
Some of these content providersarecustomersofTier-1orTier-2ISPs,buttheyoftentrytoestablishshared-costpeeringrelation- ships,e.g.
atIXPs,withmanyTier-1andTier-2ISPs.
DuetothisorganisationoftheInternetandduetotheBGPdecisionprocess,mostAS-levelpathsontheInternet havealengthof3-5AShops.
194 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 5.4 Summary 5.5 Exercises 5.5.1 Principles 1.
Routingprotocolsusedindatanetworksonlyusepositivelinkweights.
Whatwouldhappenwithadistance vectorroutingprotocolinthenetworkbelowthatcontainsanegativelinkweight?
Figure5.74: Simplenetwork 2.
Whenanetworkspecialistdesignsanetwork,oneoftheproblemsthatheneedstosolveistosetthemetrics the links in his network.
In the USA, the Abilene network interconnects most of the research labs and universities.
Theﬁgurebelowshowsthetopology40ofthisnetworkin2009.
Figure5.75: TheAbilenenetwork Inthisnetwork,assumethatallthelinkweightsaresetto1.
Whatisthepathsfollowedbyapacket sentbytherouterlocatedinLosAngelestoreach: • therouterlocatedinNewYork • therouterlocatedinWashington?
IsitpossibletoconﬁgurethelinkmetricssothatthepacketssentbytherouterlocatedinLosAngeles totherouterslocatedinrespectivelyNewYorkandWashingtondonotfollowthesamepath?
IsitpossibletoconﬁgurethelinkweightssothatthepacketssentbytherouterlocatedinLosAngeles torouterlocatedinNewYorkfollowonepathwhilethepacketssentbytherouterlocatedinNewYork totherouterlocatedinLosAngelesfollowacompletelydifferentpath?
40ThisﬁgurewasdownloadedfromtheAbileneobservatoryhttp://www.internet2.edu/observatory/archive/data-views.html.Thisobserva- torycontainsadetaileddescriptionoftheAbilenenetworkincludingdetailednetworkstatisticsandalltheconﬁgurationoftheequipment usedinthenetwork.
5.4.
Summary 195 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 AssumethattherouterslocatedinDenverandKansasCityneedtoexchangelotsofpackets.Canyou conﬁgurethelinkmetricssuchthatthelinkbetweenthesetworoutersdoesnotcarryanypacketsent byanotherrouterinthenetwork?
3.
Intheﬁvenodesnetworkshownbelow,canyouconﬁgurethelinkmetricssothatthepacketssentbyrouter EtorouterAuselinkB->AwhilethepacketssentbyrouterBuselinksB->DandD->A?
Figure5.76: Simpleﬁvenodesnetwork 4.
Intheﬁvenodesnetworkshownabove,canyouconﬁgurethelinkweightssothatthepacketssentbyrouter E(resp.
F)followtheE->B->Apath(resp.
F->D->B->A)?
5.
In the above questions, you have worked on the stable state of the routing tables computed by routing protocols.Letusnowconsiderthetransientproblemsthatmainhappenwhenthenetworktopologychanges 41.
For this, consider the network topology shown in the ﬁgure below and assume that all routers use a distancevectorprotocolthatusessplithorizon.
Figure5.77: Simplenetworkwithredundantlinks Ifyoucomputetheroutingtablesofallroutersinthisnetwork,youwouldobtainatablesuchasthe tablebelow: 41 The main events that can affect the topology of a network are : - the failure of a link.
Measurements performed in IP networks have shown that such failures happen frequently and usually for relatively short periods of time - the addition of one link in the net- work.
This may be because a new link has been provisioned or more frequently because the link failed some time ago and is now back - the failure/crash of a router followed by its reboot.
- a change in the metric of a link by reconﬁguring the routers attached to thelinkSeehttp://totem.info.ucl.ac.be/lisis_tool/lisis-example/forananalysisofthefailuresinsidetheAbilenenetworkinJune2005or http://citeseer.ist.psu.edu/old/markopoulou04characterization.htmlforananalysisofthefailuresaffectingalargerISPnetwork 196 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Destination RoutesonA RoutesonB RoutesonC RoutesonD RoutesonE A 0 1viaA 2viaB 3viaC 4viaD B 1viaB 0 1viaB 2viaC 3viaD C 2viaB 1viaC 0 1viaC 2viaD D 3viaB 2viaC 1viaD 0 1viaD E 4viaB 3viaC 2viaD 1viaE 0 Distancevectorprotocolscanoperateintwodifferentmodes:periodicupdatesandtriggeredupdates.
Periodicupdatesisthedefaultmodeforadistancevectorprotocol.
Forexample, eachroutercould advertiseitsdistancevectoreverythirtyseconds.Withthetriggeredupdatesaroutersendsitsdistance vectorwhenitsroutingtablechanges(andperiodicallywhentherearenochanges).
• Consideradistancevectorprotocolusingsplithorizonandperiodicupdates.
Assumethatthe linkB-Cfails.
BandCupdatetheirlocalroutingtablebuttheywillonlyadvertiseitattheend of their period.
Select one ordering for the periodic updates and every time a router sends its distancevector,indicatethevectorsenttoeachneighborandupdatethetableabove.
Howmany periodsarerequiredtoallowthenetworktoconvergetoastablestate?
• Consider the same distance vector protocol, but now with triggered updates.
When link B-C fails,assumethatBupdatesitsroutingtableimmediatelyandsendsitsdistancevectortoAand D. Assume that both A and D process the received distance vector and that A sends its own distance vector, ... Indicate all the distance vectors that are exchanged and update the table above each time a distance vector is sent by a router (and received by other routers) until all routershavelearnedanewroutetoeachdestination.
Howmanydistancevectormessagesmust beexchangeduntilthenetworkconvergestoastablestate?
6.
Considerthenetworkshownbelow.Inthisnetwork,themetricofeachlinkissetto1exceptlinkA-Bwhose metricissetto4inbothdirections.
Inthisnetwork,therearetwopathswiththesamecostbetweenDand C.Oldrouterswouldrandomlyselectoneoftheseequalcostpathsandinstallitintheirforwardingtable.
RecentroutersareabletouseuptoN equalcostpathstowardsthesamedestination.
Figure5.78: AsimplenetworkrunningOSPF Onrecentrouters,alookupintheforwardingtableforadestinationaddressreturnsasetofoutgoing interfaces.
How would you design an algorithm that selects the outgoing interface used for each packet,knowingthattoavoidreordering,allsegmentsofagivenTCPconnectionshouldfollowthe samepath?
7.
Consider again the network shown above.
After some time, OSPF converges and all routers compute the followingroutingtables: Destination RoutesonA RoutesonB RoutesonC RoutesonD RoutesonE A 0 2viaC 1viaA 3viaB,E 2viaC B 2viaC 0 1viaB 1viaB 2viaD,C C 1viaC 1viaC 0 2viaB,E 1viaC D 3viaC 1viaD 2viaB,E 0 1viaD E 2viaC 2viaC,D 1viaE 1viaE 0 5.5.
Exercises 197 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 An important difference between OSPF and RIP is that OSPF routers ﬂood link state packets that allow the other routers to recompute their own routing tables while RIP routers exchange distance vectors.
ConsiderthatlinkB-C failsandthatrouterBistheﬁrsttodetectthefailure.
Atthispoint, BcannotreachanymoreA,Cand50%ofitspathstowardsEhavefailed.
CcannotreachBanymore andhalfofitspathstowardsDhavefailed.
Router B will ﬂood its updated link state packet through the entire network and all routers will re- computetheirforwardingtable.
Uponreceptionofalinkstatepacket,routersusuallyﬁrstﬂoodthe received link-state packet and then recompute their forwarding table.
Assume that B is the ﬁrst to recomputeitsforwardingtable,followedbyD,A,CandﬁnallyE 8.
Aftereachupdateofaforwardingtable,verifywhichpairsofroutersareabletoexchangepackets.
Provide youranswerusingatablesimilartotheoneshownabove.
9.
Canyouﬁndanorderingoftheupdatesoftheforwardingtablesthatavoidsalltransientproblems?
10.
Considerthenetworkshownintheﬁgurebelowandexplainthepaththatwillbefollowedbythepacketsto reach194.100.10.0/23 Figure5.79: Astubconnectedtooneprovider 11.
Consider,now,asshownintheﬁgurebelowthatthestubASisnowalsoconnectedtoproviderAS789.
Via which providerwill the packets destinedto 194.100.10.0/23 will bereceived by AS4567 ?
Should AS123 changeitsconﬁguration?
12.
Consider that stub shown in the ﬁgure below decides to advertise two /24 preﬁxes instead of its allocated /23preﬁx.
1.
ViawhichproviderdoesAS4567receivethepacketsdestinedto194.100.11.99and194.100.10.1 ?
2.
HowisthereachabilityoftheseaddressesaffectedwhenlinkR1-R3fails?
3.
ProposeaconﬁgurationonR1thatachievesthesameobjectiveastheoneshownintheﬁgurebut alsopreservesthereachabilityofallIPaddressesinsideAS4567ifoneofAS4567‘sinterdomain 198 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.80: Astubconnectedtotwoproviders linksfails?
13.
Consider the network shown in the ﬁgure below.
In this network, each AS contains a single BGP router.
AssumethatR1advertisesasinglepreﬁx.
R1receivesalotofpacketsfromR9.
WithoutanyhelpfromR2, R9orR4,howcouldR1conﬁgureitsBGPadvertisementsuchthatitreceivesthepacketsfromR9viaR3?
Whathappenswhenalinkfails?
14.
Considerthenetworkshowintheﬁgurebelow.
1.
ShowwhichBGPmessagesareexchangedwhenrouterR1advertisespreﬁx10.0.0.0/8.
2.
HowmanyandwhichroutesareknownbyrouterR5?
WhichroutedoesitadvertisetoR6?
3.
AssumenowthatthelinkbetweenR1andR2fails.
Showthemessagesexchangedduetothis event.
WhichBGPmessagesaresenttoR6?
15.
Consider the network shown in the ﬁgure below where R1 advertises a single preﬁx.
In this network, the linkbetweenR1andR2isconsideredasabackuplink.
Itshouldonlybeusedonlywhentheprimarylink (R1-R4) fails.
This can be implemented on R2 by setting a low local-pref to the routes received on link R2-R1 1.
Inthisnetwork,whatarethepathsusedbyallrouterstoreachR1?
2.
AssumenowthatthelinkR1-R4fails.
WhichBGPmessagesareexchangedandwhatarenow thepathsusedtoreachR1?
3.
Link R1-R4 comes back.
Which BGP messages are exchanged and what do the paths used to reachR1become?
16.
OnFebruary22,2008,thePakistanTelecomAuthorityissuedanordertoPakistanISPstoblockaccessto threeIPaddressesbelongingtoyoutube: 208.65.153.238, 208.65.153.253, 208.65.153.251.
Oneoperator noted that these addresses were belonging to the same /24 preﬁx.
Read http://www.ripe.net/news/study- youtube-hijacking.htmltounderstandwhathappenedreally.
1.
Whatshouldhavedoneyoutubetoavoidthisproblem?
5.5.
Exercises 199 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.81: Astubconnectedtotwoproviders Figure5.82: Asimpleinternetwork 200 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure5.83: Asimpleinternetwork Figure5.84: Asimpleinternetworkwithabackuplink 5.5.
Exercises 201 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 2.
Whatkindofsolutionswouldyouproposetoimprovethesecurityofinterdomainrouting?
17.
Therearecurrently13IPv4addressesthatareassociatedtotherootserversoftheDomainNameSystem.
However,http://www.root-servers.org/indicatesthattherearemorethan100differentphysicalserversthat support.
This is a large anycast service.
How would you conﬁgure BGP routers to provide such anycast service?
18.
Considerthenetworkshownintheﬁgurebelow.
Inthisnetwork,R0advertisespreﬁxpandalllinkmetrics aresetto1 • DrawtheiBGPandeBGPsessions • Assume that session R0-R8 is down when R0 advertises p over R0-R7.
What are the BGP messagesexchangedandtherouteschosenbyeachrouterinthenetwork?
• SessionR0-R8isestablishedandR0advertisespreﬁxpoverthissessionaswell • Do the routes selected by each router change if the MED attribute is used on the R7-R6 and R3-R10sessions,butnotontheR4-R9andR6-R8sessions?
• IsitpossibletoconﬁguretheroutersintheR1-R6 networksuchthatR4reachespreﬁxpvia R6-R8whileR2‘usesthe‘R3-R10link?
Figure5.85: AsimpleInternet 19.
The BGP MED attribute is often set at the IGP cost to reach the BGP nexthop of the advertised preﬁx.
However,routerscanalsobeconﬁguredtoalwaysusethesameMEDvaluesforallroutesadvertisedover a given session.
How would you use it in the ﬁgure above so that link R10-R3 is the primary link while R7-R6isabackuplink?
IsthereanadvantageordrawbackofusingtheMEDattributeforthisapplication comparedtolocal-pref ?
20.
Intheﬁgureabove, assumethatthemanagersofR8andR9wouldliketousetheR8-R6 linkasabackup link, but the managers of R4 and R6 do no agree to use the BGP MED attribute nor to use a different local-pref fortherouteslearnedfrom 5.5.2 Practice 1.
ForthefollowingIPv4subnets,indicatethesmallestandthelargestIPv4addressinsidethesubnet: • 8.0.0.0/8 • 172.12.0.0/16 • 200.123.42.128/25 • 12.1.2.0/13 2.
ForthefollowingIPv6subnets,indicatethesmallestandthelargestIPv6addressinsidethesubnet: • FE80::/64 • 2001:db8::/48 • 2001:6a8:3080::/48 202 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 3.
Researchers and network operators collect and expose lots of BGP data.
For this, they establish eBGP sessions between data collection routers and production routers located in operational networks.
Several datacollectionroutersareavailable,themostpopularonesare: • http://www.routeviews.org • http://www.ripe.net/ris Forthisexercise,youwilluseoneoftherouteviewsBGProuters.
Youcanaccessoneoftheserouters byusingtelnet.Onceloggedontherouter,youcanusetherouter’scommandlineinterfacetoanalyse itsBGProutingtable.
telnet route-views.routeviews.org Trying 128.223.51.103...
Connected to route-views.routeviews.org.
Escape character is ’^]’.
C ********************************************************************** Oregon Exchange BGP Route Viewer route-views.oregon-ix.net / route-views.routeviews.org route views data is archived on http://archive.routeviews.org This hardware is part of a grant from Cisco Systems.
Please contact help@routeviews.org if you have questions or comments about this service, its use, or if you might be able to contribute your view.
This router has views of the full routing tables from several ASes.
The list of ASes is documented under "Current Participants" on http://www.routeviews.org/.
************** route-views.routeviews.org is now using AAA for logins.
Login with username "rviews".
See http://routeviews.org/aaa.html ********************************************************************** User Access Verification Username: rviews route-views.oregon-ix.net> This router has eBGP sessions with routers from several ISPs.
See http://www.routeviews.org/peers/route-views.oregon-ix.net.txt for an up-to-date list of all eBGP sessionsmaintainedbythisrouter.
Among all the commands supported by this router, the show ip bgp command is very useful.
This commandtakesanIPv4preﬁxasparameterandallowsyoutoretrievealltheroutesthatthisrouters hasreceivedinitsAdj-RIB-Inforthespeciﬁedpreﬁx.
1.
Useshowipbgp130.104.0.0/16toﬁndthebestpathusedbythisroutertoreachUCLouvain 2.
Knowingthat130.104.0.0/16isannouncedbybelnet(AS2611),whatare,accordingtothisBGP routingtables,theASesthatpeerwithbelnet 3.
DothesameanalysisforoneoftheIPv4preﬁxesassignedtoSkynet(AS5432): 62.4.128.0/17.
Theoutputoftheshowipbgp62.4.128.0/17 revealssomethingstrangeasitseemsthatoneof thepathstowardsthispreﬁxpassestwiceviaAS5432.
Canyouexplainthis?
2905 702 1239 5432 5432 196.7.106.245 from 196.7.106.245 (196.7.106.245) Origin IGP, metric 0, localpref 100, valid, external 4. netkit allows to easily perform experiments by using an emulated environment is is composed of virtual 5.5.
Exercises 203 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 machinesrunningUserModelLinux.
netkitallowstosetupasmallnetworkinalabandconﬁgureitasif youhadaccesstoseveralPCsinterconnectedbyusingcablesandnetworkequipments.
Anetkitlabisdeﬁnedasafewconﬁgurationﬁlesandscripts: lab.conf is a textﬁle that deﬁnes the virtual machines and the network topology.
A simple lab.conf ﬁleisshownbelow.
LAB_DESCRIPTION="a string describing the lab" LAB_VERSION=1.0 LAB_AUTHOR="the author of the lab" LAB_EMAIL="email address of the author" h1[0]="lan" h2[0]="lan" Thisconﬁgurationﬁlerequeststhecreationoftwovirtualmachines,namedh1andh2.
Eachofthesehostshasonenetworkinterface(eth0)thatisconnectedtothelocalareanetworknamed“lan”.
netkitallowstodeﬁneseveralinterfacesonagivenhostandattachthemtodifferentlocalareanetworks.
A host.startup ﬁle for each host (h1.startup and h2.startup in the example above).
This ﬁle is ashellscriptthatisexecutedattheendofthebootofthevirtualhost.
Thisistypicallyinthis scriptthatthenetworkinterfacesareconﬁguredandthedaemonsarelaunched.
Adirectoryfor eachhost(h1andh2intheexampleabove).
Thisdirectoryisusedtostoreconﬁgurationﬁles thatmustbecopiedonthevirtualmachine’sﬁlesystemswhentheyareﬁrstcreated.
netkit contains several scripts that can be used to run a lab.
lstart allows to launch a lab and lhalt allows to halt the machines at the end of a lab.
If you need to exchange ﬁles between the virtual machinesandtheLinuxhostonwhichnetkitruns,notethatthevirtualhostsmountthedirectorythat containstherunninglabin/hostlabandyourhomedirectoryin/hosthome.
Forthisexercise,youwilluseanetkitlabcontaining4hostsandtworouters.
Theconﬁgurationﬁles areavailableexercises/labs/lab-2routers.tar.gz.
Thenetworktopologyofthislabis shownintheﬁgurebelow.
Figure5.86: Thetworouterslab Thelab.conf ﬁleforthislabisshownbelow.
h1[0]="lan1" h2[0]="lan1" h3[0]="lan2" router1[0]="lan1" router1[1]="lan2" router2[0]="lan2" router2[1]="lan3" h4[0]="lan3" Inthisnetwork,wewillusesubnet172.12.1.0/24forlan1,172.12.2.0/24forlan2and172.12.3.0/24 forlan3.
On Linux, the IP addresses assigned on an interface can be conﬁgured by using ifconfig(8).
Whenifconfig(8)isusedwithoutparameters,itlistsalltheexistinginterfacesofthehostwith theirconﬁguration.
Asampleifconfig(8)outputisshownbelow.
host:~# ifconfig eth0 Link encap:Ethernet HWaddr FE:3A:59:CD:59:AD Inet addr:192.168.1.1 Bcast:192.168.1.255 Mask:255.255.255.0 204 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 inet6 addr: fe80::fc3a:59ff:fecd:59ad/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:3 errors:0 dropped:0 overruns:0 frame:0 TX packets:3 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:216 (216.0 b) TX bytes:258 (258.0 b) Interrupt:5 lo Link encap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0 inet6 addr: ::1/128 Scope:Host UP LOOPBACK RUNNING MTU:16436 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:0 RX bytes:0 (0.0 b) TX bytes:0 (0.0 b) This host has two interfaces : the loopback interface (lo with IPv4 address 127.0.0.1 and IPv6 address ::1) and the eth0 interface.
The 192.168.1.1/24 address and a link local IPv6 address (fe80::fc3a:59ff:fecd:59ad/64) have been assigned to interface eth0.
The broadcast address is used in some particular cases, this is outside the scope of this exercise.
ifconfig(8) also provides statisticssuchasthenumberofpacketssentandreceivedoverthisinterface.
Anotherimportantin- formationthatisprovidedbyifconfig(8)isthehardwareaddress(HWaddr)usedbythedatalink layeroftheinterface.
Ontheexampleabove,theeth0interfaceusesthe48bitsFE:3A:59:CD:59:AD hardwareaddress.
YoucanconﬁguretheIPv4addressassignedtoaninterfacebyspecifyingtheaddressandthenetmask.
ifconfig eth0 192.168.1.2 netmask 255.255.255.128 up Youcanalsospecifythepreﬁxlength .. code-block:: text ifconﬁgeth0192.168.1.2/25up Inbothcases,ifconﬁgeth0allowsyoutoverifythattheinterfacehasbeencorrectlyconﬁgured.
eth0 Link encap:Ethernet HWaddr FE:3A:59:CD:59:AD inet addr:192.168.1.2 Bcast:192.168.1.127 Mask:255.255.255.128 inet6 addr: fe80::fc3a:59ff:fecd:59ad/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:3 errors:0 dropped:0 overruns:0 frame:0 TX packets:3 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:216 (216.0 b) TX bytes:258 (258.0 b) Interrupt:5 AnotherimportantcommandonLinuxisroute(8)thatallowstolookatthecontentsoftherouting tablestoredintheLinuxkernelandchangeit.
Forexample,route-nreturnsthecontentsoftheIPv4 routing table.
See route(8) for a detailed description on how you can conﬁgure routes by using thistool.
1.
Useifconfig(8)toconﬁgurethefollowingIPv4addresses: • 172.16.1.11/24oninterfaceeth0onh1 • 172.16.1.12/24oninterfaceeth0onh2 2.
Useroute-ntolookatthecontentsoftheroutingtableonthetwohosts.
3.
Verifybyusingping(8)thath1canreach172.16.1.12 4.
Use ifconfig(8) to conﬁgure IPv4 address 172.16.1.1/24 on the eth0 interface of router1 and172.16.2.1/24ontheeth1interfaceonthisrouter.
5.5.
Exercises 205 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 5.
Since hosts h1 and h2 are attached to a local area network that contains a single router, this routercanactasadefaultrouter.
Addadefaultrouteonh1andh2sothattheycanuserouter1 astheirdefaultroutertoreachanyremoteIPv4address.
Verifybyusingping(8)thath1can reachaddress172.16.2.1.
6.
Whatdoyouneedtoconﬁgureonrouter2,h3andh4sothatallhostsandrouterscanreachall hostsandroutersintheemulatednetwork?Addtheifconﬁgandroutecommandsinthe.startup ﬁlesofallthehostssothatthenetworkiscorrectlyconﬁguredwhenitisstartedbyusinglstart.
5.
UsethenetworkconﬁguredabovetotesthowIPpacketsarefragmented.
Theifconﬁgcommandallowsyou tospecifytheMaximumTransmissionUnit(MTU),i.e.
thelargestsizeoftheframesthatareallowedona giveninterface.
ThedefaultMTUontheeth?
interfacesis1500bytes.
1.
ForceanMTUof500bytesonthethreeinterfacesattachedtolan2.
2.
Useping-s1000tosenda1000bytespingpacketfromh3tooneoftheroutersattachedtolan2andcapture thepacketsontheotherrouterbyusingtcpdump(8).
InwhichorderdoestheemulatedhostsendstheIP fragments?
3.
Useping-s2000tosenda2000bytespingpacketfromh1toh4andcapturethepacketsonlan2andlan3 byusingtcpdump(8).
InwhichorderdoestheemulatedhostsendstheIPfragments?
4.
Fromyourmeasurements,howdoesanemulatedhostgeneratetheidentiﬁersoftheIPpacketsthatitsends ?
5.
Reset the MTU on the eth1 interface of router r1 at 1500 bytes, but leave the MTU on the eth0 interface ofrouterr2at500bytes.
Checkwhetherhosth1canpinghosth4.
Usetcpdump(8)toanalysewhatis happening.
6.
TheRoutingInformationProtocol(RIP)isadistancevectorprotocolthatisoftenusedinsmallIPnetworks.
There are various implementations of RIP.
For this exercise, you will use quagga, an open-source imple- mentationofseveralIProutingprotocolsthatrunsonLinuxandotherUnixcompatibleoperatingsystems.
quagga(8)isinfactasetofdaemonsthatinteracttogetherandwiththeLinuxkernel.
Forthisexercise, you will use two of these daemons : zebra(8) and ripd(8).
zebra(8) is the master daemon that handles the interactions between the Linux kernel routing table and the routing protocols.
ripd(8) is theimplementationoftheRIPprotocol.
ItinteractswiththeLinuxroutingtablesthroughthezebra(8) daemon.
TouseaLinuxrealorvirtualmachineasarouter,youneedtoﬁrstconﬁguretheIPaddressesofthein- terfacesofthemachine.
Oncethisconﬁgurationhasbeenveriﬁed,youcanconﬁgurethezebra(8) and ripd(8) daemons.
The conﬁguration ﬁles for these daemons reside in /etc/zebra.
The ﬁrst conﬁgurationﬁleis/etc/zebra/daemons.
Itliststhedaemonsthatarelaunchedwhenzebraisstarted by/etc/init.d/zebra.
Toenableripd(8)andzebra(8),thisﬁlewillbeconﬁguredasfollows.
# This file tells the zebra package # which daemons to start.
# Entries are in the format: <daemon>=(yes|no|priority) # where ’yes’ is equivalent to infinitely low priority, and # lower numbers mean higher priority.
Read # /usr/doc/zebra/README.Debian for details.
# Daemons are: bgpd zebra ospfd ospf6d ripd ripngd zebra=yes bgpd=no ospfd=yes ospf6d=no ripd=no ripngd=no Thesecondconﬁgurationﬁleisthe/etc/zebra/zebra.conf ﬁle.Itdeﬁnestheglobalconﬁgurationrules thatapplytozebra(8).
Forthisexercise,weusethedefaultconﬁgurationﬁleshownbelow.
!
-*- zebra -*- !
!
zebra configuration file !
206 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 hostname zebra password zebra enable password zebra !
!
Static default route sample.
!
!ip route 0.0.0.0/0 203.181.89.241 !
log file /var/log/zebra/zebra.log Inthezebraconﬁgurationﬁle, linesbeginningwith!
arecomments.
Thisconﬁgurationdeﬁnesthe hostnameaszebraandtwopasswords.
Thedefaultpassword(passwordzebra)istheonethatmust be given when connecting to the zebra(8) management console over a TCP connection.
This managementconsolecanbeuselikeashellonaUnixhosttospecifycommandstothezebra(8) daemons.
The second one (enable password zebra) speciﬁes the password to be provided before giving commands that change the conﬁguration of the daemon.
It is also possible to specify static routesinthisconﬁgurationﬁle,butwedonotusethisfacilityinthisexercise.
Thelastparameterthat isspeciﬁedisthelogﬁlewherezebra(8)writesdebugginginformation.
Additionalinformation aboutquaggaareavailablefromhttp://www.quagga.net/docs/docs-info.php Themostinterestingconﬁgurationﬁleforthisexerciseisthe/etc/zebra/ripd.conf ﬁle.
Itcontainsall theparametersthatarespeciﬁctotheoperationoftheRIPprotocol.
Asampleripd(8)conﬁgura- tionﬁleisshownbelow.
!
hostname ripd password zebra enable password zebra !
router rip network 100.1.0.0/16 redistribute connected !
log file /var/log/zebra/ripd.log Thisconﬁgurationﬁlesshownthetwodifferentwaystoconﬁgureripd(8).
Thestatementrouter ripindicatesthebeginningoftheconﬁgurationfortheRIProutingprotocol.
Theindentedlinesthat follow are part of the conﬁguration of this protocol.
The ﬁrst line, network 100.1.0.0/16 is used to enable RIP on the interface whose IP subnet matches 100.1.0.0/16.
The second line, redistribute connectedindicatesthatallthesubnetworksthataredirectlyconnectedontheroutershouldbeadver- tised.
When this conﬁguration line is used, ripd(8) interacts with the Linux kernel routing table andadvertisesallthesubnetworksthataredirectlyconnectedontherouter.
Ifanewinterfaceisen- abledandconﬁguredontherouter,itssubnetworkpreﬁxwillbeautomaticallyadvertised.
Similarly, thesubnetworkpreﬁxwillbeautomaticallyremovedifthesubnetworkinterfaceisshutdown.
To experiment with RIP, you will use the emulated routers shown in the ﬁgure below.
You can downloadtheentirelabfromexercises/labs/lab-5routers-rip.tar.gz Figure5.87: Theﬁverouterslab 5.5.
Exercises 207 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Thelab.conf describingthetopologyandtheinterfacesusedonallhostsisshownbelow/ r1[0]="A" r1[1]="B" r1[2]="F" r1[3]="V" r2[0]="A" r2[1]="C" r2[2]="W" r3[0]="B" r3[1]="C" r3[2]="D" r3[3]="X" r4[0]="D" r4[1]="E" r4[2]="Y" r5[0]="E" r5[1]="F" r5[2]="Z" Therearetwotypesofsubnetworksinthistopology.
Thesubnetworksfromthe172.16.0.0/16preﬁx areusedonthelinksbetweenrouterswhilethesubnetworksfromthe192.168.0.0/16preﬁxareused onthelocalareanetworksthatareattachedtoasinglerouter.
Aroutercanbeconﬁguredintwodifferentways: byspecifyingconﬁgurationﬁlesandbytypingthe commandsdirectlyontherouterbyusingtelnet(1).
Theﬁrstfourroutershavebeenconﬁgured intheprovidedconﬁgurationﬁles.
Lookatr1.startupandtheconﬁgurationsﬁlesinr1/tmp/zebrain thelab’sdirectoryforrouterr1.
Ther?.startupﬁlescontaintheifconfig(8)commandsthatare usedtoconﬁguretheinterfacesofeachvirtualrouter.
Theconﬁgurationﬁleslocatedinr?/tmp/zebra arealsocopiedautomaticallyonthevirtualrouterwhenitboots.
1.
Launch the lab by using lstart and verify that router r1 can reach 192.168.1.1, 192.168.2.2, 192.168.3.3 and 192.168.4.4.
You can also traceroute(8) to determine what is the route followedbyyourpackets.
2.
The ripd(8) daemon can also be conﬁgured by typing commands over a TCP connection.
ripd(8) listens on port 2602.
On router r1, use telnet 127.0.0.1 2602 to connect to the ripd(8) daemon.
The default password is zebra.
Once logged on the ripd(8) daemon, youreachthe>promptwhereyoucanquerythestatusoftherouter.
Bytyping?
attheprompt, you will ﬁnd the list of supported commands.
The show command is particularly useful, type show?
toobtainthelistofitssuboptions.
Forexample,showipripwillreturntheroutingtable thatismaintainedbytheripd(8)daemon.
3.
Disable interface eth3 on router r1 by typing ifconﬁg eth3 down on this router.
Verify the impact of this command on the routing tables of the other routers in the network.
Re-enable thisinterfacebytypingifconﬁgeth3up.
4.
Dothesamewiththeeth1interfaceonrouterr3.
5.
Editthe /etc/zebra/ripd.conf conﬁgurationﬁle onrouterr5 sothat thisrouterbecomes partof thenetwork.
Verifythat192.168.5.5isreachablebyallroutersinsidethenetwork.
7.
The Open Shortest Path First (OSPF) protocol is a link-state protocol that is often used in en- terprise IP networks.
OSPF is implemented in the ospfd(8) daemon that is part of quagga.
We use the same topology as in the previous exercise.
The netkit lab may be downloaded from exercises/labs/lab-5routers-ospf.tar.gz.
The ospfd(8) daemon supports a more complex conﬁguration that the ripd(8) daemon.
A sampleconﬁgurationisshownbelow.
!
hostname ospfd password zebra enable password zebra !
208 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 interface eth0 ip ospf cost 1 interface eth1 ip ospf cost 1 interface eth2 ip ospf cost 1 interface eth3 ip ospf cost 1 !
router ospf router-id 192.168.1.1 network 172.16.1.0/24 area 0.0.0.0 network 172.16.2.0/24 area 0.0.0.0 network 172.16.3.0/24 area 0.0.0.0 network 192.168.1.0/24 area 0.0.0.0 passive-interface eth3 !
log file /var/log/zebra/ospfd.log Inthisconﬁgurationﬁle,theipospfcost1specifyametricof1foreachinterface.
Theospfd(8) conﬁguration is composed of three parts.
First, each router must have one identiﬁer that is unique insidethenetwork.
Usually,thisidentiﬁerisoneoftheIPaddressesassignedtotherouter.
Second, eachsubnetworkontherouterisassociatedwithanarea.
Inthisexample,weonlyusethebackbone area(i.e.
0.0.0.0).
ThelastcommandspeciﬁesthattheOSPFHellomessagesshouldnotbesentover interfaceeth3althoughitssubnetworkwillbeadvertisedbytherouter.Suchacommandisoftenused oninterfacesthatareattachedtoendhoststoensurethatnoproblemwilloccurifastudentconﬁgures asoftwareOSPFrouteronhislaptopattachedtothisinterface.
Thenetkitlabcontainsalreadytheconﬁgurationforroutersr1-r4.
Theospfd(8)daemonlistensonTCPport2604.YoucanfollowtheevolutionoftheOSPFprotocol byusingtheshowipospf?
commands.
1.
Launch the lab by using lstart and verify that the 192.168.1.1, 192.168.2.2, 192.168.3.3 and 192.168.4.4addressesarereachablefromanyrouterinsidethenetwork.
2.
Conﬁgure router r5 by changing the /etc/zebra/ospfd.conf ﬁle and restart the daemon.
Verify thatthe192.168.5.5addressisreachablefromanyrouterinsidethenetwork.
3.
Howcanyouupdatethenetworkconﬁgurationsothatthepacketssentbyrouterr1torouterr5 usethedirectlinkbetweenthetworouterswhilethepacketssentbyr5areforwardedviar4?
4.
Disableinterfaceeth3onrouterr1andseehowquicklythenetworkconverges?Youcanfollow theevolutionoftheroutingtableonarouterbytypingnetstat-rnc.
Re-enableinterfaceeth3on routerr1.
5.
Change the MTU of eth0 on router r1 but leave it unchanged on interface eth0 of router r2.
Whatistheimpactofthischange?
Canyouexplainwhy?
6.
Disableinterfaceeth1onrouterr3andseehowquicklythenetworkconverges?
Re-enablethis interface.
7.
Haltrouterr2byusingvcrashr2.
Howquicklydoesthenetworkreacttothisfailure?
5.5.
Exercises 209 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 210 Chapter5.
Thenetworklayer Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor Foundation6 CHAPTER The datalink layer and the Local Area Networks Thedatalinklayeristhelowestlayerofthereferencemodelthatwediscussindetail.
Asmentionedpreviously, therearetwotypesofdatalinklayers.
Theﬁrstdatalinklayersthatappearedaretheonesthatareusedonpoint- to-pointlinksbetweendevicesthataredirectlyconnectedbyaphysicallink.
Wewillbrieﬂydiscussoneofthese datalink layers in this chapter.
The second type of datalink layers are the ones used in Local Area Networks (LANs).
The main difference between the point-to-point and the LAN datalink layers is that the latter need to regulatetheaccesstotheLocalAreaNetworkwhichisusuallyasharedmedium.
This chapter is organised as follows.
We ﬁrst discuss the principles of the datalink layer as well as the services thatitusesfromthephysicallayer.
WethendescribeinmoredetailseveralMediumAccessControlalgorithms that are used in Local Area Networks to regulate the access to the shared medium.
Finally we discuss in detail importantdatalinklayertechnologieswithanemphasisonEthernetandWiFinetworks.
6.1 Principles Thedatalinklayerusestheserviceprovidedbythephysicallayer.
Althoughtherearemanydifferentimplemen- tationsofthephysicallayerfromatechnologicalperspective,theyallprovideaservicethatenablesthedatalink layer to send and receive bits between directly connected devices.
The datalink layer receives packets from the networklayer.
Twodatalinklayerentitiesexchangeframes.
Asexplainedinthepreviouschapter,mostdatalink layer technologies impose limitations on the size of the frames.
Some technologies only impose a maximum framesize,othersenforcebothminimumandmaximumframessizesandﬁnallysometechnologiesonlysupport asingleframesize.
Inthelattercase, thedatalinklayerwillusuallyincludeanadaptationsublayertoallowthe networklayertosendandreceivevariable-lengthpackets.
Thisadaptationlayermayincludefragmentationand reassemblymechanisms.
Figure6.1: Thedatalinklayerandthereferencemodel Thephysicallayerservicefacilitatesthesendingandreceivingofbits.
Furthermore,itisusuallyfarfromperfect asexplainedintheintroduction: • thePhysicallayermaychange,e.g.duetoelectromagneticinterferences,thevalueofabitbeingtransmitted 211 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • thePhysicallayermaydelivermorebitstothereceiverthanthebitssentbythesender • thePhysicallayermaydeliverfewerbitstothereceiverthanthebitssentbythesender Thedatalinklayermustallowendsystemstoexchangeframescontainingpacketsdespitealloftheselimitations.
On point-to-point links and Local Area Networks, the ﬁrst problem to be solved is how to encode a frame as a sequenceofbits,sothatthereceivercaneasilyrecoverthereceivedframedespitethelimitationsofthephysical layer.
If the physical layer were perfect, the problem would be very simple.
The datalink layer would simply need to deﬁne how to encode each frame as a sequence of consecutive bits.
The receiver would then easily be able to extracttheframesfromthereceivedbits.
Unfortunately,theimperfectionsofthephysicallayermakethisframing problemslightlymorecomplex.Severalsolutionshavebeenproposedandareusedinpracticeindifferentdatalink layertechnologies.
6.1.1 Framing This is the framing problem.
It can be deﬁned as : “How does a sender encode frames so that the receiver can efﬁcientlyextractthemfromthestreamofbitsthatitreceivesfromthephysicallayer”.
Aﬁrstsolutiontosolvetheframingproblemistorequirethephysicallayertoremainidleforsometimeafterthe transmissionofeachframe.
Theseidleperiodscanbedetectedbythereceiverandserveasamarkertodelineate frameboundaries.
Unfortunately,thissolutionisnotsufﬁcientfortworeasons.
First,somephysicallayerscannot remain idle and always need to transmit bits.
Second, inserting an idle period between frames decreases the maximumbandwidththatcanbeachievedbythedatalinklayer.
Some physical layers provide an alternative to this idle period.
All physical layers are able to send and receive physical symbols that represent values 0 and 1.
However, for various reasons that are outside the scope of this chapter,severalphysicallayersareabletoexchangeotherphysicalsymbolsaswell.
Forexample,theManchester encodingusedinseveralphysicallayerscansendfourdifferentsymbols.TheManchesterencodingisadifferential encodingschemeinwhichtimeisdividedintoﬁxed-lengthperiods.
Eachperiodisdividedintwohalvesandtwo different voltage levels can be applied.
To send a symbol, the sender must set one of these two voltage levels duringeachhalfperiod.
Tosenda1(resp.
0),thesendermustsetahigh(resp.
low)voltageduringtheﬁrsthalf of the period and a low (resp.
high) voltage during the second half.
This encoding ensures that there will be a transitionatthemiddleofeachperiodandallowsthereceivertosynchroniseitsclocktothesender’sclock.
Apart fromtheencodingsfor0and1,theManchesterencodingalsosupportstwoadditionalsymbols: InvH andInvB where the same voltage level is used for the two half periods.
By deﬁnition, these two symbols cannot appear insideaframewhichisonlycomposedof0and1.
Sometechnologiesusethesespecialsymbolsasmarkersfor thebeginningorendofframes.
Figure6.2: Manchesterencoding Unfortunately,multi-symbolencodingscannotbeusedbyallphysicallayersandagenericsolutionwhichcanbe usedwithanyphysicallayerthatisabletotransmitandreceiveonly0and1isrequired.
Thisgenericsolutionis calledstufﬁngandtwovariantsexist: bitstufﬁngandcharacterstufﬁng.
Toenableareceivertoeasilydelineate theframeboundaries,thesetwotechniquesreservespecialbitstringsasframeboundarymarkersandencodethe framessothatthesespecialbitstringsdonotappearinsidetheframes.
Bit stufﬁng reserves the 01111110 bit string as the frame boundary marker and ensures that there will never be six consecutive 1 symbols transmitted by the physical layer inside a frame.
With bit stufﬁng, a frame is sent as follows.
First,thesendertransmitsthemarker,i.e.
01111110.
Then,itsendsallthebitsoftheframeandinserts 212 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 an additional bit set to 0 after each sequence of ﬁve consecutive 1 bits.
This ensures that the sent frame never containsasequenceofsixconsecutivebitssetto1.
Asaconsequence,themarkerpatterncannotappearinsidethe framesent.
Themarkerisalsosenttomarktheendoftheframe.
Thereceiverperformstheoppositetodecodea receivedframe.
Itﬁrstdetectsthebeginningoftheframethankstothe01111110marker.
Then,itprocessesthe receivedbitsandcountsthenumberofconsecutivebitssetto1.
Ifa0followsﬁveconsecutivebitssetto1,thisbit isremovedsinceitwasinsertedbythesender.
Ifa1followsﬁveconsecutivebitssetsto1,itindicatesamarkerif itisfollowedbyabitsetto0.
Thetablebelowillustratestheapplicationofbitstufﬁngtosomeframes.
Originalframe Transmittedframe 0001001001001001001000011 01111110000100100100100100100001101111110 0110111111111111111110010 01111110011011111011111011111011001001111110 01111110 0111111001111101001111110 Forexample,considerthetransmissionof0110111111111111111110010.Thesenderwillﬁrstsendthe01111110 markerfollowedby011011111.Aftertheseﬁveconsecutivebitssetto1,itinsertsabitsetto0followedby11111.
A new 0 is inserted, followed by 11111.
A new 0 is inserted followed by the end of the frame 110010 and the 01111110marker.
Bitstufﬁngincreasesthenumberofbitsrequiredtotransmiteachframe.Theworstcaseforbitstufﬁngisofcourse a long sequence of bits set to 1 inside the frame.
If transmission errors occur, stuffed bits or markers can be in error.
Inthesecases,theframeaffectedbytheerrorandpossiblythenextframewillnotbecorrectlydecodedby thereceiver,butitwillbeabletoresynchroniseitselfatthenextvalidmarker.
Bit stufﬁng can be easily implemented in hardware.
However, implementing it in software is difﬁcult given the higher overhead of bit manipulations in software.
Software implementations prefer to process characters than bits,software-baseddatalinklayersusuallyusecharacterstufﬁng.
Thistechniqueoperatesonframesthatcontain an integer number of 8-bit characters.
Some characters are used as markers to delineate the frame boundaries.
ManycharacterstufﬁngtechniquesusetheDLE,STX andETX charactersoftheASCIIcharacterset.
DLESTX (resp.
DLEETX)isusedtomarkthebeginning(end)ofaframe.
Whentransmittingaframe, thesenderaddsa DLEcharacteraftereachtransmittedDLEcharacter.
Thisensuresthatnoneofthemarkerscanappearinsidethe transmittedframe.
ThereceiverdetectstheframeboundariesandremovesthesecondDLE whenitreceivestwo consecutiveDLEcharacters.
Forexample,totransmitframe123DLESTX4,asenderwillﬁrstsendDLESTX asamarker,followedby123DLE.Then,thesendertransmitsanadditionalDLE characterfollowedbySTX4 andtheDLEETXmarker.
Originalframe Transmittedframe 1234 DLESTX1234DLEETX 123DLESTX4 DLESTX123DLEDLESTX4DLEETX DLESTXDLEETX DLESTXDLEDLESTXDLEDLEETXDLEETX Characterstufﬁng,likebitstufﬁng,increasesthelengthofthetransmittedframes.Forcharacterstufﬁng,theworst frameisaframecontainingmanyDLEcharacters.
Whentransmissionerrorsoccur,thereceivermayincorrectly decodeoneortwoframes(e.g.
iftheerrorsoccurinthemarkers).
However,itwillbeabletoresynchroniseitself withthenextcorrectlyreceivedmarkers.
6.1.2 Error detection Besidesframing,datalinklayersalsoincludemechanismstodetectandsometimesevenrecoverfromtransmission error.
Toallowareceivertodetecttransmissionerrors,asendermustaddsomeredundantinformationasanerror detectioncodetotheframesent.Thiserrordetectioncodeiscomputedbythesenderontheframethatittransmits.
Whenthereceiverreceivesaframewithanerrordetectioncode,itrecomputesitandveriﬁeswhetherthereceived errordetectioncodematchesthecomputererrordetectioncode.Iftheymatch,theframeisconsideredtobevalid.
Manyerrordetectionschemesexistandentirebookshavebeenwrittenonthesubject.
Adetaileddiscussionof these techniques is outside the scope of this book, and we will only discuss some examples to illustrate the key principles.
Tounderstanderrordetectioncodes, letusconsidertwodevicesthatexchangebitstringscontainingN bits.
To allow the receiver to detect a transmission error, the sender converts each string of N bits into a string of N+r bits.
Usually, the r redundant bits are added at the beginning or the end of the transmitted bit string, but some techniquesinterleaveredundantbitswiththeoriginalbits.
Anerrordetectioncodecanbedeﬁnedasafunction thatcomputestherredundantbitscorrespondingtoeachstringofN bits.
Thesimplesterrordetectioncodeisthe 6.1.
Principles 213 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 paritybit.
Therearetwotypesofparityschemes: evenandoddparity.
Withtheeven(resp.
odd)parityscheme, theredundantbitischosensothataneven(resp.
odd)numberofbitsaresetto1inthetransmittedbitstringof N+rbits.
Thereceivercaneasilyrecomputetheparityofeachreceivedbitstringanddiscardthestringswithan invalidparity.
Theparityschemeisoftenusedwhen7-bitcharactersareexchanged.
Inthiscase,theeighthbitis oftenaparitybit.
Thetablebelowshowstheparitybitsthatarecomputedforbitstringscontainingthreebits.
3bitsstring Oddparity Evenparity 000 1 0 001 0 1 010 0 1 100 0 1 111 0 1 110 1 0 101 1 0 011 1 0 Theparitybitallowsareceivertodetecttransmissionerrorsthathaveaffectedasinglebitamongthetransmitted N+rbits.
Iftherearetwoormorebitsinerror,thereceivermaynotnecessarilybeabletodetectthetransmission error.
More powerful error detection schemes have been deﬁned.
The Cyclical Redundancy Checks (CRC) are widely used in datalink layer protocols.
An N-bits CRC can detect all transmission errors affecting a burst of lessthanNbitsinthetransmittedframeandalltransmissionerrorsthataffectanoddnumberofbits.
Additional detailsaboutCRCsmaybefoundin[Williams1993].
It is also possible to design a code that allows the receiver to correct transmission errors.
The simplest error correctioncodeisthetriplemodularredundancy(TMR).Totransmitabitsetto1(resp.
0),thesendertransmits 111(resp.
000).
Whentherearenotransmissionerrors,thereceivercandecode111as1.
Iftransmissionerrors haveaffectedasinglebit,thereceiverperformsmajorityvotingasshowninthetablebelow.
Thisschemeallows thereceivertocorrectalltransmissionerrorsthataffectasinglebit.
Receivedbits Decodedbit 000 0 001 0 010 0 100 0 111 1 110 1 101 1 011 1 Othermorepowerfulerrorcorrectioncodeshavebeenproposedandareusedinsomeapplications.TheHamming Codeisaclevercombinationofparitybitsthatprovideserrordetectionandcorrectioncapabilities.
Inpractice,datalinklayerprotocolscombinebitstufﬁngorcharacterstufﬁngwithalengthindicationintheframe header and a checksum or CRC.
The checksum/CRC is computed by the sender and placed in the frame before applyingbit/characterstufﬁng.
6.2 Medium Access Control Point-to-point datalink layers need to select one of the framing techniques described above and optionally add retransmission algorithms such as those explained for the transport layer to provide a reliable service.
Datalink layers for Local Area Networks face two additional problems.
A LAN is composed of several hosts that are attachedtothesamesharedphysicalmedium.
Fromaphysicallayerperspective,aLANcanbeorganisedinfour differentways: • abus-shapednetworkwhereallhostsareattachedtothesamephysicalcable • aring-shapedwhereallhostsareattachedtoanupstreamandadownstreamnodesothattheentirenetwork formsaring • astar-shapednetworkwhereallhostsareattachedtothesamedevice 214 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 • awirelessnetworkwhereallhostscansendandreceiveframesusingradiosignals These four basic physical organisations of Local Area Networks are shown graphically in the ﬁgure below.
We willﬁrstfocusononephysicalorganisationatatime.
Figure6.3: Bus,ringandstar-shapedLocalAreaNetwork ThecommonproblemamongallofthesenetworkorganisationsishowtoefﬁcientlysharetheaccesstotheLocal Area Network.
If two devices send a frame at the same time, the two electrical, optical or radio signals that correspond to these frames will appear at the same time on the transmission medium and a receiver will not be abletodecodeeitherframe.Suchsimultaneoustransmissionsarecalledcollisions.Acollisionmayinvolveframes transmittedbytwoormoredevicesattachedtotheLocalAreaNetwork.
Collisionsarethemaincauseoferrors inwiredLocalAreaNetworks.
AllLocalAreaNetworktechnologiesrelyonaMediumAccessControlalgorithmtoregulatethetransmissionsto eitherminimiseoravoidcollisions.
TherearetwobroadfamiliesofMediumAccessControlalgorithms: 1.
Deterministic or pessimistic MAC algorithms.
These algorithms assume that collisions are a very severe problemandthattheymustbecompletelyavoided.
Thesealgorithmsensurethatatanytime,atmostone deviceisallowedtosendaframeontheLAN.Thisisusuallyachievedbyusingadistributedprotocolwhich electsonedevicethatisallowedtotransmitateachtime.
AdeterministicMACalgorithmensuresthatno collisionwillhappen,butthereissomeoverheadinregulatingthetransmissionofallthedevicesattached totheLAN.
2.
Stochastic or optimistic MAC algorithms.
These algorithms assume that collisions are part of the normal operationofaLocalAreaNetwork.
Theyaimtominimisethenumberofcollisions,buttheydonottryto avoidallcollisions.
Stochasticalgorithmsareusuallyeasiertoimplementthandeterministicones.
We ﬁrst discuss a simple deterministic MAC algorithm and then we describe several important optimistic algo- rithms,beforecomingbacktoadistributedanddeterministicMACalgorithm.
6.2.1 Static allocation methods AﬁrstsolutiontosharetheavailableresourcesamongallthedevicesattachedtooneLocalAreaNetworkisto deﬁne, apriori, thedistributionofthetransmissionresourcesamongthedifferentdevices.
IfN devicesneedto sharethetransmissioncapacitiesofaLANoperatingatbMbps,eachdevicecouldbeallocatedabandwidthof b N Mbps.
LimitedresourcesneedtobesharedinotherenvironmentsthanLocalAreaNetworks.
Sincetheﬁrstradiotrans- missions by Marconi more than one century ago, many applications that exchange information through radio signals have been developed.
Each radio signal is an electromagnetic wave whose power is centered around a givenfrequency.
Theradiospectrumcorrespondstofrequenciesrangingbetweenroughly3KHzand300GHz.
Frequencyallocationplansnegotiatedamonggovernmentsreservemostfrequencyrangesforspeciﬁcapplications suchasbroadcastradio,broadcasttelevision,mobilecommunications,aeronauticalradionavigation,amateurra- dio,satellite,etc.
Eachfrequencyrangeisthensubdividedintochannelsandeachchannelcanbereservedfora givenapplication,e.g.
aradiobroadcasterinagivenregion.
Frequency Division Multiplexing (FDM) is a static allocation scheme in which a frequency is allocated to each deviceattachedtothesharedmedium.
Aseachdeviceusesadifferenttransmissionfrequency,collisionscannot 6.2.
MediumAccessControl 215 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 occur.
Inopticalnetworks,avariantofFDMcalledWavelengthDivisionMultiplexing(WDM)canbeused.
An opticalﬁbercantransportlightatdifferentwavelengthswithoutinterference.
WithWDM,adifferentwavelength isallocatedtoeachofthedevicesthatsharethesameopticalﬁber.
TimeDivisionMultiplexing(TDM)isastaticbandwidthallocationmethodthatwasinitiallydeﬁnedforthetele- phonenetwork.
Intheﬁxedtelephonenetwork, avoiceconversationisusuallytransmittedasa64Kbpssignal.
Thus, a telephone conservation generates 8 KBytes per second or one byte every 125 microsecond.
Telephone conversationsoftenneedtobemultiplexedtogetheronasingleline.
Forexample,inEurope,thirty64Kbpsvoice signalsaremultiplexedoverasingle2Mbps(E1)line.
ThisisdonebyusingTimeDivisionMultiplexing(TDM).
TDM divides the transmission opportunities into slots.
In the telephone network, a slot corresponds to 125 mi- croseconds.
Apositioninsideeachslotisreservedforeachvoicesignal.
TheﬁgurebelowillustratesTDMona linkthatisusedtocarryfourvoiceconversations.
Theverticallinesrepresenttheslotboundariesandtheletters the different voice conversations.
One byte from each voice conversation is sent during each 125 microsecond slot.
Thebytecorrespondingtoagivenconversationisalwayssentatthesamepositionineachslot.
Figure6.4: Time-divisionmultiplexing TDMasshownabovecanbecompletelystatic,i.e.
thesameconversationsalwayssharethelink,ordynamic.
In thelattercase,thetwoendpointsofthelinkmustexchangemessagesspecifyingwhichconversationuseswhich byte inside each slot.
Thanks to these signalling messages, it is possible to dynamically add and remove voice conversationsfromagivenlink.
TDM and FDM are widely used in telephone networks to support ﬁxed bandwidth conversations.
Using them in Local Area Networks that support computers would probably be inefﬁcient.
Computers usually do not send informationataﬁxedrate.
Instead,theyoftenhaveanon-offbehaviour.
Duringtheonperiod,thecomputertries tosendatthehighestpossiblerate,e.g.
totransferaﬁle.
Duringtheoffperiod,whichisoftenmuchlongerthan theonperiod,thecomputerdoesnottransmitanypacket.
Usingastaticallocationschemeforcomputersattached to a LAN would lead to huge inefﬁciencies, as they would only be able to transmit at 1 of the total bandwidth N during their on period, despite the fact that the other computers are in their off period and thus do not need to transmitanyinformation.
ThedynamicMACalgorithmsdiscussedintheremainderofthischapteraimsolvethis problem.
6.2.2 ALOHA Inthe1960s,computersweremainlymainframeswithafewdozenterminalsattachedtothem.
Theseterminals wereusuallyinthesamebuildingasthemainframeandweredirectlyconnectedtoit.
Insomecases,theterminals were installed in remote locations and connected through a modem attached to a dial-up line.
The university of Hawaii chose a different organisation.
Instead of using telephone lines to connect the distant terminals, they developedtheﬁrstpacketradiotechnology[Abramson1970].
Untilthen,computernetworkswerebuiltontopof eitherthetelephonenetworkorphysicalcables.
ALOHANetshowedthatitwaspossibletouseradiosignalsto interconnectcomputers.
TheﬁrstversionofALOHANet,describedin[Abramson1970],operatedasfollows: First,theterminalsandthe mainframeexchangedﬁxed-lengthframescomposedof704bits.
Eachframecontained808-bitcharacters,some controlbitsandparityinformationtodetecttransmissionerrors.Twochannelsinthe400MHzrangewerereserved for the operation of ALOHANet.
The ﬁrst channel was used by the mainframe to send frames to all terminals.
Thesecondchannelwassharedamongallterminalstosendframestothemainframe.
Asallterminalssharethe sametransmissionchannel, thereisariskofcollision.
Todealwiththisproblemaswellastransmissionerrors, themainframeveriﬁedtheparitybitsofthereceivedframeandsentanacknowledgementonitschannelforeach correctlyreceivedframe.
Theterminalsontheotherhandhadtoretransmittheunacknowledgedframes.
Asfor TCP,retransmittingtheseframesimmediatelyuponexpirationofaﬁxedtimeoutisnotagoodapproachasseveral terminalsmayretransmittheirframesatthesametimeleadingtoanetworkcollapse.
Abetterapproach,butstill far from perfect, is for each terminal to wait a random amount of time after the expiration of its retransmission timeout.
Thisavoidssynchronisationamongmultipleretransmittingterminals.
216 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Thepseudo-codebelowshowstheoperationofanALOHANetterminal.WeusethispythonsyntaxforallMedium AccessControlalgorithmsdescribedinthischapter.
Thealgorithmisappliedtoeachnewframethatneedstobe transmitted.Itattemptstotransmitaframeatmostmaxtimes(whileloop).Eachtransmissionattemptisperformed as follows: First, the frame is sent.
Each frame is protected by a timeout.
Then, the terminal waits for either a validacknowledgementframeortheexpirationofitstimeout.
Iftheterminalreceivesanacknowledgement,the framehasbeendeliveredcorrectlyandthealgorithmterminates.
Otherwise,theterminalwaitsforarandomtime andattemptstoretransmittheframe.
# ALOHA N=1 while N<= max : send(frame) wait(ack_on_return_channel or timeout) if (ack_on_return_channel): break # transmission was successful else: # timeout wait(random_time) N=N+1 else: # Too many transmission attempts [Abramson1970] analysed the performance of ALOHANet under particular assumptions and found that ALO- HANetworkedwellwhenthechannelwaslightlyloaded.
Inthiscase,theframesarerarelyretransmittedandthe channeltrafﬁc,i.e.
thetotalnumberof(correctandretransmitted)framestransmittedperunitoftimeiscloseto thechannelutilization,i.e.thenumberofcorrectlytransmittedframesperunitoftime.Unfortunately,theanalysis also reveals that the channel utilization reaches its maximum at 1 = 0.186 times the channel bandwidth.
At 2×e higherutilization,ALOHANetbecomesunstableandthenetworkcollapsesduetocollidedretransmissions.
Note: Amateurpacketradio PacketradiotechnologieshaveevolvedinvariousdirectionssincetheﬁrstexperimentsperformedattheUniversity of Hawaii.
The Amateur packet radio service developed by amateur radio operators is one of the descendants ALOHANet.Manyamateurradiooperatorsareveryinterestedinnewtechnologiesandtheyoftenspendcountless hoursdevelopingnewantennasortransceivers.Whentheﬁrstpersonalcomputersappeared,severalamateurradio operatorsdesignedradiomodemsandtheirowndatalinklayerprotocols[KPD1985][BNT1997].
Thisnetwork grew and it was possible to connect to servers in several European countries by only using packet radio relays.
SomeamateurradiooperatorsalsodevelopedTCP/IPprotocolstacksthatwereusedoverthepacketradioservice.
SomepartsoftheamateurpacketradionetworkareconnectedtotheglobalInternetandusethe44.0.0.0/8preﬁx.
ManyimprovementstoALOHANethavebeenproposedsincethepublicationof[Abramson1970],andthistech- nique, or some of its variants, are still found in wireless networks today.
The slotted technique proposed in [Roberts1975]isimportantbecauseitshowsthatasimplemodiﬁcationcansigniﬁcantlyimprovechannelutiliza- tion.
Instead of allowing all terminals to transmit at any time, [Roberts1975] proposed to divide time into slots andallowterminalstotransmitonlyatthebeginningofeachslot.
Eachslotcorrespondstothetimerequiredto transmit one ﬁxed size frame.
In practice, these slots can be imposed by a single clock that is received by all terminals.
In ALOHANet, it could have been located on the central mainframe.
The analysis in [Roberts1975] revealsthatthissimplemodiﬁcationimprovesthechannelutilizationbyafactoroftwo.
6.2.3 Carrier Sense Multiple Access ALOHAandslottedALOHAcaneasilybeimplemented,butunfortunately,theycanonlybeusedinnetworksthat areverylightlyloaded.
Designinganetworkforaverylowutilisationispossible,butitclearlyincreasesthecost of the network.
To overcome the problems of ALOHA, many Medium Access Control mechanisms have been proposedwhichimprovechannelutilization.CarrierSenseMultipleAccess(CSMA)isasigniﬁcantimprovement comparedtoALOHA.CSMArequiresallnodestolistentothetransmissionchanneltoverifythatitisfreebefore transmitting a frame [KT1975].
When a node senses the channel to be busy, it defers its transmission until the channel becomes free again.
The pseudo-code below provides a more detailed description of the operation of CSMA.
6.2.
MediumAccessControl 217 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 # persistent CSMA N=1 while N<= max : wait(channel_becomes_free) send(frame) wait(ack or timeout) if ack : break # transmission was successful else : # timeout N=N+1 # end of while loop # Too many transmission attempts Theabovepseudo-codeisoftencalledpersistentCSMA[KT1975]astheterminalwillcontinuouslylistentothe channelandtransmititsframeassoonasthechannelbecomesfree.
AnotherimportantvariantofCSMAisthe non-persistent CSMA [KT1975].
The main difference between persistent and non-persistent CSMA described in the pseudo-code below is that a non-persistent CSMA node does not continuously listen to the channel to determine when it becomes free.
When a non-persistent CSMA terminal senses the transmission channel to be busy,itwaitsforarandomtimebeforesensingthechannelagain.
Thisimproveschannelutilizationcomparedto persistentCSMA.WithpersistentCSMA,whentwoterminalssensethechanneltobebusy,theywillbothtransmit (andthuscauseacollision)assoonasthechannelbecomesfree.
Withnon-persistentCSMA,thissynchronisation doesnotoccur, astheterminalswaitarandomtimeafterhavingsensedthetransmissionchannel.
However, the higher channel utilization achieved by non-persistent CSMA comes at the expense of a slightly higher waiting timeintheterminalswhenthenetworkislightlyloaded.
# Non persistent CSMA N=1 while N<= max : listen(channel) if free(channel): send(frame) wait(ack or timeout) if received(ack) : break # transmission was successful else : # timeout N=N+1 else: wait(random_time) # end of while loop # Too many transmission attempts [KT1975]analyzesindetailtheperformanceofseveralCSMAvariants.
Undersomeassumptionsaboutthetrans- mission channel and the trafﬁc, the analysis compares ALOHA, slotted ALOHA, persistent and non-persistent CSMA.Undertheseassumptions,ALOHAachievesachannelutilizationofonly18.4%ofthechannelcapacity.
Slotted ALOHA is able to use 36.6% of this capacity.
Persistent CSMA improves the utilization by reaching 52.9%ofthecapacitywhilenon-persistentCSMAachieves81.5%ofthechannelcapacity.
6.2.4 Carrier Sense Multiple Access with Collision Detection CSMA improves channel utilization compared to ALOHA.
However, the performance can still be improved, especiallyinwirednetworks.
Considerthesituationoftwoterminalsthatareconnectedtothesamecable.
This cablecould,forexample,beacoaxialcableasintheearlydaysofEthernet[Metcalfe1976].
Itcouldalsobebuilt withtwistedpairs.BeforeextendingCSMA,itisusefultounderstandmoreintuitively,howframesaretransmitted insuchanetworkandhowcollisionscanoccur.
Theﬁgurebelowillustratesthephysicaltransmissionofaframe onsuchacable.
Totransmititsframe,hostAmustsendanelectricalsignalonthesharedmedium.
Theﬁrststep isthustobeginthetransmissionoftheelectricalsignal.
Thisispoint(1)intheﬁgurebelow.
Thiselectricalsignal willtravelalongthecable.
Althoughelectricalsignalstravelfast, weknowthatinformationcannottravelfaster thanthespeedoflight(i.e.
300.000kilometers/second).
Onacoaxialcable,anelectricalsignalisslightlyslower 218 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 thanthespeedoflightand200.000kilometerspersecondisareasonableestimation.
Thisimpliesthatifthecable hasalengthofonekilometer,theelectricalsignalwillneed5microsecondstotravelfromoneendofthecableto theother.
Theendsofcoaxialcablesareequippedwithterminationpointsthatensurethattheelectricalsignalis notreﬂectedbacktoitssource.
Thisisillustratedatpoint(3)intheﬁgure,wheretheelectricalsignalhasreached theleftendpointandhostB.Atthispoint,BstartstoreceivetheframebeingtransmittedbyA.Noticethatthereis adelaybetweenthetransmissionofabitonhostAanditsreceptionbyhostB.Iftherewereotherhostsattached tothecable,theywouldreceivetheﬁrstbitoftheframeatslightlydifferenttimes.Aswewillseelater,thistiming differenceisakeyproblemforMACalgorithms.
Atpoint(4),theelectricalsignalhasreachedbothendsofthe cableandoccupiesitcompletely.
HostAcontinuestotransmittheelectricalsignaluntiltheendoftheframe.
As shownatpoint(5),whenthesendinghoststopsitstransmission,theelectricalsignalcorrespondingtotheendof the frame leaves the coaxial cable.
The channel becomes empty again once the entire electrical signal has been removedfromthecable.
Figure6.5: Frametransmissiononasharedbus Now that we have looked at how a frame is actually transmitted as an electrical signal on a shared bus, it is interestingtolookinmoredetailatwhathappenswhentwohoststransmitaframeatalmostthesametime.
This isillustratedintheﬁgurebelow,wherehostsAandBstarttheirtransmissionatthesametime(point(1)).
Atthis time,ifhostCsensesthechannel,itwillconsiderittobefree.
Thiswillnotlastalongtimeandatpoint(2)the electricalsignalsfrombothhostAandhostBreachhostC.Thecombinedelectricalsignal(showngraphicallyas the superposition of the two curves in the ﬁgure) cannot be decoded by host C. Host C detects a collision, as it receivesasignalthatitcannotdecode.
SincehostCcannotdecodetheframes, itcannotdeterminewhichhosts aresendingthecollidingframes.
NotethathostA(andhostB)willdetectthecollisionafterhostC(point(3)in theﬁgurebelow).
Asshownabove,hostsdetectcollisionswhentheyreceiveanelectricalsignalthattheycannotdecode.
Inawired network, a host is able to detect such a collision both while it is listening (e.g.
like host C in the ﬁgure above) and also while it is sending its own frame.
When a host transmits a frame, it can compare the electrical signal that it transmits with the electrical signal that it senses on the wire.
At points (1) and (2) in the ﬁgure above, hostAsensesonlyitsownsignal.
Atpoint(3),itsensesanelectricalsignalthatdiffersfromitsownsignaland can thus detects the collision.
At this point, its frame is corrupted and it can stop its transmission.
The ability to detect collisions while transmitting is the starting point for the Carrier Sense Multiple Access with Collision Detection (CSMA/CD) Medium Access Control algorithm, which is used in Ethernet networks [Metcalfe1976] [802.3].
WhenanEthernethostdetectsacollisionwhileitistransmitting,itimmediatelystopsitstransmission.
ComparedwithpureCSMA,CSMA/CDisanimportantimprovementsincewhencollisionsoccur,theyonlylast untilcollidinghostshavedetecteditandstoppedtheirtransmission.
Inpractice,whenahostdetectsacollision,it sendsaspecialjammingsignalonthecabletoensurethatallhostshavedetectedthecollision.
6.2.
MediumAccessControl 219 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure6.6: Framecollisiononasharedbus To better understand these collisions, it is useful to analyse what would be the worst collision on a shared bus network.
Let us consider a wire with two hosts attached at both ends, as shown in the ﬁgure below.
Host A startstotransmititsframeanditselectricalsignalispropagatedonthecable.
Itspropagationtimedependsonthe physicallengthofthecableandthespeedoftheelectricalsignal.
Letususeτ torepresentthispropagationdelay in seconds.
Slightly less than τ seconds after the beginning of the transmission of A’s frame, B decides to start transmittingitsownframe.
After(cid:15)seconds,BsensesA’sframe,detectsthecollisionandstopstransmitting.
The beginning of B’s frame travels on the cable until it reaches host A.
Host A can thus detect the collision at time τ −(cid:15)+τ ≈2×τ.
Animportantpointtonoteisthatacollisioncanonlyoccurduringtheﬁrst2×τ secondsof itstransmission.
Ifacollisiondidnotoccurduringthisperiod,itcannotoccurafterwardssincethetransmission channel is busy after τ seconds and CSMA/CD hosts sense the transmission channel before transmitting their frame.
Figure6.7: Theworstcollisiononasharedbus Furthermore,onthewirednetworkswhereCSMA/CDisused,collisionsarealmosttheonlycauseoftransmission errorsthataffectframes.Transmissionerrorsthatonlyaffectafewbitsinsideaframeseldomoccurinthesewired networks.
Forthisreason,thedesignersofCSMA/CDchosetocompletelyremovetheacknowledgementframes in the datalink layer.
When a host transmits a frame, it veriﬁes whether its transmission has been affected by a collision.
If not, given the negligible Bit Error Ratio of the underlying network, it assumes that the frame was receivedcorrectlybyitsdestination.
Otherwisetheframeisretransmittedaftersomedelay.
Removingacknowledgementsisaninterestingoptimisationasitreducesthenumberofframesthatareexchanged onthenetworkandthenumberofframesthatneedtobeprocessedbythehosts.However,tousethisoptimisation, we must ensure that all hosts will be able to detect all the collisions that affect their frames.
The problem is 220 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 important for short frames.
Let us consider two hosts, A and B, that are sending a small frame to host C as illustrated in the ﬁgure below.
If the frames sent by A and B are very short, the situation illustrated below may occur.
HostsAandBsendtheirframeandstoptransmitting(point(1)).
Whenthetwoshortframesarriveatthe locationofhostC,theycollideandhostCcannotdecodethem(point(2)).
Thetwoframesareabsorbedbythe endsofthewire.
NeitherhostAnorhostBhavedetectedthecollision.
Theybothconsidertheirframetohave beenreceivedcorrectlybyitsdestination.
Figure6.8: Theshort-framecollisionproblem To solve this problem, networks using CSMA/CD require hosts to transmit for at least 2 × τ seconds.
Since thenetwork transmissionspeedisﬁxed foragiven networktechnology, thisimplies thatatechnology thatuses CSMA/CDenforcesaminimumframesize.
InthemostpopularCSMA/CDtechnology,Ethernet,2×τ iscalled theslottime1.
ThelastinnovationintroducedbyCSMA/CDisthecomputationoftheretransmissiontimeout.
AsforALOHA, thistimeoutcannotbeﬁxed,otherwisehostscouldbecomesynchronisedandalwaysretransmitatthesametime.
Settingsuchatimeoutisalwaysacompromisebetweenthenetworkaccessdelayandtheamountofcollisions.
A short timeout would lead to a low network access delay but with a higher risk of collisions.
On the other hand, a long timeout would cause a long network access delay but a lower risk of collisions.
The binary exponential back-off algorithmwasintroducedinCSMA/CDnetworkstosolvethisproblem.
To understand binary exponential back-off, let us consider a collision caused by exactly two hosts.
Once it has detectedthecollision,ahostcaneitherretransmititsframeimmediatelyordeferitstransmissionforsometime.
Ifeachcollidinghostﬂipsacointodecidewhethertoretransmitimmediatelyortodeferitsretransmission,four casesarepossible: 1.
Bothhostsretransmitimmediatelyandanewcollisionoccurs 2.
Theﬁrsthostretransmitsimmediatelyandtheseconddefersitsretransmission 3.
Thesecondhostretransmitsimmediatelyandtheﬁrstdefersitsretransmission 4.
Bothhostsdefertheirretransmissionandanewcollisionoccurs In the second and third cases, both hosts have ﬂipped different coins.
The delay chosen by the host that defers its retransmission should be long enough to ensure that its retransmission will not collide with the immediate retransmission of the other host.
However the delay should not be longer than the time necessary to avoid the collision,becauseifbothhostsdecidetodefertheirtransmission,thenetworkwillbeidleduringthisdelay.
The 1ThisnameshouldnotbeconfusedwiththedurationofatransmissionslotinslottedALOHA.InCSMA/CDnetworks,theslottimeis thetimeduringwhichacollisioncanoccuratthebeginningofthetransmissionofaframe.
InslottedALOHA,thedurationofaslotisthe transmissiontimeofanentireﬁxed-sizeframe.
6.2.
MediumAccessControl 221 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 slottimeistheoptimaldelaysinceitistheshortestdelaythatensuresthattheﬁrsthostwillbeabletoretransmit itsframecompletelywithoutanycollision.
If two hosts are competing, the algorithm above will avoid a second collision 50% of the time.
However, if the networkisheavilyloaded,severalhostsmaybecompetingatthesametime.
Inthiscase,thehostsshouldbeable toautomaticallyadapttheirretransmissiondelay.
Thebinaryexponentialback-off performsthisadaptationbased on the number of collisions that have affected a frame.
After the ﬁrst collision, the host ﬂips a coin and waits 0 or 1 slot time.
After the second collision, it generates a random number and waits 0, 1, 2 or 3 slot times, etc.
The duration of the waiting time is doubled after each collision.
The complete pseudo-code for the CSMA/CD algorithmisshownintheﬁgurebelow.
# CSMA/CD pseudo-code N=1 while N<= max : wait(channel_becomes_free) send(frame) wait_until (end_of_frame) or (collision) if collision detected: stop transmitting send(jamming) k = min (10, N) r = random(0, 2k - 1) * slotTime wait(r*slotTime) N=N+1 else : wait(inter-frame_delay) break # end of while loop # Too many transmission attempts Theinter-framedelayusedinthispseudo-codeisashortdelaycorrespondingtothetimerequiredbyanetwork adapter to switch from transmit to receive mode.
It is also used to prevent a host from sending a continuous streamofframeswithoutleavinganytransmissionopportunitiesforotherhostsonthenetwork.
Thiscontributes tothefairnessofCSMA/CD.Despitethisdelay,therearestillconditionswhereCSMA/CDisnotcompletelyfair [RY1994].
Consider for example a network with two hosts : a server sending long frames and a client sending acknowledgments.
Measurements reported in [RY1994] have shown that there are situations where the client couldsufferfromrepeatedcollisionsthatleadittowaitforlongperiodsoftimeduetotheexponentialback-off algorithm.
6.2.5 Carrier Sense Multiple Access with Collision Avoidance TheCarrierSenseMultipleAccesswithCollisionAvoidance(CSMA/CA)MediumAccessControlalgorithmwas designed for the popular WiFi wireless network technology [802.11].
CSMA/CA also senses the transmission channel before transmitting a frame.
Furthermore, CSMA/CA tries to avoid collisions by carefully tuning the timersusedbyCSMA/CAdevices.
CSMA/CAusesacknowledgementslikeCSMA.EachframecontainsasequencenumberandaCRC.TheCRC is used to detect transmission errors while the sequence number is used to avoid frame duplication.
When a devicereceivesacorrectframe,itreturnsaspecialacknowledgementframetothesender.
CSMA/CAintroduces asmalldelay,namedShortInterFrameSpacing(SIFS),betweenthereceptionofaframeandthetransmissionof the acknowledgement frame.
This delay corresponds to the time that is required to switch the radio of a device betweenthereceptionandtransmissionmodes.
Compared to CSMA, CSMA/CA deﬁnes more precisely when a device is allowed to send a frame.
First, CSMA/CA deﬁnes two delays : DIFS and EIFS.
To send a frame, a device must ﬁrst wait until the channel hasbeenidleforatleasttheDistributedCoordinationFunctionInterFrameSpace(DIFS)ifthepreviousframe was received correctly.
However, if the previously received frame was corrupted, this indicates that there are collisions and the device must sense the channel idle for at least the Extended Inter Frame Space (EIFS), with SIFS < DIFS < EIFS.
TheexactvaluesforSIFS,DIFSandEIFSdependontheunderlyingphysicallayer [802.11].
222 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 The ﬁgure below shows the basic operation of CSMA/CA devices.
Before transmitting, host A veriﬁes that the channel is empty for a long enough period.
Then, its sends its data frame.
After checking the validity of the receivedframe,therecipientsendsanacknowledgementframeafterashortSIFSdelay.
HostC,whichdoesnot participateintheframeexchange, sensesthechanneltobebusyatthebeginningofthedataframe.
HostC can usethisinformationtodeterminehowlongthechannelwillbebusyfor.
NotethatasSIFS <DIFS <EIFS, evenadevicethatwouldstarttosensethechannelimmediatelyafterthelastbitofthedataframecouldnotdecide totransmititsownframeduringthetransmissionoftheacknowledgementframe.
Figure6.9: OperationofaCSMA/CAdevice ThemaindifﬁcultywithCSMA/CAiswhentwoormoredevicestransmitatthesametimeandcausecollisions.
This is illustrated in the ﬁgure below, assuming a ﬁxed timeout after the transmission of a data frame.
With CSMA/CA,thetimeoutafterthetransmissionofadataframeisverysmall,sinceitcorrespondstotheSIFSplus thetimerequiredtotransmittheacknowledgementframe.
Figure6.10: CollisionswithCSMA/CA 6.2.
MediumAccessControl 223 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 To deal with this problem, CSMA/CA relies on a backoff timer.
This backoff timer is a random delay that is chosen by each device in a range that depends on the number of retransmissions for the current frame.
The rangegrowsexponentiallywiththeretransmissionsasinCSMA/CD.Theminimumrangeforthebackofftimer is[0,7∗slotTime]wheretheslotTimeisaparameterthatdependsontheunderlyingphysicallayer.
Compared to CSMA/CD’s exponential backoff, there are two important differences to notice.
First, the initial range for the backoff timer is seven times larger.
This is because it is impossible in CSMA/CA to detect collisions as they happen.
With CSMA/CA, a collision may affect the entire frame while with CSMA/CD it can only affect the beginning of the frame.
Second, a CSMA/CA device must regularly sense the transmission channel during its back off timer.
If the channel becomes busy (i.e.
because another device is transmitting), then the back off timer must be frozen until the channel becomes free again.
Once the channel becomes free, the back off timer is restarted.
This is in contrast with CSMA/CD where the back off is recomputed after each collision.
This is illustrated in the ﬁgure below.
Host A chooses a smaller backoff than host C. When C senses the channel to be busy,itfreezesitsbackofftimerandonlyrestartsitoncethechannelisfreeagain.
Figure6.11: DetailedexamplewithCSMA/CA The pseudo-code below summarises the operation of a CSMA/CA device.
The values of the SIFS, DIFS, EIFS andslotTimedependontheunderlyingphysicallayertechnology[802.11] # CSMA/CA simplified pseudo-code N=1 while N<= max : waitUntil(free(channel)) if correct(last_frame) : wait(channel_free_during_t >=DIFS) else: wait(channel_free_during_t >=EIFS) back-off_time = int(random[0,min(255,7*(2^(N-1)))])*slotTime wait(channel free during backoff_time) # backoff timer is frozen while channel is sensed to be busy send(frame) wait(ack or timeout) if received(ack) # frame received correctly break else: # retransmission required N=N+1 224 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Another problem faced by wireless networks is often called the hidden station problem.
In a wireless network, radiosignalsarenotalwayspropagatedsamewayinalldirections.
Forexample,twodevicesseparatedbyawall maynotbeabletoreceiveeachother’ssignalwhiletheycouldbothbereceivingthesignalproducedbyathird host.
Thisisillustratedintheﬁgurebelow,butitcanhappeninotherenvironments.
Forexample,twodevicesthat areondifferentsidesofahillmaynotbeabletoreceiveeachother’ssignalwhiletheyarebothabletoreceivethe signalsentbyastationatthetopofthehill.
Furthermore,theradiopropagationconditionsmaychangewithtime.
Forexample,atruckmaytemporarilyblockthecommunicationbetweentwonearbydevices.
Figure6.12: Thehiddenstationproblem To avoid collisions in these situations, CSMA/CA allows devices to reserve the transmission channel for some time.
Thisisdonebyusingtwocontrolframes: RequestToSend(RTS)andClearToSend(CTS).Botharevery shortframestominimizetheriskofcollisions.
Toreservethetransmissionchannel,adevicesendsaRTSframe totheintendedrecipientofthedataframe.
TheRTSframecontainsthedurationoftherequestedreservation.
The recipientreplies,afteraSIFSdelay,withaCTSframewhichalsocontainsthedurationofthereservation.
Asthe durationofthereservationhasbeensentinbothRTSandCTS,allhoststhatcouldcollidewitheitherthesender or the reception of the data frame are informed of the reservation.
They can compute the total duration of the transmissionanddefertheiraccesstothetransmissionchanneluntilthen.
Thisisillustratedintheﬁgurebelow wherehostAreservesthetransmissionchanneltosendadataframetohostB.HostCnoticesthereservationand defersitstransmission.
Figure6.13: ReservationswithCSMA/CA TheutilizationofthereservationswithCSMA/CAisanoptimisationthatisusefulwhencollisionsarefrequent.
Iftherearefewcollisions, thetimerequiredtotransmittheRTSandCTSframescanbecomesigniﬁcantandin particularwhenshortframesareexchanged.
SomedevicesonlyturnonRTS/CTSaftertransmissionerrors.
6.2.
MediumAccessControl 225 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 6.2.6 Deterministic Medium Access Control algorithms Duringthe1970sand1980s,therewerehugedebatesinthenetworkingcommunityaboutthebestsuitedMedium Access Control algorithms for Local Area Networks.
The optimistic algorithms that we have described until nowwererelativelyeasytoimplementwhentheyweredesigned.
Fromaperformanceperspective,mathematical models and simulations showed the ability of these optimistic techniques to sustain load.
However, none of the optimistic techniques are able to guarantee that a frame will be delivered within a given delay bound and some applications require predictable transmission delays.
The deterministic MAC algorithms were considered by a fractionofthenetworkingcommunityasthebestsolutiontofulﬁlltheneedsofLocalAreaNetworks.
BoththeproponentsofthedeterministicandtheopportunistictechniqueslobbiedtodevelopstandardsforLocal Areanetworksthatwouldincorporatetheirsolution.
Insteadoftryingtoﬁndanimpossiblecompromisebetween these diverging views, the IEEE 802 committee that was chartered to develop Local Area Network standards chose to work in parallel on three different LAN technologies and created three working groups.
The IEEE 802.3workinggroupbecameresponsibleforCSMA/CD.TheproponentsofdeterministicMACalgorithmsagreed on the basic principle of exchanging special frames called tokens between devices to regulate the access to the transmission medium.
However, they did not agree on the most suitable physical layout for the network.
IBM argued in favor of Ring-shaped networks while the manufacturing industry, led by General Motors, argued in favorofabus-shapednetwork.
ThisledtothecreationoftheIEEE802.4workinggrouptostandardiseTokenBus networksandtheIEEE802.5workinggrouptostandardiseTokenRingnetworks.
Althoughthesetechniquesare notwidelyusedanymoretoday,theprinciplesbehindatoken-basedprotocolarestillimportant.
TheIEEE802.5TokenRingtechnologyisdeﬁnedin[802.5].
WeuseTokenRingasanexampletoexplainthe principlesofthetoken-basedMACalgorithmsinring-shapednetworks.
Otherring-shapednetworksincludethe almost defunct FDDI [Ross1989] or the more recent Resilient Pack Ring [DYGU2004] .
A good survey of the tokenringnetworksmaybefoundin[Bux1989].
ATokenRingnetworkiscomposedofasetofstationsthatareattachedtoaunidirectionalring.Thebasicprinciple oftheTokenRingMACalgorithmisthattwotypesofframestravelonthering:tokensanddataframes.Whenthe TokenRingstarts,oneofthestationssendsthetoken.
Thetokenisasmallframethatrepresentstheauthorization totransmitdataframesonthering.
Totransmitadataframeonthering,astationmustﬁrstcapturethetokenby removingitfromthering.
Asonlyonestationcancapturethetokenatatime,thestationthatownsthetokencan safelytransmitadataframeontheringwithoutriskingcollisions.
Afterhavingtransmitteditsframe,thestation mustremoveitfromtheringandresendthetokensothatotherstationscantransmittheirownframes.
Figure6.14: ATokenRingnetwork WhilethebasicprinciplesoftheTokenRingaresimple,thereareseveralsubtleimplementationdetailsthatadd complexity to Token Ring networks.
To understand these details let us analyse the operation of a Token Ring interfaceonastation.
ATokenRinginterfaceservesthreedifferentpurposes.
LikeotherLANinterfaces,itmust beabletosendandreceiveframes.
Inaddition,aTokenRinginterfaceispartofthering,andassuch,itmustbe abletoforwardtheelectricalsignalthatpassesontheringevenwhenitsstationispoweredoff.
Whenpowered-on, TokenRinginterfacesoperateintwodifferentmodes: listenandtransmit.
Whenoperating in listen mode, a Token Ring interface receives an electrical signal from its upstream neighbour on the ring, introducesadelayequaltothetransmissiontimeofonebitontheringandregeneratesthesignalbeforesending ittoitsdownstreamneighbouronthering.
226 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 TheﬁrstproblemfacedbyaTokenRingnetworkisthatasthetokenrepresentstheauthorizationtotransmit, it mustcontinuouslytravelontheringwhennodataframeisbeingtransmitted.
Letusassumethatatokenhasbeen producedandsentontheringbyonestation.
InTokenRingnetworks,thetokenisa24bitsframewhosestructure isshownbelow.
Figure6.15: 802.5tokenformat Thetokeniscomposedofthreeﬁelds.
First,theStartingDelimiteristhemarkerthatindicatesthebeginningofa frame.
TheﬁrstTokenRingnetworksusedManchestercodingandtheStartingDelimitercontainedbothsymbols representing0andsymbolsthatdonotrepresentbits.
ThelastﬁeldistheEndingDelimiterwhichmarkstheend ofthetoken.
TheAccessControlﬁeldispresentinallframes,andcontainsseveralﬂags.
Themostimportantis theTokenbitthatissetintokenframesandresetinotherframes.
LetusconsidertheﬁvestationnetworkdepictedinﬁgureATokenRingnetworkaboveandassumethatstationS1 sendsatoken.
Ifweneglectthepropagationdelayontheinter-stationlinks,aseachstationintroducesaonebit delay,theﬁrstbitoftheframewouldreturntoS1whileitsendstheﬁfthbitofthetoken.
IfstationS1ispowered offatthattime,onlytheﬁrstﬁvebitsofthetokenwilltravelonthering.
Toavoidthisproblem,thereisaspecial stationcalledtheMonitoroneachTokenRing.Toensurethatthetokencantravelforeveronthering,thisMonitor insertsadelaythatisequaltoatleast24bittransmissiontimes.
IfstationS3wastheMonitor inﬁgureAToken Ringnetwork,S1wouldhavebeenabletotransmittheentiretokenbeforereceivingtheﬁrstbitofthetokenfrom itsupstreamneighbour.
Nowthatwehaveexplainedhowthetokencanbeforwardedonthering,letusanalysehowastationcancapture a token to transmit a data frame.
For this, we need some information about the format of the data frames.
An 802.5dataframebeginswiththeStartingDelimiterfollowedbytheAccessControlﬁeldwhoseTokenbitisreset, aFrameControlﬁeldthatallowsforthedeﬁnitionofseveraltypesofframes, destinationandsourceaddress, a payload, a CRC, the Ending Delimiter and a Frame Status ﬁeld.
The format of the Token Ring data frames is illustratedbelow.
Figure6.16: 802.5dataframeformat Tocaptureatoken,astationmustoperateinListenmode.
Inthismode,thestationreceivesbitsfromitsupstream neighbour.
Ifthebitscorrespondtoadataframe, theymustbeforwardedtothedownstreamneighbour.
Ifthey correspond to a token, the station can capture it and transmit its data frame.
Both the data frame and the token areencodedasabitstringbeginningwiththeStartingDelimiterfollowedbytheAccessControlﬁeld.
Whenthe station receives the ﬁrst bit of a Starting Delimiter, it cannot know whether this is a data frame or a token and 6.2.
MediumAccessControl 227 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 must forward the entire delimiter to its downstream neighbour.
It is only when it receives the fourth bit of the Access Control ﬁeld (i.e.
the Token bit) that the station knows whether the frame is a data frame or a token.
If theTokenbitisreset,itindicatesadataframeandtheremainingbitsofthedataframemustbeforwardedtothe downstream station.
Otherwise (Token bit is set), this is a token and the station can capture it by resetting the bitthatiscurrentlyinitsbuffer.
Thankstothismodiﬁcation,thebeginningofthetokenisnowthebeginningof a data frame and the station can switch to Transmit mode and send its data frame starting at the ﬁfth bit of the AccessControlﬁeld.
Thus,theone-bitdelayintroducedbyeachTokenRingstationplaysakeyroleinenabling thestationstoefﬁcientlycapturethetoken.
Afterhavingtransmitteditsdataframe,thestationmustremaininTransmitmodeuntilithasreceivedthelastbit of its own data frame.
This ensures that the bits sent by a station do not remain in the network forever.
A data framesentbyastationinaTokenRingnetworkpassesinfrontofallstationsattachedtothenetwork.Eachstation candetectthedataframeandanalysethedestinationaddresstopossiblycapturetheframe.
The Frame Status ﬁeld that appears after the Ending Delimiter is used to provide acknowledgements without requiringspecialframes.
TheFrameStatuscontainstwoﬂags: AandC.Bothﬂagsareresetwhenastationsends adataframe.
Theseﬂagscanbemodiﬁedbytheirrecipients.
Whenastationsensesitsaddressasthedestination address of a frame, it can capture the frame, check its CRC and place it in its own buffers.
The destination of a frame must set the A bit (resp.
C bit) of the Frame Status ﬁeld once it has seen (resp.
copied) a data frame.
ByinspectingtheFrameStatusofthereturningframe,thesendercanverifywhetheritsframehasbeenreceived correctlybyitsdestination.
The text above describes the basic operation of a Token Ring network when all stations work correctly.
Unfor- tunately, a real Token Ring network must be able to handle various types of anomalies and this increases the complexity of Token Ring stations.
We brieﬂy list the problems and outline their solutions below.
A detailed description of the operation of Token Ring stations may be found in [802.5].
The ﬁrst problem is when all the stationsattachedtothenetworkstart.
Oneofthemmustbootstrapthenetworkbysendingtheﬁrsttoken.
Forthis, allstationsimplementadistributedelectionmechanismthatisusedtoselecttheMonitor.Anystationcanbecome aMonitor.
TheMonitormanagestheTokenRingnetworkandensuresthatitoperatescorrectly.
Itsﬁrstroleisto introduceadelayof24bittransmissiontimestoensurethatthetokencantravelsmoothlyonthering.
Second, the Monitor sends the ﬁrst token on the ring.
It must also verify that the token passes regularly.
According to the Token Ring standard [802.5], a station cannot retain the token to transmit data frames for a duration longer thantheTokenHoldingTime(THT)(slightlylessthan10milliseconds).
OnanetworkcontainingN stations,the MonitormustreceivethetokenatleasteveryN ×THT seconds.
IftheMonitordoesnotreceiveatokenduring suchaperiod,itcutstheringforsometimeandthenreinitialisestheringandsendsatoken.
Several other anomalies may occur in a Token Ring network.
For example, a station could capture a token and bepoweredoffbeforehavingresentthetoken.
Anotherstationcouldhavecapturedthetoken,sentitsdataframe andbepoweredoffbeforereceivingallofitsdataframe.
Inthiscase,thebitstringcorrespondingtotheendofa framewouldremainintheringwithoutbeingremovedbyitssender.
Severaltechniquesaredeﬁnedin[802.5]to allowtheMonitortohandlealltheseproblems.
Ifunfortunately,theMonitorfails,anotherstationwillbeelected tobecomethenewMonitor.
6.3 Datalink layer technologies Inthissection,wereviewthekeycharacteristicsofseveraldatalinklayertechnologies.
Wediscussinmoredetail thetechnologiesthatarewidelyusedtoday.
Adetailedsurveyofalldatalinklayertechnologieswouldbeoutside thescopeofthisbook.
6.3.1 The Point-to-Point Protocol Manypoint-to-pointdatalinklayers2havebeendeveloped,startinginthe1960s[McFadyen1976].Inthissection, we focus on the protocols that are often used to transport IP packets between hosts or routers that are directly connectedbyapoint-to-pointlink.
Thislinkcanbeadedicatedphysicalcable,aleasedlinethroughthetelephone networkoradial-upconnectionwithmodemsonthetwocommunicatinghosts.
2LAPBandHDLCwerewidelyuseddatalinklayerprotocols.
228 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 The ﬁrst solution to transport IP packets over a serial line was proposed in RFC 1055 and is known as Serial Line IP (SLIP).
SLIP is a simple character stufﬁng technique applied to IP packets.
SLIP deﬁnes two special characters : END (decimal 192) and ESC (decimal 219).
END appears at the beginning and at the end of each transmitted IP packet and the sender adds ESC before each END character inside each transmitted IP packet.
SLIPonlysupportsthetransmissionofIPpacketsanditassumesthatthetwocommunicatinghosts/routershave beenmanuallyconﬁguredwitheachother’sIPaddress.
SLIPwasmainlyusedoverlinksofferingbandwidthof often less than 20 Kbps.
On such a low bandwidth link, sending 20 bytes of IP header followed by 20 bytes of TCPheaderforeachTCPsegmenttakesalotoftime.
Thisinitiatedthedevelopmentofafamilyofcompression techniquestoefﬁcientlycompresstheTCP/IPheaders.
TheﬁrstheadercompressiontechniqueproposedinRFC 1144wasdesignedtoexploittheredundancybetweenseveralconsecutivesegmentsthatbelongtothesameTCP connection.
In all these segments, the IP addresses and port numbers are always the same.
Furthermore, ﬁelds suchasthesequenceandacknowledgementnumbersdonotchangeinarandomway.
RFC1144deﬁnedsimple techniques to reduce the redundancy found in successive segments.
The development of header compression techniquescontinuedandtherearestillimprovementsbeingdevelopednowRFC5795.
WhileSLIPwasimplementedandusedinsomeenvironments,ithadseverallimitationsdiscussedinRFC1055.
ThePoint-to-PointProtocol(PPP)wasdesignedshortlyafterandisspeciﬁedinRFC1548.
PPPaimstosupport IPandothernetworklayerprotocolsovervarioustypesofseriallines.
PPPisinfactafamilyofthreeprotocols thatareusedtogether: 1.
ThePoint-to-PointProtocoldeﬁnestheframingtechniquetotransportnetworklayerpackets.
2.
TheLinkControlProtocolthatisusedtonegotiateoptionsandauthenticatethesessionbyusingusername andpasswordorothertypesofcredentials 3.
TheNetworkControlProtocolthatisspeciﬁcforeachnetworklayerprotocol.Itisusedtonegotiateoptions thatarespeciﬁcforeachprotocol.
Forexample,IPv4’sNCPRFC1548cannegotiatetheIPv4addressto beused,theIPv4addressoftheDNSresolver.
IPv6’sNCPisdeﬁnedinRFC5072.
ThePPPframingRFC1662wasinspiredbythedatalinklayerprotocolsstandardisedbyITU-TandISO.Atypical PPPframeiscomposedoftheﬁeldsshownintheﬁgurebelow.
APPPframestartswithaonebyteﬂagcontaining 01111110.PPPcanusebitstufﬁngorcharacterstufﬁngdependingontheenvironmentwheretheprotocolisused.
Theaddressandcontrolﬁeldsarepresentforbackwardcompatibilityreasons.
The16bitProtocolﬁeldcontains theidentiﬁer3 ofthenetworklayerprotocolthatiscarriedinthePPPframe.
0x002d isusedforanIPv4packet compressedwithRFC1144while0x002f isusedforanuncompressedIPv4packet.
0xc021isusedbytheLink ControlProtocol,0xc023isusedbythePasswordAuthenticationProtocol(PAP).0x0057isusedforIPv6packets.
PPPsupportsvariablelengthpackets,butLCPcannegotiateamaximumpacketlength.
ThePPPframeendswith aFrameCheckSequence.
Thedefaultisa16bitsCRC,butsomeimplementationscannegotiatea32bitsCRC.
Theframeendswiththe01111110ﬂag.
Figure6.17: PPPframeformat PPP played a key role in allowing Internet Service Providers to provide dial-up access over modems in the late 1990sandearly2000s.
ISPsoperatedmodembanksconnectedtothetelephonenetwork.
FortheseISPs, akey issuewastoauthenticateeachuserconnectedthroughthetelephonenetwork.
Thisauthenticationwasperformed by using the Extensible Authentication Protocol (EAP) deﬁned in RFC 3748.
EAP is a simple, but extensible protocolthatwasinitiallyusedbyaccessrouterstoauthenticatetheusersconnectedthroughdialuplines.
Several authentication methods, starting from the simple username/password pairs to more complex schemes have been 3TheIANAmaintainstheregistryofallassignedPPPprotocolﬁeldsat:http://www.iana.org/assignments/ppp-numbers 6.3.
Datalinklayertechnologies 229 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 deﬁned and implemented.
When ISPs started to upgrade their physical infrastructure to provide Internet access overAsymmetricDigitalSubscriberLines(ADSL),theytriedtoreusetheirexistingauthentication(andbilling) systems.Tomeettheserequirements,theIETFdevelopedspeciﬁcationstoallowPPPframestobetransportedover other networks than the point-to-point links for which PPP was designed.
Nowadays, most ADSL deployments usePPPovereitherATMRFC2364orEthernetRFC2516.
6.3.2 Ethernet Ethernetwasdesignedinthe1970satthePaloAltoResearchCenter[Metcalfe1976].
Theﬁrstprototype4 used a coaxial cable as the shared medium and 3 Mbps of bandwidth.
Ethernet was improved during the late 1970s andinthe1980s,DigitalEquipment,IntelandXeroxpublishedtheﬁrstofﬁcialEthernetspeciﬁcation[DIX].This speciﬁcation deﬁnes several important parameters for Ethernet networks.
The ﬁrst decision was to standardise thecommercialEthernetat10Mbps.
Theseconddecisionwasthedurationoftheslottime.
InEthernet,along slot time enables networks to span a long distance but forces the host to use a larger minimum frame size.
The compromisewasaslottimeof51.2microseconds,whichcorrespondstoaminimumframesizeof64bytes.
The third decision was the frame format.
The experimental 3 Mbps Ethernet network built at Xerox used short framescontaining8bitsourceanddestinationaddressesﬁelds,a16bittypeindication,upto554bytesofpayload and a 16 bit CRC.
Using 8 bit addresses was suitable for an experimental network, but it was clearly too small forcommercialdeployments.
AlthoughtheinitialEthernetspeciﬁcation[DIX]onlyallowedupto1024hostson anEthernetnetwork,italsorecommendedthreeimportantchangescomparedtothenetworkingtechnologiesthat wereavailableatthattime.
TheﬁrstchangewastorequireeachhostattachedtoanEthernetnetworktohavea globallyuniquedatalinklayeraddress.Untilthen,datalinklayeraddressesweremanuallyconﬁguredoneachhost.
[DP1981]wentagainstthatstateoftheartandnoted“Suitableinstallation-speciﬁcadministrativeproceduresare alsoneededforassigningnumberstohostsonanetwork.
Ifahostismovedfromonenetworktoanotheritmay benecessarytochangeitshostnumberifitsformernumberisinuseonthenewnetwork.
Thisiseasiersaidthan done,aseachnetworkmusthaveanadministratorwhomustrecordthecontinuouslychangingstateofthesystem (oftenonapieceofpapertackedtothewall!).
Itisanticipatedthatinfutureofﬁceenvironments,hostslocations willchangeasoftenastelephonesarechangedinpresent-dayofﬁces.” ThesecondchangeintroducedbyEthernet wastoencodeeachaddressasa48bitsﬁeld[DP1981].
48bitaddresseswerehugecomparedtothenetworking technologies available in the 1980s, but the huge address space had several advantages [DP1981] including the abilitytoallocatelargeblocksofaddressestomanufacturers.Eventually,otherLANtechnologiesoptedfor48bits addressesaswell[802]_. ThethirdchangeintroducedbyEthernetwasthedeﬁnitionofbroadcastandmulticast addresses.
The need for multicast Ethernet was foreseen in [DP1981] and thanks to the size of the addressing spaceitwaspossibletoreservealargeblockofmulticastaddressesforeachmanufacturer.
ThedatalinklayeraddressesusedinEthernetnetworksareoftencalledMACaddresses.
Theyarestructuredas shownintheﬁgurebelow.
Theﬁrstbitoftheaddressindicateswhethertheaddressidentiﬁesanetworkadapter or a multicast group.
The upper 24 bits are used to encode an Organisation Unique Identiﬁer (OUI).
This OUI identiﬁes a block of addresses that has been allocated by the secretariat 5 who is responsible for the uniqueness ofEthernetaddressestoamanufacturer.
OnceamanufacturerhasreceivedanOUI,itcanbuildandsellproducts withoneofthe16millionaddressesinthisblock.
Figure6.18: 48bitsEthernetaddressformat Theoriginal10MbpsEthernetspeciﬁcation[DIX]deﬁnedasimpleframeformatwhereeachframeiscomposed ofﬁveﬁelds.TheEthernetframestartswithapreamble(notshownintheﬁgurebelow)thatisusedbythephysical layerofthereceivertosynchroniseitsclockwiththesender’sclock.
Theﬁrstﬁeldoftheframeisthedestination 4AdditionalinformationaboutthehistoryoftheEthernettechnologymaybefoundathttp://ethernethistory.typepad.com/ 5Initially,theOUIswereallocatedbyXerox[DP1981].However,onceEthernetbecameanIEEEandlateranISOstandard,theallocation oftheOUIsmovedtoIEEE.ThelistofallOUIallocationsmaybefoundathttp://standards.ieee.org/regauth/oui/index.shtml 230 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 address.
Asthisaddressisplacedatthebeginningoftheframe,anEthernetinterfacecanquicklyverifywhether it is the frame recipient and if not, cancel the processing of the arriving frame.
The second ﬁeld is the source address.
Whilethedestinationaddresscanbeeitheraunicastoramulticast/broadcastaddress,thesourceaddress must always be a unicast address.
The third ﬁeld is a 16 bits integer that indicates which type of network layer packet is carried inside the frame.
This ﬁeld is often called the EtherType.
Frequently used EtherType values 6 include0x0800forIPv4,0x86DDforIPv67and0x806fortheAddressResolutionProtocol(ARP).
ThefourthpartoftheEthernetframeisthepayload.
Theminimumlengthofthepayloadis46bytestoensurea minimumframesize, includingtheheaderof512bits.
TheEthernetpayloadcannotbelongerthan1500bytes.
This size was found reasonable when the ﬁrst Ethernet speciﬁcation was written.
At that time, Xerox had been using its experimental 3 Mbps Ethernet that offered 554 bytes of payload and RFC 1122 required a minimum MTU of 572 bytes for IPv4.
1500 bytes was large enough to support these needs without forcing the network adapters to contain overly large memories.
Furthermore, simulations and measurement studies performed in EthernetnetworksrevealedthatCSMA/CDwasabletoachieveaveryhighutilization.
Thisisillustratedinthe ﬁgurebelowbasedon[SH1980], whichshowsthechannelutilizationachievedinEthernetnetworkscontaining differentnumbersofhoststhataresendingframesofdifferentsizes.
Figure6.19: Impactoftheframelengthonthemaximumchannelutilisation[SH1980] The last ﬁeld of the Ethernet frame is a 32 bit Cyclical Redundancy Check (CRC).
This CRC is able to catch a muchlargernumberoftransmissionerrorsthantheInternetchecksumusedbyIP,UDPandTCP[SGP98].
The formatoftheEthernetframeisshownbelow.
Note: WhereshouldtheCRCbelocatedinaframe?
ThetransportanddatalinklayersusuallychosedifferentstrategiestoplacetheirCRCsorchecksums.
Transport layerprotocolsusuallyplacetheirCRCsorchecksumsinthesegmentheader.
Datalinklayerprotocolssometimes placetheirCRCintheframeheader,butofteninatrailerattheendoftheframe.
Thischoicereﬂectsimplementa- tionassumptions,butalsoinﬂuencesperformanceRFC893.WhentheCRCisplacedinthetrailer,asinEthernet, thedatalinklayercancomputeitwhiletransmittingtheframeandinsertitattheendofthetransmission.
AllEth- ernet interfaces use this optimisation today.
When the checksum is placed in the header, as in a TCP segment, itisimpossibleforthenetworkinterfacetocomputeitwhiletransmittingthesegment.
Somenetworkinterfaces providehardwareassistancetocomputetheTCPchecksum,butthisismorecomplexthaniftheTCPchecksum wereplacedinthetrailer8.
6TheofﬁciallistofallassignedEthernettypevaluesisavailablefromhttp://standards.ieee.org/regauth/ethertype/eth.txt 7 TheattentivereadermayquestiontheneedfordifferentEtherTypesforIPv4andIPv6whiletheIPheaderalreadycontainsaversion ﬁeldthatcanbeusedtodistinguishbetweenIPv4andIPv6packets.
Theoretically, IPv4andIPv6couldhaveusedthesameEtherType.
Unfortunately,developersoftheearlyIPv6implementationsfoundthatsomedevicesdidnotchecktheversionﬁeldoftheIPv4packetsthat theyreceivedandparsedframeswhoseEtherTypewassetto0x0800asIPv4packets.SendingIPv6packetstosuchdeviceswouldhavecaused disruptions.Toavoidthisproblem,theIETFdecidedtoapplyforadistinctEtherTypevalueforIPv6.
8 ThesenetworkinterfacescomputetheTCPchecksumwhileasegmentistransferredfromthehostmemorytothenetworkinterface 6.3.
Datalinklayertechnologies 231 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure6.20: EthernetDIXframeformat TheEthernetframeformatshownaboveisspeciﬁedin[DIX].ThisistheformatusedtosendbothIPv4RFC894 andIPv6packetsRFC2464.
Afterthepublicationof[DIX],theInstituteofElectricalandElectronicEngineers (IEEE)begantostandardiseseveralLocalAreaNetworktechnologies.
IEEEworkedonseveralLANtechnolo- gies,startingwithEthernet,TokenRingandTokenBus.
Thesethreetechnologieswerecompletelydifferent,but they all agreed to use the 48 bits MAC addresses speciﬁed initially for Ethernet [802]_ .
While developing its Ethernetstandard[802.3], theIEEE802.3workinggroupwasconfrontedwithaproblem.
Ethernetmandateda minimumpayloadsizeof46bytes,whilesomecompanieswerelookingforaLANtechnologythatcouldtrans- parentlytransportshortframescontainingonlyafewbytesofpayload.
SuchaframecanbesentbyanEthernet hostbypaddingittoensurethatthepayloadisatleast46byteslong.
HoweversincetheEthernetheader[DIX] doesnotcontainalengthﬁeld,itisimpossibleforthereceivertodeterminehowmanyusefulbyteswereplaced insidethepayloadﬁeld.
Tosolvethisproblem,theIEEEdecidedtoreplacetheTypeﬁeldoftheEthernet[DIX] headerwithalengthﬁeld9.
ThisLengthﬁeldcontainsthenumberofusefulbytesintheframepayload.
Thepay- loadmuststillcontainatleast46bytes,butpaddingbytesareaddedbythesenderandremovedbythereceiver.
In order to add the Length ﬁeld without signiﬁcantly changing the frame format, IEEE had to remove the Type ﬁeld.
Withoutthisﬁeld,itisimpossibleforareceivinghosttoidentifythetypeofnetworklayerpacketinsidea receivedframe.
Tosolvethisnewproblem, IEEEdevelopedacompletelynewsublayercalledtheLogicalLink Control[802.2].
Severalprotocolsweredeﬁnedinthissublayer.
Oneofthemprovidedaslightlydifferentversion oftheTypeﬁeldoftheoriginalEthernetframeformat.
Anothercontainedacknowledgementsandretransmissions to provide a reliable service...
In practice, [802.2] is never used to support IP in Ethernet networks.
The ﬁgure belowshowstheofﬁcial[802.3]frameformat.
Figure6.21: Ethernet802.3frameformat Note: WhatistheEthernetservice?
AnEthernetnetworkprovidesanunreliableconnectionlessservice.
Itsupportsthreedifferenttransmissionmodes [SH2004].
9Fortunately,IEEEwasabletodeﬁnethe[802.3]frameformatwhilemaintainingbackwardcompatibilitywiththeEthernet[DIX]frame format.
Thetrickwastoonlyassignvaluesabove1500asEtherTypevalues.
Whenahostreceivesaframe,itcandeterminewhetherthe frame’sformatbycheckingitsEtherType/Lengthﬁeld.Avaluelowersmallerthan1501isclearlyalengthindicatorandthusan[802.3]frame.
Avaluelargerthan1501canonlybetypeandthusa[DIX]frame.
232 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [unicast, multicast and broadcast.
While the Ethernet service is unreliable in theory, a good Ethernet networkshould,inpractice,provideaservicethat:] • deliversframestotheirdestinationwithaveryhighprobabilityofsuccessfuldelivery • doesnotreorderthetransmittedframes The ﬁrst property is a consequence of the utilisation of CSMA/CD.
The second property is a consequence of the physical organisation of the Ethernet network as a shared bus.
These two properties are important and all evolutionsoftheEthernettechnologyhavepreservedthem.
SeveralphysicallayershavebeendeﬁnedforEthernetnetworks.
Theﬁrstphysicallayer,usuallycalled10Base5, provided10Mbpsoverathickcoaxialcable.
Thecharacteristicsofthecableandthetransceiversthatwereused thenenabledtheutilisationof500meterlongsegments.
A10Base5networkcanalsoincluderepeatersbetween segments.
The second physical layer was 10Base2.
This physical layer used a thin coaxial cable that was easier to install than the 10Base5 cable, but could not be longer than 185 meters.
A 10BaseF physical layer was also deﬁned to transport Ethernet over point-to-point optical links.
The major change to the physical layer was the support oftwistedpairsinthe10BaseTspeciﬁcation.
Twistedpaircablesaretraditionallyusedtosupportthetelephone serviceinofﬁcebuildings.
Mostofﬁcebuildingstodayareequippedwithstructuredcabling.
Severaltwistedpair cables are installed between any room and a central telecom closet per building or per ﬂoor in large buildings.
ThesetelecomclosetsactasconcentrationpointsforthetelephoneservicebutalsoforLANs.
TheintroductionofthetwistedpairsledtotwomajorchangestoEthernet.
Theﬁrstchangeconcernsthephysical topology of the network.
10Base2 and 10Base5 networks are shared buses, the coaxial cable typically passes through each room that contains a connected computer.
A 10BaseT network is a star-shaped network.
All the devices connected to the network are attached to a twisted pair cable that ends in the telecom closet.
From a maintenance perspective, this is a major improvement.
The cable is a weak point in 10Base2 and 10Base5 networks.
Any physical damage on the cable broke the entire network and when such a failure occurred, the network administrator had to manually check the entire cable to detect where it was damaged.
With 10BaseT, when one twisted pair is damaged, only the device connected to this twisted pair is affected and this does not affecttheotherdevices.
Thesecondmajorchangeintroducedby10BaseTwasthatiswasimpossibletobuilda 10BaseTnetworkbysimplyconnectingallthetwistedpairstogether.
Allthetwistedpairsmustbeconnectedto a relay that operates in the physical layer.
This relay is called an Ethernet hub.
A hub is thus a physical layer relaythatreceivesanelectricalsignalononeofitsinterfaces, regeneratesthesignalandtransmitsitoverallits otherinterfaces.
Somehubsarealsoabletoconverttheelectricalsignalfromonephysicallayertoanother(e.g.
10BaseTto10Base2conversion).
Figure6.22: Ethernethubsinthereferencemodel ComputerscandirectlybeattachedtoEthernethubs.
EthernethubsthemselvescanbeattachedtootherEthernet hubstobuildalargernetwork.
However,someimportantguidelinesmustbefollowedwhenbuildingacomplex networkwithhubs.
First, thenetworktopologymustbeatree.
Ashubsarerelaysinthephysicallayer, adding a link between Hub2 and Hub3 in the network below would create an electrical shortcut that would completely disrupt the network.
This implies that there cannot be any redundancy in a hub-based network.
A failure of a huborofalinkbetweentwohubswouldpartitionthenetworkintotwoisolatednetworks.
Second, ashubsare relaysinthephysicallayer, collisionscanhappenandmustbehandledbyCSMA/CDasina10Base5network.
Thisimpliesthatthemaximumdelaybetweenanypairofdevicesinthenetworkcannotbelongerthanthe51.2 6.3.
Datalinklayertechnologies 233 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 microsecondsslottime.
Ifthedelayislonger,collisionsbetweenshortframesmaynotbecorrectlydetected.
This constraintlimitsthegeographicalspreadof10BaseTnetworkscontaininghubs.
Figure6.23: AhierarchicalEthernetnetworkcomposedofhubs Inthelate1980s,10Mbpsbecametooslowforsomeapplicationsandnetworkmanufacturersdevelopedseveral LANtechnologiesthatofferedhigherbandwidth,suchasthe100MbpsFDDILANthatusedopticalﬁbers.Asthe developmentof10Base5, 10Base2and10BaseThadshownthatEthernetcouldbeadaptedtodifferentphysical layers,severalmanufacturersstartedtoworkon100MbpsEthernetandconvincedIEEEtostandardisethisnew technology that was initially called Fast Ethernet.
Fast Ethernet was designed under two constraints.
First, Fast Ethernet had to support twisted pairs.
Although it was easier from a physical layer perspective to support higher bandwidth on coaxial cables than on twisted pairs, coaxial cables were a nightmare from deployment andmaintenanceperspectives.
Second, FastEthernet hadtobe perfectlycompatiblewiththeexisting 10Mbps Ethernets to allow Fast Ethernet technology to be used initially as a backbone technology to interconnect 10 MbpsEthernetnetworks.
ThisforcedFastEthernet touseexactlythesameframeformatas10MbpsEthernet.
ThisimpliedthattheminimumFastEthernet framesizeremainedat512bits.
TopreserveCSMA/CDwiththis minimum frame size and 100 Mbps instead of 10 Mbps, the duration of the slot time was decreased to 5.12 microseconds.
TheevolutionofEthernetdidnotstop.
In1998,theIEEEpublishedaﬁrststandardtoprovideGigabitEthernet overopticalﬁbers.Severalothertypesofphysicallayerswereaddedafterwards.The10GigabitEthernetstandard appearedin2002.
Workisongoingtodevelopstandardsfor40Gigabitand100GigabitEthernetandsomeare thinkingaboutTerabitEthernet.
ThetablebelowliststhemainEthernetstandards.
Amoredetailedlistmaybe foundathttp://en.wikipedia.org/wiki/Ethernet_physical_layer Standard Comments 10Base5 Thickcoaxialcable,500m 10Base2 Thincoaxialcable,185m 10BaseT Twopairsofcategory3+UTP 10Base-F 10Mb/soveropticalﬁber 100Base-Tx Category5UTPorSTP,100mmaximum 100Base-FX Twomultimodeopticalﬁber,2kmmaximum 1000Base-CX Twopairsshieldedtwistedpair,25mmaximum 1000Base-SX Twomultimodeorsinglemodeopticalﬁberswithlasers 10Gbps OpticalﬁberbutalsoCategory6UTP 40-100Gbps Beingdeveloped,standardexpectedin2010 EthernetSwitches IncreasingthephysicallayerbandwidthasinFastEthernetwasonlyoneofthesolutionstoimprovetheperfor- manceofEthernetLANs.
Asecondsolutionwastoreplacethehubswithmoreintelligentdevices.
AsEthernet hubsoperateinthephysicallayer,theycanonlyregeneratetheelectricalsignaltoextendthegeographicalreach 234 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 ofthenetwork.
Fromaperformanceperspective,itwouldbemoreinterestingtohavedevicesthatoperateinthe datalinklayerandcananalysethedestinationaddressofeachframeandforwardtheframesselectivelyonthelink thatleadstothedestination.
SuchdevicesareusuallycalledEthernetswitches10.
AnEthernetswitchisarelay thatoperatesinthedatalinklayerasisillustratedintheﬁgurebelow.
Figure6.24: Ethernetswitchesandthereferencemodel AnEthernetswitchunderstandstheformatoftheEthernetframesandcanselectivelyforwardframesovereach interface.
For this, each Ethernet switch maintains a MAC address table.
This table contains, for each MAC addressknownbytheswitch,theidentiﬁeroftheswitch’sportoverwhichaframesenttowardsthisaddressmust beforwardedtoreachitsdestination.
ThisisillustratedbelowwiththeMACaddresstableofthebottomswitch.
WhentheswitchreceivesaframedestinedtoaddressB,itforwardstheframeonitsSouthport.
Ifitreceivesa framedestinedtoaddressD,itforwardsitonlyonitsNorthport.
Figure6.25: OperationofEthernetswitches One of the selling points of Ethernet networks is that, thanks to the utilisation of 48 bits MAC addresses, an EthernetLANisplugandplayatthedatalinklayer.
WhentwohostsareattachedtothesameEthernetsegment or hub, they can immediately exchange Ethernet frames without requiring any conﬁguration.
It is important to retain this plug and play capability for Ethernet switches as well.
This implies that Ethernet switches must be abletobuildtheirMACaddresstableautomaticallywithoutrequiringanymanualconﬁguration.
Thisautomatic conﬁguration is performed by the the MAC address learning algorithm that runs on each Ethernet switch.
This algorithm extracts the source address of the received frames and remembers the port over which a frame from 10TheﬁrstEthernetrelaysthatoperatedinthedatalinklayerswerecalledbridges.
Inpractice,themaindifferencebetweenswitchesand bridgesisthatbridgeswereusuallyimplementedinsoftwarewhileswitchesarehardware-baseddevices.Throughoutthistext,wealwaysuse switchwhenreferringtoarelayinthedatalinklayer,butyoumightstillseethewordbridge.
6.3.
Datalinklayertechnologies 235 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 eachsourceEthernetaddresshasbeenreceived.
ThisinformationisinsertedintotheMACaddresstablethatthe switchusestoforwardframes.
Thisallowstheswitchtoautomaticallylearntheportsthatitcanusetoreacheach destination address, provided that this host has previously sent at least one frame.
This is not a problem since mostupperlayerprotocolsuseacknowledgementsatsomelayerandthusevenanEthernetprintersendsEthernet framesaswell.
Thepseudo-codebelowdetailshowanEthernetswitchforwardsEthernetframes.
ItﬁrstupdatesitsMACaddress table with the source address of the frame.
The MAC address table used by some switches also contains a timestamp that is updated each time a frame is received from each known source address.
This timestamp is usedtoremovefromtheMACaddresstableentriesthathavenotbeenactiveduringthelastnminutes.
Thislimits thegrowthoftheMACaddresstable,butalsoallowshoststomovefromoneporttoanother.
Theswitchusesits MACaddresstabletoforwardthereceivedunicastframe.
Ifthereisanentryfortheframe’sdestinationaddress intheMACaddresstable,theframeisforwardedselectivelyontheportlistedinthisentry.
Otherwise,theswitch doesnotknowhowtoreachthedestinationaddressanditmustforwardtheframeonallitsportsexcepttheport fromwhichtheframehasbeenreceived.
Thisensuresthattheframewillreachitsdestination,attheexpenseof someunnecessarytransmissions.
Theseunnecessarytransmissionswillonlylastuntilthedestinationhassentits ﬁrstframe.
MulticastandBroadcastframesarealsoforwardedinasimilarway.
# Arrival of frame F on port P # Table : MAC address table dictionary : addr->port # Ports : list of all ports on the switch src=F.SourceAddress dst=F.DestinationAddress Table[src]=P #src heard on port P if isUnicast(dst) : if dst in Table: ForwardFrame(F,Table[dst]) else: for o in Ports : if o!= P : ForwardFrame(F,o) else: # multicast or broadcast destination for o in Ports : if o!= P : ForwardFrame(F,o) Note: SecurityissueswithEthernethubsandswitches Fromasecurityperspective,Ethernethubshavethesamedrawbacksastheoldercoaxialcable.
Ahostattachedto ahubwillbeabletocapturealltheframesexchangedbetweenanypairofhostsattachedtothesamehub.Ethernet switchesaremuchbetterfromthisperspectivethankstotheselectiveforwarding,ahostwillusuallyonlyreceive theframesdestinedtoitselfaswellasthemulticast,broadcastandunknownframes.However,thisdoesnotimply thatswitchesarecompletelysecure.
Thereare,unfortunately,attacksagainstEthernetswitches.
Fromasecurity perspective, the MAC address table is one of the fragile elements of an Ethernet switch.
This table has a ﬁxed size.
Somelow-endswitchescanstoreafewtensorafewhundredsofaddresseswhilehigher-endswitchescan storetensofthousandsofaddressesormore.
Fromasecuritypointofview,alimitedresourcecanbethetarget of Denial of Service attacks.
Unfortunately, such attacks are also possible on Ethernet switches.
A malicious hostcouldoverﬂowtheMACaddresstableoftheswitchbygeneratingthousandsofframeswithrandomsource addresses.
Once the MAC address table is full, the switch needs to broadcast all the frames that it receives.
At thispoint,anattackerwillreceiveunicastframesthatarenotdestinedtoitsaddress.
TheARPattackdiscussedin thepreviouschaptercouldalsooccurwithEthernetswitches[Vyncke2007].
Recentswitchesimplementseveral typesofdefencesagainsttheseattacks,buttheyneedtobecarefullyconﬁguredbythenetworkadministrator.
See [Vyncke2007]foradetaileddiscussiononsecurityissueswithEthernetswitches.
TheMACaddresslearningalgorithmcombinedwiththeforwardingalgorithmworkwellinatree-shapednetwork such as the one shown above.
However, to deal with link and switch failures, network administrators often add redundantlinkstoensurethattheirnetworkremainsconnectedevenafterafailure.
Letusconsiderwhathappens intheEthernetnetworkshownintheﬁgurebelow.
When all switches boot, their MAC address table is empty.
Assume that host A sends a frame towards host C. Upon reception of this frame, switch1 updates its MAC address table to remember that address A is reachable 236 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure6.26: Ethernetswitchesinaloop via its West port.
As there is no entry for address C in switch1’s MAC address table, the frame is forwarded to both switch2 and switch3.
When switch2 receives the frame, its updates its MAC address table for address A andforwardstheframetohostCaswellastoswitch3.
switch3hasthusreceivedtwocopiesofthesameframe.
Asswitch3doesnotknow howtoreachthedestinationaddress, itforwardsthe frame receivedfromswitch1to switch2andtheframereceivedfromswitch2toswitch1... ThesingleframesentbyhostAwillbecontinuously duplicatedbytheswitchesuntiltheirMACaddresstablecontainsanentryforaddressC.Quickly,alltheavailable link bandwidth will be used to forward all the copies of this frame.
As Ethernet does not contain any TTL or HopLimit,thisloopwillneverstop.
The MAC address learning algorithm allows switches to be plug-and-play.
Unfortunately, the loops that arise whenthenetworktopologyisnotatreeareasevereproblem.
Forcingtheswitchestoonlybeusedintree-shaped networks as hubs would be a severe limitation.
To solve this problem, the inventors of Ethernet switches have developedtheSpanningTreeProtocol.
ThisprotocolallowsswitchestoautomaticallydisableportsonEthernet switchestoensurethatthenetworkdoesnotcontainanycyclethatcouldcauseframestoloopforever.
TheSpanningTreeProtocol(802.1d) TheSpanningTreeProtocol(STP),proposedin[Perlman1985],isadistributedprotocolthatisusedbyswitches to reduce the network topology to a spanning tree, so that there are no cycles in the topology.
For example, considerthenetworkshownintheﬁgurebelow.
Inthisﬁgure,eachboldlinecorrespondstoanEthernettowhich two Ethernet switches are attached.
This network contains several cycles that must be broken to allow Ethernet switchesthatareusingtheMACaddresslearningalgorithmtoexchangeframes.
Inthisnetwork, theSTPwillcomputethefollowingspanningtree.
Switch1willbetherootofthetree.
Allthe interfacesofSwitch1, Switch2andSwitch7 arepartofthespanningtree.
OnlytheinterfaceconnectedtoLANB will be active on Switch9.
LANH will only be served by Switch7 and the port of Switch44 on LANG will be disabled.
AframeoriginatingonLANBanddestinedforLANAwillbeforwardedbySwitch7 onLANC,thenby Switch1onLANE,thenbySwitch44onLANFandeventuallybySwitch2onLANA.
Switches running the Spanning Tree Protocol exchange BPDUs.
These BPDUs are always sent as frames with destinationMACaddressastheALL_BRIDGES reservedmulticastMACaddress.
Eachswitchhasaunique64 bitidentiﬁer.
Toensureuniqueness,thelower48bitsoftheidentiﬁeraresettotheuniqueMACaddressallocated totheswitchbyitsmanufacturer.
Thehighorder16bitsoftheswitchidentiﬁercanbeconﬁguredbythenetwork administratortoinﬂuencethetopologyofthespanningtree.
Thedefaultvalueforthesehighorderbitsis32768.
6.3.
Datalinklayertechnologies 237 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure6.27: SpanningtreecomputedinaswitchedEthernetnetwork TheswitchesexchangeBPDUstobuildthespanningtree.
Intuitively,thespanningtreeisbuiltbyﬁrstselecting theswitchwiththesmallestidentiﬁerastherootofthetree.
Thebranchesofthespanningtreearethencomposed oftheshortestpathsthatallowalloftheswitchesthatcomposethenetworktobereached.
TheBPDUsexchanged bytheswitchescontainthefollowinginformation: • theidentiﬁeroftherootswitch(R) • thecostoftheshortestpathbetweentheswitchthatsenttheBPDUandtherootswitch(c) • theidentiﬁeroftheswitchthatsenttheBPDU(T) • thenumberoftheswitchportoverwhichtheBPDUwassent(p) We will use the notation <R,c,T,p> to represent a BPDU whose root identiﬁer is R, cost is c and that was sent on the port p of switch T. The construction of the spanning tree depends on an ordering relationship among the BPDUs.
Thisorderingrelationshipcouldbeimplementedbythepythonfunctionbelow.
# returns True if bpdu b1 is better than bpdu b2 def better( b1, b2) : return ( (b1.R < b2.R) or ( (b1.R==b2.R) and (b1.c<b2.c) ) or ( (b1.R==b2.R) and (b1.c==b2.c) and (b1.T<b2.T) ) or ( (b1.R==b2.R) and (b1.c==b2.c) and (b1.T==b2.T) and (b1.p<b2.p) ) ) Inadditiontotheidentiﬁerdiscussedabove,thenetworkadministratorcanalsoconﬁgureacosttobeassociated toeachswitchport.
Usually,thecostofaportdependsonitsbandwidthandthe[802.1d]standardrecommends thevaluesbelow.
Ofcourse,thenetworkadministratormaychooseothervalues.
Wewillusethenotationcost[p] toindicatethecostassociatedtoportpinthissection.
Bandwidth Cost 10Mbps 2000000 100Mbps 200000 1Gbps 20000 10Gbps 2000 100Gbps 200 TheSpanningTreeProtocolusesitsownterminologythatweillustrateintheﬁgureabove.
Aswitchportcanbe in three different states : Root, Designated and Blocked.
All the ports of the root switch are in the Designated state.
ThestateoftheportsontheotherswitchesisdeterminedbasedontheBPDUreceivedoneachport.
The Spanning Tree Protocol uses the ordering relationship to build the spanning tree.
Each switch listens to BPDUs on its ports.
When BPDU=<R,c,T,p> is received on port q, the switch computes the port’s priority vector: V[q]=<R,c+cost[q],T,p,q> , where cost[q] is the cost associated to the port over which the BPDU was 238 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 received.
Theswitchstoresinatablethelastpriorityvectorreceivedoneachport.
Theswitchthencomparesits ownidentiﬁerwiththesmallestrootidentiﬁerstoredinthistable.
Ifitsownidentiﬁerissmaller,thentheswitch istherootofthespanningtreeandis,bydeﬁnition,atadistance0oftheroot.
TheBPDU oftheswitchisthen <R,0,R,p>, where R is the switch identiﬁer and p will be set to the port number over which the BPDU is sent.
Otherwise,theswitchchoosesthebestpriorityvectorfromitstable,bv=<R,c,T,p>.
Theportoverwhichthisbest priorityvectorwaslearnedistheswitchportthatisclosesttotherootswitch.
ThisportbecomestheRootportof theswitch.
ThereisonlyoneRootportperswitch.
TheswitchcanthencomputeitsBPDUasBPDU=<R,c,S,p> , where R is the root identiﬁer, c the cost of the best priority vector, S the identiﬁer of the switch and p will be replacedbythenumberoftheportoverwhichtheBPDU willbesent.
Theswitchcanthendeterminethestate ofallitsportsbycomparingitsownBPDU withthepriorityvectorreceivedoneachport.
Iftheswitch’sBPDU isbetterthanthepriorityvectorofthisport,theportbecomesaDesignated port.
Otherwise,theportbecomesa Blockedport.
ThestateofeachportisimportantwhenconsideringthetransmissionofBPDUs.
Therootswitchregularlysends itsownBPDU overallofits(Designated)ports.
ThisBPDU isreceivedontheRootportofalltheswitchesthat aredirectlyconnectedtotherootswitch.
EachoftheseswitchescomputesitsownBPDU andsendsthisBPDU over all its Designated ports.
These BPDUs are then received on the Root port of downstream switches, which then compute their own BPDU, etc.
When the network topology is stable, switches send their own BPDU on all their Designated ports, once they receive a BPDU on their Root port.
No BPDU is sent on a Blocked port.
Switches listen for BPDUs on their Blocked and Designated ports, but no BPDU should be received over these portswhenthetopologyisstable.
TheutilisationoftheportsforbothBPDUsanddataframesissummarisedin thetablebelow.
Portstate ReceivesBPDUs SendsBPDU Handlesdataframes Blocked yes no no Root yes no yes Designated yes yes yes ToillustratetheoperationoftheSpanningTreeProtocol,letusconsiderthesimplenetworktopologyintheﬁgure below.
Figure6.28: AsimpleSpanningtreecomputedinaswitchedEthernetnetwork Assume that Switch4 is the ﬁrst to boot.
It sends its own BPDU=<4,0,4,?> on its two ports.
When Switch1 boots, it sends BPDU=<1,0,1,1>.
This BPDU is received by Switch4, which updates its table and computes a newBPDU=<1,3,4,?>.
Port1ofSwitch4becomestheRoot portwhileitssecondportisstillintheDesignated state.
AssumenowthatSwitch9bootsandimmediatelyreceivesSwitch1‘sBPDUonport1.
Switch9computesitsown BPDU=<1,1,9,?>andport1becomestheRootportofthisswitch.
ThisBPDU issentonport2ofSwitch9and 6.3.
Datalinklayertechnologies 239 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 reachesSwitch4.
Switch4comparesthepriorityvectorbuiltfromthisBPDU(i.e.
<1,2,9,2>)andnoticesthatitis betterthanSwitch4‘sBPDU=<1,3,4,2>.
Thus,port2becomesaBlockedportonSwitch4.
Duringthecomputationofthespanningtree,switchesdiscardallreceiveddataframes,asatthattimethenetwork topologyisnotguaranteedtobeloop-free.
Oncethattopologyhasbeenstableforsometime,theswitchesagain start to use the MAC learning algorithm to forward data frames.
Only the Root and Designated ports are used to forward data frames.
Switches discard all the data frames received on their Blocked ports and never forward framesontheseports.
Switches, ports and links can fail in a switched Ethernet network.
When a failure occurs, the switches must be able to recompute the spanning tree to recover from the failure.
The Spanning Tree Protocol relies on regular transmissions of the BPDUs to detect these failures.
A BPDU contains two additional ﬁelds : the Age of the BPDUandtheMaximumAge.
TheAgecontainstheamountoftimethathaspassedsincetherootswitchinitially originatedtheBPDU.TherootswitchsendsitsBPDUwithanAgeofzeroandeachswitchthatcomputesitsown BPDU increments its Age by one.
The Age of the BPDUs stored on a switch’s table is also incremented every second.
A BPDU expires when its Age reaches the Maximum Age.
When the network is stable, this does not happenasBPDU sareregularlysentbytheroot switchanddownstreamswitches.
However, iftheroot failsor thenetworkbecomespartitioned,BPDUwillexpireandswitcheswillrecomputetheirownBPDUandrestartthe Spanning Tree Protocol.
Once a topology change has been detected, the forwarding of the data frames stops as thetopologyisnotguaranteedtobeloop-free.
Additionaldetailsaboutthereactiontofailuresmaybefoundin [802.1d] VirtualLANs AnotherimportantadvantageofEthernetswitchesistheabilitytocreateVirtualLocalAreaNetworks(VLANs).
AvirtualLANcanbedeﬁnedasasetofportsattachedtooneormoreEthernetswitches.
Aswitchcansupport severalVLANsanditrunsoneMAClearningalgorithmforeachVirtualLAN.Whenaswitchreceivesaframe withanunknownoramulticastdestination,itforwardsitoveralltheportsthatbelongtothesameVirtualLAN but not over the ports that belong to other Virtual LANs.
Similarly, when a switch learns a source address on a port,itassociatesittotheVirtualLANofthisportandusesthisinformationonlywhenforwardingframesonthis VirtualLAN.
TheﬁgurebelowillustratesaswitchedEthernetnetworkwiththreeVirtualLANs.VLAN2andVLAN3onlyrequire alocalconﬁgurationofswitchS1.
HostCcanexchangeframeswithhostD,butnotwithhoststhatareoutsideof itsVLAN.VLAN1ismorecomplexasthereareportsofthisVLANonseveralswitches.
TosupportsuchVLANs, localconﬁgurationisnotsufﬁcientanymore.
Whenaswitchreceivesaframefromanotherswitch,itmustbeable todeterminetheVLAN inwhichtheframeoriginatedtouse thecorrectMACtabletoforwardthe frame.
This isdonebyassigninganidentiﬁertoeachVirtualLANandplacingthisidentiﬁerinsidetheheadersoftheframes thatareexchangedbetweenswitches.
Figure6.29: VirtualLocalAreaNetworksinaswitchedEthernetnetwork IEEE deﬁned in the [802.1q] standard a special header to encode the VLAN identiﬁers.
This 32 bit header includesa20bitVLANﬁeldthatcontainstheVLANidentiﬁerofeachframe.
Theformatofthe[802.1q]header isdescribedbelow.
The[802.1q]headerisinsertedimmediatelyafterthesourceMACaddressintheEthernetframe(i.e.
beforethe EtherType ﬁeld).
The maximum frame size is increased by 4 bytes.
It is encoded in 32 bits and contains four 240 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure6.30: Formatofthe802.1qheader ﬁelds.
TheTagProtocolIdentiﬁerissetto0x8100toallowthereceivertodetectthepresenceofthisadditional header.
ThePriorityCodePoint (PCP)isathreebitﬁeldthatisusedtosupportdifferenttransmissionpriorities fortheframe.
Value0isthelowestpriorityandvalue7 thehighest.
Frameswithahigherprioritycanexpectto beforwardedearlierthanframeshavingalowerpriority.
TheCbitisusedforcompatibilitybetweenEthernetand TokenRingnetworks.
Thelast12bitsofthe802.1qheadercontaintheVLANidentiﬁer.
Value0indicatesthat theframedoesnotbelongtoanyVLANwhilevalue0xFFF isreserved.
Thisimpliesthat4094differentVLAN identiﬁerscanbeusedinanEthernetnetwork.
6.3.3 802.11 wireless networks Theradiospectrumisalimitedresourcethatmustbesharedbyeveryone.
Duringmostofthetwentiethcentury, governmentsandinternationalorganisationshaveregulatedmostoftheradiospectrum.
Thisregulationcontrols the utilisation of the radio spectrum, in order to ensure that there are no interferences between different users.
A company that wants to use a frequency range in a given region must apply for a license from the regulator.
Most regulators charge a fee for the utilisation of the radio spectrum and some governments have encouraged competitionamongcompaniesbiddingforthesamefrequencytoincreasethelicensefees.
Inthe1970s,aftertheﬁrstexperimentswithALOHANet,interestinwirelessnetworksgrew.
Manyexperiments were done on and outside the ARPANet.
One of these experiments was the ﬁrst mobile phone , which was de- velopedandtestedin1973.
Thisexperimentalmobilephonewasthestartingpointfortheﬁrstgenerationanalog mobilephones.
Giventhegrowingdemandformobilephones,itwasclearthattheanalogmobilephonetechnol- ogywasnotsufﬁcienttosupportalargenumberofusers.
Tosupportmoreusersandnewservices,researchersin several countries worked on the development of digital mobile telephones.
In 1987, several European countries decidedtodevelopthestandardsforacommoncellulartelephonesystemacrossEurope: theGlobalSystemfor Mobile Communications (GSM).
Since then, the standards have evolved and more than three billion users are connectedtoGSMnetworkstoday.
While most of the frequency ranges of the radio spectrum are reserved for speciﬁc applications and require a speciallicence,thereareafewexceptions.
TheseexceptionsareknownastheIndustrial,ScientiﬁcandMedical (ISM)radiobands.
Thesebandscanbeusedforindustrial,scientiﬁcandmedicalapplicationswithoutrequiring a licence from the regulator.
For example, some radio-controlled models use the 27 MHz ISM band and some cordless telephones operate in the 915 MHz ISM.
In 1985, the 2.400-2.500 GHz band was added to the list of ISMbands.
Thisfrequencyrangecorrespondstothefrequenciesthatareemittedbymicrowaveovens.
Sharing thisbandwithlicensedapplicationswouldhavelikelycausedinterferences,giventhelargenumberofmicrowave ovensthatareused.
Despitetheriskofinterferenceswithmicrowaveovens,theopeningofthe2.400-2.500GHz allowedthenetworkingindustrytodevelopseveralwirelessnetworktechniquestoallowcomputerstoexchange datawithoutusingcables.
Inthissection,wediscussinmoredetailthemostpopularone,i.e.
theWiFi[802.11] familyofwirelessnetworks.
OtherwirelessnetworkingtechniquessuchasBlueToothorHiperLANusethesame frequencyrange.
Today,WiFiisaverypopularwirelessnetworkingtechnology.
Therearemorethanseveralhundredsofmillions of WiFi devices.
The development of this technology started in the late 1980s with the WaveLAN proprietary wireless network.
WaveLAN operated at 2 Mbps and used different frequency bands in different regions of the world.
Intheearly1990s,theIEEEcreatedthe802.11workinggrouptostandardiseafamilyofwirelessnetwork technologies.
Thisworkinggroupwasveryproliﬁcandproducedseveralwirelessnetworkingstandardsthatuse differentfrequencyrangesanddifferentphysicallayers.
Thetablebelowprovidesasummaryofthemain802.11 standards.
6.3.
Datalinklayertechnologies 241 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Standard Frequency Typicalthroughput Maxbandwidth Range(m)indoor/outdoor 802.11 2.4GHz 0.9Mbps 2Mbps 20/100 802.11a 5GHz 23Mbps 54Mbps 35/120 802.11b 2.4GHz 4.3Mbps 11Mbps 38/140 802.11g 2.4GHz 19Mbps 54Mbps 38/140 802.11n 2.4/5GHz 74Mbps 150Mbps 70/250 When developing its family of standards, the IEEE 802.11 working group took a similar approach as the IEEE 802.3workinggroupthatdevelopedvarioustypesofphysicallayersforEthernetnetworks.
802.11networksuse theCSMA/CAMediumAccessControltechniquedescribedearlierandtheyallassumethesamearchitectureand usethesameframeformat.
ThearchitectureofWiFinetworksisslightlydifferentfromtheLocalAreaNetworksthatwehavediscusseduntil now.
Thereare,inpractice,twomaintypesofWiFinetworks: independentoradhocnetworksandinfrastructure networks11.
Anindependentoradhocnetworkiscomposedofasetofdevicesthatcommunicatewitheachother.
These devices play the same role and the adhoc network is usually not connected to the global Internet.
Adhoc networksareusedwhenforexampleafewlaptopsneedtoexchangeinformationortoconnectacomputerwitha WiFiprinter.
Figure6.31: An802.11independentoradhocnetwork MostWiFinetworksareinfrastructurenetworks.
Aninfrastructurenetworkcontainsoneormoreaccesspoints thatareattachedtoaﬁxedLocalAreaNetwork(usuallyanEthernetnetwork)thatisconnectedtoothernetworks suchastheInternet.
TheﬁgurebelowshowssuchanetworkwithtwoaccesspointsandfourWiFidevices.
Each WiFi device is associated to one access point and uses this access point as a relay to exchange frames with the devicesthatareassociatedtoanotheraccesspointorreachablethroughtheLAN.
An802.11accesspointisarelaythatoperatesinthedatalinklayerlikeswitches.
Theﬁgurebelowrepresentsthe layersofthereferencemodelthatareinvolvedwhenaWiFihostcommunicateswithahostattachedtoanEthernet networkthroughanaccesspoint.
802.11 devices exchange variable length frames, which have a slightly different structure than the simple frame formatusedinEthernetLANs.
Wereviewthekeypartsofthe802.11frames.
Additionaldetailsmaybefound in [802.11] and [Gast2002] .
An 802.11 frame contains a ﬁxed length header, a variable length payload that maycontainup2324bytesofuserdataanda32bitsCRC.Althoughthepayloadcancontainupto2324bytes, 11The802.11workinggroupdeﬁnedthebasicserviceset(BSS)asagroupofdevicesthatcommunicatewitheachother.
Wecontinueto usenetworkwhenreferringtoasetofdevicesthatcommunicate.
242 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure6.32: An802.11infrastructurenetwork Figure6.33: An802.11accesspoint 6.3.
Datalinklayertechnologies 243 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 most802.11deploymentsuseamaximumpayloadsizeof1500bytesastheyareusedininfrastructurenetworks attachedtoEthernetLANs.
An802.11dataframeisshownbelow.
Figure6.34: 802.11dataframeformat The ﬁrst part of the 802.11 header is the 16 bit Frame Control ﬁeld.
This ﬁeld contains ﬂags that indicate the typeofframe(dataframe, RTS/CTS,acknowledgement, managementframes, etc), whethertheframeissentto orfromaﬁxedLAN,etc[802.11].
TheDurationisa16bitﬁeldthatisusedtoreservethetransmissionchannel.
Indataframes,theDurationﬁeldisusuallysettothetimerequiredtotransmitoneacknowledgementframeafter aSIFSdelay.
NotethattheDurationﬁeldmustbesettozeroinmulticastandbroadcastframes.
Astheseframes arenotacknowledged,thereisnoneedtoreservethetransmissionchannelaftertheirtransmission.
TheSequence controlﬁeldcontainsa12bitssequencenumberthatisincrementedforeachdataframe.
The astute reader may have noticed that the 802.11 data frames contain three 48-bits address ﬁelds 12 .
This is surprisingcomparedtootherprotocolsinthenetworkanddatalinklayerswhoseheadersonlycontainasourceand adestinationaddress.Theneedforathirdaddressinthe802.11headercomesfromtheinfrastructurenetworks.In suchanetwork,framesareusuallyexchangedbetweenroutersandserversattachedtotheLANandWiFidevices attached to one of the access points.
The role of the three address ﬁelds is speciﬁed by bit ﬂags in the Frame Controlﬁeld.
WhenaframeissentfromaWiFidevicetoaserverattachedtothesameLANastheaccesspoint,theﬁrstaddress oftheframeissettotheMACaddressoftheaccesspoint, thesecondaddressissettotheMACaddressofthe source WiFi device and the third address is the address of the ﬁnal destination on the LAN.
When the server replies, it sends an Ethernet frame whose source address is its MAC address and the destination address is the MACaddressoftheWiFidevice.
ThisframeiscapturedbytheaccesspointthatconvertstheEthernetheaderinto an802.11frameheader.
The802.11framesentbytheaccesspointcontainsthreeaddresses: theﬁrstaddressis theMACaddressofthedestinationWiFidevice,thesecondaddressistheMACaddressoftheaccesspointand thethirdaddresstheMACaddressoftheserverthatsenttheframe.
802.11controlframesaresimplerthandataframes.
TheycontainaFrameControl, aDurationﬁeldandoneor twoaddresses.
Theacknowledgementframesareverysmall.
Theyonlycontaintheaddressofthedestinationof theacknowledgement.
ThereisnosourceaddressandnoSequenceControlﬁeldintheacknowledgementframes.
Thisisbecausetheacknowledgementframecaneasilybeassociatedtothepreviousframethatitacknowledges.
Indeed,eachunicastdataframecontainsaDurationﬁeldthatisusedtoreservethetransmissionchanneltoensure thatnocollisionwillaffecttheacknowledgementframe.TheSequenceControlﬁeldismainlyusedbythereceiver toremoveduplicateframes.Duplicateframesaredetectedasfollows.Eachdataframecontainsa12bitsSequence ControlﬁeldandtheFrameControlﬁeldcontainstheRetrybitﬂagthatissetwhenaframeistransmitted.
Each 802.11receiverstoresthemostrecentsequencenumberreceivedfromeachsourceaddressinframeswhoseRetry bitisreset.UponreceptionofaframewiththeRetrybitset,thereceiververiﬁesitssequencenumbertodetermine whetheritisaduplicatedframeornot.
802.11RTS/CTSframesareusedtoreservethetransmissionchannel,inordertotransmitonedataframeandits acknowledgement.
TheRTSframescontainaDurationandthetransmitterandreceiveraddresses.
TheDuration 12 Infact,the[802.11]frameformatcontainsafourthoptionaladdressﬁeld.
Thisfourthaddressisonlyusedwhenan802.11wireless networkisusedtointerconnectbridgesattachedtotwoclassicalLANnetworks.
244 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure6.35: IEEE802.11ACKandCTSframes ﬁeldoftheRTSframeindicatesthedurationoftheentirereservation(i.e.
thetimerequiredtotransmittheCTS, thedataframe,theacknowledgementsandtherequiredSIFSdelays).
TheCTSframehasthesameformatasthe acknowledgementframe.
Figure6.36: IEEE802.11RTSframeformat Note: The802.11service Despitetheutilizationofacknowledgements,the802.11layeronlyprovidesanunreliableconnectionlessservice likeEthernetnetworksthatdonotuseacknowledgements.
The802.11acknowledgementsareusedtominimize the probability of frame duplication.
They do not guarantee that all frames will be correctly received by their recipients.
LikeEthernet,802.11networksprovideahighprobabilityofsuccessfuldeliveryoftheframes,nota guarantee.
Furthermore,itshouldbenotedthat802.11networksdonotuseacknowledgementsformulticastand broadcastframes.
Thisimpliesthatinpracticesuchframesaremorelikelytosufferfromtransmissionerrorsthan unicastframes.
Inadditiontothedataandcontrolframesthatwehavebrieﬂydescribedabove,802.11networksuseseveraltypes of management frames.
These management frames are used for various purposes.
We brieﬂy describe some of theseframesbelow.
Adetaileddiscussionmaybefoundin[802.11]and[Gast2002].
A ﬁrst type of management frames are the beacon frames.
These frames are broadcasted regularly by access points.
Each beacon frame contains information about the capabilities of the access point (e.g.
the supported 802.11transmissionrates)andaServiceSetIdentity(SSID).TheSSIDisanull-terminatedASCIIstringthatcan containupto32characters.
AnaccesspointmaysupportseveralSSIDsandannouncetheminbeaconframes.
An access point may also choose to remain silent and not advertise beacon frames.
In this case, WiFi stations may sendProberequestframestoforcetheavailableaccesspointstoreturnaProberesponseframe.
Note: IPover802.11 TwotypesofencapsulationschemesweredeﬁnedtosupportIPinEthernetnetworks: theoriginalencapsulation scheme, built above the Ethernet DIX format is deﬁned in RFC 894 and a second encapsulation RFC 1042 scheme, built above the LLC/SNAP protocol [802.2].
In 802.11 networks, the situation is simpler and only the RFC1042encapsulationisused.
Inpractice,thisencapsulationadds6bytestothe802.11header.
Theﬁrstfour bytescorrespondtotheLLC/SNAPheader.
TheyarefollowedbythetwobytesEthernetTypeﬁeld(0x800forIP and0x806forARP).TheﬁgurebelowshowsanIPpacketencapsulatedinan802.11frame.
The second important utilisation of the management frames is to allow a WiFi station to be associated with an accesspoint.
WhenaWiFistationstarts,itlistenstobeaconframestoﬁndtheavailableSSIDs.
Tobeallowedto 6.3.
Datalinklayertechnologies 245 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure6.37: IPoverIEEE802.11 sendandreceiveframesviaanaccesspoint,aWiFistationmustbeassociatedtothisaccesspoint.
Iftheaccess pointdoesnotuseanysecuritymechanismtosecurethewirelesstransmission,theWiFistationsimplysendsan Associationrequestframetoitspreferredaccesspoint(usuallytheaccesspointthatitreceiveswiththestrongest radio signal).
This frame contains some parameters chosen by the WiFi station and the SSID that it requests to join.
TheaccesspointreplieswithanAssociationresponseframeifitacceptstheWiFIstation.
6.4 Summary Inthischapter,weﬁrstexplainedtheprinciplesofthedatalinklayer.
Therearetwotypesofdatalinklayers:those usedoverpoint-to-pointlinksandthoseusedoverLocalAreaNetworks.Onpoint-to-pointlinks,thedatalinklayer mustatleastprovideaframingtechnique,butsomedatalinklayerprotocolsalsoincludereliabilitymechanisms such as those used in the transport layer.
We have described the Point-to-Point Protocol that is often used over point-to-pointlinksintheInternet.
LocalAreaNetworksposeadifferentproblemsinceseveraldevicessharethesametransmissionchannel.
Inthis case,aMediumAccessControlalgorithmisnecessarytoregulatetheaccesstothetransmissionchannelbecause whenever two devices transmit at the same time a collision occurs and none of these frames can be decoded by their recipients.
There are two families of MAC algorithms.
The statistical or optimistic MAC algorithms reducetheprobabilityofcollisionsbutdonotcompletelypreventthem.
Withsuchalgorithms,whenacollision occurs, the collided frames must be retransmitted.
We have described the operation of the ALOHA, CSMA, CSMA/CDandCSMA/CAMACalgorithms.
DeterministicorpessimisticMACalgorithmsavoidallcollisions.
WehavedescribedtheTokenRingMACwherestationsexchangeatokentoregulatetheaccesstothetransmission channel.
Finally,wehavedescribedinmoredetailtwosuccessfulLocalAreaNetworktechnologies: EthernetandWiFi.
EthernetisnowthedefactoLANtechnology.
WehaveanalysedtheevolutionofEthernetincludingtheoperation of hubs and switches.
We have also described the Spanning Tree Protocol that must be used when switches are interconnected.
For the last few years, WiFi became the de facto wireless technology at home and inside enterprises.
WehaveexplainedtheoperationofWiFinetworksanddescribedthemain802.11frames.
6.5 Exercises 1.
Considertheswitchednetworkshownintheﬁgurebelow.
Whatisthespanningtreethatwillbecomputed by802.1dinthisnetworkassumingthatalllinkshaveaunitcost?
Indicatethestateofeachport.
2.
Considertheswitchednetworkshownintheﬁgureabove.
Inthisnetwork,assumethattheLANbetween switches3and12fails.
Howshouldtheswitchesupdatetheirport/addresstablesafterthelinkfailure?
3.
Manyenterprisenetworksareorganizedwithasetofbackbonedevicesinterconnectedbyusingafullmesh oflinksasshownintheﬁgurebelow.Inthisnetwork,whatarethebeneﬁtsanddrawbacksofusingEthernet 246 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 Figure6.38: AsmallnetworkcomposedofEthernetswitches switchesandIProutersrunningOSPF?
Figure6.39: Atypicalenterprisebackbonenetwork 4.
Most commercial Ethernet switches are able to run the Spanning tree protocol independently on each VLAN.Whatarethebeneﬁtsofusingper-VLANspanningtrees?
6.5.
Exercises 247 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 248 Chapter6.
ThedatalinklayerandtheLocalAreaNetworks Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor Foundation7 CHAPTER Glossary AIMD AdditiveIncrease,MultiplicativeDecrease.
ArateadaptionalgorithmusednotablybyTCPwhereahost additivelyincreasesitstransmissionratewhenthenetworkisnotcongestedandmultiplicativelydecreases whencongestedisdetected.
anycast a transmission mode where an information is sent from one source to one receiver that belongs to a speciﬁedgroup API ApplicationProgrammingInterface ARP The Address Resolution Protocol is a protocol used by IPv4 devices to obtain the datalink layer address thatcorrespondstoanIPv4addressonthelocalareanetwork.
ARPisdeﬁnedinRFC826 ARPANET The Advanced Research Project Agency (ARPA) Network is a network that was built by network scientistsinUSAwithfundingfromtheARPAoftheUSMinistryofDefense.
ARPANETisconsideredas thegrandfatheroftoday’sInternet.
ascii The American Standard Code for Information Interchange (ASCII) is a character-encoding scheme that deﬁnes a binary representation for characters.
The ASCII table contains both printable characters and controlcharacters.
ASCIIcharacterswereencodedin7bitsandonlycontainedthecharactersrequiredto writetextinEnglish.
OthercharactersetssuchasUnicodehavebeendevelopedlatertosupportallwritten languages.
ASN.1 TheAbstractSyntaxNotationOne(ASN.1)wasdesignedbyISOandITU-T.Itisastandardandﬂexible notationthatcanbeusedtodescribedatastructuresforrepresenting,encoding,transmitting,anddecoding databetweenapplications.
ItwasdesignedtobeusedinthePresentationlayeroftheOSIreferencemodel butisnowusedinotherprotocolssuchasSNMP.
ATM AsynchronousTransferMode BGP TheBorderGatewayProtocolistheinterdomainroutingprotocolusedintheglobalInternet.
BNF A Backus-Naur Form (BNF)is aformal wayto describe alanguage byusing syntacticand lexicalrules.
BNFs are frequently used to deﬁne programming languages, but also to deﬁne the messages exchanged between networked applications.
RFC 5234 explains how a BNF must be written to specify an Internet protocol.
broadcast atransmissionmodewhereissameinformationissenttoallnodesinthenetwork CIDR ClasslessInterDomainRoutingisthecurrentaddressallocationarchitectureforIPv4.
Itwasdeﬁnedin RFC1518andRFC4632.
dial-upline Asynonymforaregulartelephoneline,i.e.
alinethatcanbeusedtodialanytelephonenumber.
DNS TheDomainNameSystemisadistributeddatabasethatallowstomapnamesonIPaddresses.
DNS TheDomainNameSystemisdeﬁnedinRFC1035 249 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 DNS The Domain Name System is a distributed database that can be queried by hosts to map names onto IP addresses eBGP An eBGP session is a BGP session between two directly connected routers that belong to two different AutonomousSystems.
AlsocalledanexternalBGPsession.
EGP ExteriorGatewayProtocol.
Synonymofinterdomainroutingprotocol EIGRP TheEnhancedInteriorGatewayRoutingProtocol(EIGRP)isaproprietaryintradomainroutingprotocol thatisoftenusedinenterprisenetworks.
EIGRPusestheDUALalgorithmdescribedin[Garcia1993].
frame aframeistheunitofinformationtransferinthedatalinklayer Frame-Relay Awideareanetworkingtechnologyusingvirtualcircuitsthatisdeployedbytelecomoperators.
ftp The File Transfer Protocol deﬁned in RFC 959 has been the de facto protocol to exchange ﬁles over the InternetbeforethewidespreadadoptionofHTTPRFC2616 FTP TheFileTransferProtocolisdeﬁnedinRFC959 hosts.txt AﬁlethatinitiallycontainedthelistofallInternethostswiththeirIPv4address.
Asthenetworkgrew, thisﬁlewasreplacedbytheDNS,buteachhoststillmaintainsasmallhosts.txtﬁlethatcanbeusedwhen DNSisnotavailable.
HTML The HyperText Markup Language speciﬁes the structure and the syntax of the documents that are ex- changedontheworldwideweb.
HTMLismaintainedbytheHTMLworkinggroupoftheW3C HTTP TheHyperTextTransportProtocolisdeﬁnedinRFC2616 hub Arelayoperatinginthephysicallayer.
IANA TheInternetAssignedNumbersAuthority(IANA)isresponsibleforthecoordinationoftheDNSRoot, IPaddressing,andotherInternetprotocolresources iBGP AniBGPsessionisaBGPbetweentworoutersbelongingtothesameAutonomousSystem.
Alsocalled aninternalBGPsession.
ICANN The Internet Corporation for Assigned Names and Numbers (ICANN) coordinates the allocation of domainnames,IPaddressesandASnumbersaswellprotocolparameters.
Italsocoordinatestheoperation andtheevolutionoftheDNSrootnameservers.
IETF TheInternetEngineeringTaskForceisanon-proﬁtorganisationthatdevelopsthestandardsfortheproto- colsusedintheInternet.TheIETFmainlycoversthetransportandnetworklayers.Severalapplicationlayer protocolsarealsostandardisedwithintheIETF.TheworkintheIETFisorganisedinworkinggroups.Most oftheworkisperformedbyexchangingemailsandtherearethreeIETFmeetingseveryyear.
Participation isopentoanyone.
Seehttp://www.ietf.org IGP InteriorGatewayProtocol.
Synonymofintradomainroutingprotocol IGRP The Interior Gateway Routing Protocol (IGRP) is a proprietary intradomain routing protocol that uses distancevector.
IGRPsupportsmultiplemetricsforeachroutebuthasbeenreplacedbyEIGRP IMAP TheInternetMessageAccessProtocolisdeﬁnedinRFC3501 IMAP The Internet Message Access Protocol (IMAP), deﬁned in RFC 3501, is an application-level protocol thatallowsaclienttoaccessandmanipulatetheemailsstoredonaserver.
WithIMAP,theemailmessages remainontheserverandarenotdownloadedontheclient.
Internet apublicinternet,i.e.
anetworkcomposedofdifferentnetworksthatarerunningIPv4orIPv6 internet an internet is an internetwork, i.e.
a network composed of different networks.
The Internet is a very popularinternetwork,butotherinternetshavebeenusedinthepath.
inversequery ForDNSserversandresolvers,aninversequeryisaqueryforthedomainnamethatcorresponds toagivenIPaddress.
IP Internet Protocol is the generic term for the network layer protocol in the TCP/IP protocol suite.
IPv4 is widelyusedtodayandIPv6isexpectedtoreplaceIPv4 250 Chapter7.
Glossary Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 IPv4 is the version 4 of the Internet Protocol, the connectionless network layer protocol used in most of the Internettoday.
IPv4addressesareencodedasa32bitsﬁeld.
IPv6 is the version 6 of the Internet Protocol, the connectionless network layer protocol which is intended to replaceIPv4.
IPv6addressesareencodedasa128bitsﬁeld.
IS-IS IntermediateSystem-IntermediateSystem.
Alink-stateintradomainroutingthatwasinitiallydeﬁnedfor theISOCLNPprotocolbutwasextendedtosupportIPv4andIPv6.
IS-ISisoftenusedinISPnetworks.
It isdeﬁnedin[ISO10589] ISN TheInitialSequenceNumberofaTCPconnectionisthesequencenumberchosenbytheclient(resp.server) thatisplacedintheSYN (resp.
SYN+ACK)segmentduringtheestablishmentoftheTCPconnection.
ISO TheInternationalStandardizationOrganisationisanagencyoftheUnitedNationsthatisbasedinGeneva anddevelopstandardsonvarioustopics.
WithinISO,countryrepresentativesvotetoapproveorrejectstan- dards.
MostoftheworkonthedevelopmentofISOstandardsisdoneinexpertworkinggroups.
Additional informationaboutISOmaybeobtainedfromhttp://www.iso.int ISO TheInternationalStandardizationOrganisation ISO-3166 An ISO standard that deﬁnes codes to represent countries and their subdivisions.
See http://www.iso.org/iso/country_codes.htm ISP AnInternetServiceProvider,i.e.
anetworkthatprovidesInternetaccesstoitsclients.
ITU TheInternationalTelecommunicationUnionisaUnitedNation’sagencywhosepurposeistodevelopstan- dardsforthetelecommunicationindustry.
Itwasinitiallycreatedtostandardisethebasictelephonesystem butexpandedlatertowardsdatanetworks.
TheworkwithinITUismainlydonebynetworkspecialistsfrom thetelecommunicationindustry(operatorsandvendors).
Seehttp://www.itu.intformoreinformation IXP InterneteXchangePoint.
Alocationwhereroutersbelongingtodifferentdomainsareattachedtothesame Local Area Network to establish peering sessions and exchange packets.
See http://www.euro-ix.net/ or http://en.wikipedia.org/wiki/List_of_Internet_exchange_points_by_sizeforapartiallistofIXPs.
LAN LocalAreaNetwork leasedline Atelephonelinethatispermanentlyavailablebetweentwoendpoints.
MAN MetropolitanAreaNetwork MIME TheMultipurposeInternetMailExtensions(MIME)deﬁnedinRFC2045areasetofextensionstothe formatofemailmessagesthatallowtousenon-ASCIIcharactersinsidemailmessages.
AMIMEmessage canbecomposedofseveraldifferentpartseachhavingadifferentformat.
MIMEdocument AMIMEdocumentisadocument,encodedbyusingtheMIMEformat.
minicomputer A minicomputer is a multi-user system that was typically used in the 1960s/1970s to serve departments.
See the corresponding wikipedia article for additional information : http://en.wikipedia.org/wiki/Minicomputer modem Amodem(modulator-demodulator)isadevicethatencodes(resp.decodes)digitalinformationbymod- ulating(resp.
demodulating)ananalogsignal.
Modemsarefrequentlyusedtotransmitdigitalinformation overtelephonelinesandradiolinks.
Seehttp://en.wikipedia.org/wiki/Modemforasurveyofvarioustypes ofmodems MSS ATCPoptionusedbyaTCPentityinSYNsegmentstoindicatetheMaximumSegmentSizethatitisable toreceive.
multicast atransmissionmodewhereaninformationissentefﬁcientlytoallthereceiversthatbelongtoagiven group nameserver AserverthatimplementstheDNSprotocolandcananswerqueriesfornamesinsideitsowndomain.
NAT ANetworkAddressTranslatorisamiddleboxthattranslatesIPpackets.
NBMA ANonBroadcastModeMultipleAccessNetworkisasubnetworkthatsupportsmultiplehosts/routers butdoesnotprovideanefﬁcientwayofsendingbroadcastframestoalldevicesattachedtothesubnetwork.
ATMsubnetworksareanexampleofNBMAnetworks.
251 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 network-byteorder Internetprotocolallowtotransportsequencesofbytes.
Thesesequencesofbytesaresuf- ﬁcienttocarryASCIIcharacters.
Thenetwork-byteorderreferstotheBig-Endianencodingfor16and32 bitsinteger.
Seehttp://en.wikipedia.org/wiki/Endianness NFS TheNetworkFileSystemisdeﬁnedinRFC1094 NTP TheNetworkTimeProtocolisdeﬁnedinRFC1305 OSI OpenSystemsInterconnection.
AsetofnetworkingstandardsdevelopedbyISOincludingthe7layersOSI referencemodel.
OSPF Open Shortest Path First.
A link-state intradomain routing protocol that is often used in enterprise and ISPnetworks.
OSPFisdeﬁnedinandRFC2328andRFC5340 packet apacketistheunitofinformationtransferinthenetworklayer PBL Problem-basedlearningisateachingapproachthatreliesonproblems.
POP ThePostOfﬁceProtocolisdeﬁnedinRFC1939 POP ThePostOfﬁceProtocol(POP),deﬁnedRFC1939,isanapplication-levelprotocolthatallowsaclientto downloademailmessagesstoredonaserver.
resolver A server that implements the DNS protocol and can resolve queries.
A resolver usually serves a set of clients (e.g.
all hosts in campus or all clients of a given ISP).
It sends DNS queries to nameservers everywhereonbehalfofitsclientsandstoresthereceivedanswersinitscache.
Aresolvermustknowthe IPaddressesoftherootnameservers.
RIP RoutingInformationProtocol.
Anintradomainroutingprotocolbasedondistancevectorsthatissometimes usedinenterprisenetworks.
RIPisdeﬁnedinRFC2453.
RIR RegionalInternetRegistry.
AnorganisationthatmanagesIPaddressesandASnumbersonbehalfofIANA.
rootnameserver A name server that is responsible for the root of the domain names hierarchy.
There are currentlyadozenrootnameserversandeachDNSresolverSeehttp://www.root-servers.org/formoreinfor- mationabouttheoperationoftheserootservers.
round-trip-time Theround-trip-time(RTT)isthedelaybetweenthetransmissionofasegmentandthereception ofthecorrespondingacknowledgementinatransportprotocol.
router Arelayoperatinginthenetworklayer.
RPC Severaltypesofremoteprocedurecallshavebeendeﬁned.
TheRPCmechanismdeﬁnedinRFC5531is usedbyapplicationssuchasNFS SDU(ServiceDataUnit) aServiceDataUnitistheunitinformationtransferredbetweenapplications segment asegmentistheunitofinformationtransferinthetransportlayer SMTP TheSimpleMailTransferProtocolisdeﬁnedinRFC821 SNMP TheSimpleNetworkManagementProtocolisamanagementprotocoldeﬁnedforTCP/IPnetworks.
socket Alow-levelAPIoriginallydeﬁnedonBerkeleyUnixtoallowprogrammerstodevelopclientsandservers.
spoofedpacket A packet is said to be spoofed when the sender of the packet has used as source address a differentaddressthanitsown.
SSH TheSecureShell(SSH)TransportLayerProtocolisdeﬁnedinRFC4253 standardquery ForDNSserversandresolvers, astandardqueryisaqueryforaAoraAAAArecord.
Sucha querytypicallyreturnsanIPaddress.
switch Arelayoperatinginthedatalinklayer.
SYNcookie TheSYNcookiesisatechniqueusedtocomputetheinitialsequencenumber(ISN) TCB TheTransmissionControlBlockisthesetofvariablesthataremaintainedforeachestablishedTCPcon- nectionbyaTCPimplementation.
TCP The Transmission Control Protocol is a protocol of the transport layer in the TCP/IP protocol suite that providesareliablebytestreamconnection-orientedserviceontopofIP 252 Chapter7.
Glossary Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 TCP/IP referstotheTCPandIPprotocols telnet ThetelnetprotocolisdeﬁnedinRFC854 TLD ATop-leveldomainname.
TherearetwotypesofTLDs.
TheccTLDaretheTLDthatcorrespondtoatwo lettersISO-3166countrycode.
ThegTLDarethegenericTLDsthatarenotassignedtoacountry.
TLS TransportLayerSecurity,deﬁnedinRFC5246isacryptographicprotocolthatisusedtoprovidecommu- nicationsecurityforInternetapplications.Thisprotocolisusedontopofthetransportservicebutadetailed descriptionisoutsidethescopeofthisbook.
UDP UserDatagramProtocolisaprotocolofthetransportlayerintheTCP/IPprotocolsuitethatprovidesan unreliableconnectionlessservicethatincludesamechanismtodetectcorruption unicast atransmissionmodewhereaninformationissentfromonesourcetoonerecipient vnc A networked application that allows to remotely access a computer’s Graphical User Interface.
See http://en.wikipedia.org/wiki/Virtual_Network_Computing W3C The world wide web consortium was created to standardise the protocols and mechanisms used in the globalwww.
Itisthusfocusedonasubsetoftheapplicationlayer.
Seehttp://www.w3c.org WAN WideAreaNetwork X.25 Awideareanetworkingtechnologyusingvirtualcircuitsthatwasdeployedbytelecomoperators.
X11 TheXWindowsystemandtheassociatedprotocolsaredeﬁnedin[SG1990] XML TheeXtensibleMarkupLanguage(XML)isaﬂexibletextformatderivedfromSGML.Itwasoriginally designedfortheelectronicpublishingindustrybutisnowusedbyawidevarietyofapplicationsthatneed toexchangestructureddata.
TheXMLspeciﬁcationsaremaintainedbyseveralworkinggroupsoftheW3C 253 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 254 Chapter7.
Glossary Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor Foundation8 CHAPTER Bibliography Wheneverpossible,thebibliographyincludesstablehypertextlinkstothereferencescited.
255 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 256 Chapter8.
Bibliography Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor Foundation9 CHAPTER Indices and tables • genindex • search 257 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 258 Chapter9.
Indicesandtables Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationBibliography [802.11] LAN/MANStandardsCommitteeoftheIEEEComputerSociety.IEEEStandardforInformationTech- nology-Telecommunicationsandinformationexchangebetweensystems-localandmetropolitanareanet- works-speciﬁcrequirements-Part11: WirelessLANMediumAccessControl(MAC)andPhysicalLayer (PHY)Speciﬁcations.IEEE,1999.
[802.1d] LAN/MAN Standards Committee of the IEEE Computer Society, IEEE Standard for Local and metropolitanareanetworksMediaAccessControl(MAC)Bridges,IEEEStd802.1DTM-2004,2004, [802.1q] LAN/MAN Standards Committee of the IEEE Computer Society, IEEE Standard for Local and metropolitanareanetworks—VirtualBridgedLocalAreaNetworks,2005, [802.2] IEEE 802.2-1998 (ISO/IEC 8802-2:1998), IEEE Standard for Information technology– Telecommunications and information exchange between systems–Local and metropoli- tan area networks–Speciﬁc requirements–Part 2: Logical Link Control.
Available from http://standards.ieee.org/getieee802/802.2.html [802.3] LAN/MAN Standards Committee of the IEEE Computer Society.
IEEE Standard for Information Technology - Telecommunications and information exchange between systems - local and metropoli- tan area networks - speciﬁc requirements - Part 3 : Carrier Sense multiple access with collision detection (CSMA/CD) access method and physical layer speciﬁcation.
IEEE, 2000.
Available from http://standards.ieee.org/getieee802/802.3.html [802.5] LAN/MAN Standards Committee of the IEEE Computer Society.
IEEE Standard for Information technology–Telecommunications and information exchange between systems–Local and metropolitan area networks–Speciﬁcrequirements–Part5: TokenRingAccessMethodandPhysicalLayerSpeciﬁcation.IEEE, 1998.availablefromhttp://standards.ieee.org/getieee802 [ACO+2006] Augustin,B.,Cuvellier,X.,Orgogozo,B.,Viger,F.,Friedman,T.,Latapy,M.,Magnien,C.,Teix- eira, R., Avoiding traceroute anomalies with Paris traceroute, Internet Measurement Conference, October 2006,Seealsohttp://www.paris-traceroute.net/ [AS2004] Androutsellis-Theotokis,S.andSpinellis,D..2004.Asurveyofpeer-to-peercontentdistributiontech- nologies.ACMComput.Surv.36,4(December2004),335-371.
[ATLAS2009] Labovitz, C., Iekel-Johnson, S., McPherson, D., Oberheide, J. and Jahanian, F., Internet inter- domain trafﬁc.
In Proceedings of the ACM SIGCOMM 2010 conference on SIGCOMM (SIGCOMM ‘10).
ACM,NewYork,NY,USA,75-86.
[AW05] Arlitt, M. and Williamson, C. 2005.
An analysis of TCP reset behaviour on the internet.
SIGCOMM Comput.Commun.Rev.35,1(Jan.2005),37-44.
259 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [Abramson1970] Abramson,N.,THEALOHASYSTEM:anotheralternativeforcomputercommunications.In ProceedingsoftheNovember17-19,1970,FallJointComputerConference(Houston,Texas,November17- 19,1970).AFIPS‘70(Fall).ACM,NewYork,NY,281-285.
[B1989] Berners-Lee,T.,InformationManagement: AProposal,March1989 [Baran] Baran,P.,Ondistributedcommunicationsseries,http://www.rand.org/about/history/baran.list.html, [BE2007] Biondi, P. and A. Ebalard, IPv6 Routing Header Security, CanSecWest Security Conference 2007, April2007.
[BF1995] Bonomi,F.andFendick,K.W.,Therate-basedﬂowcontrolframeworkfortheavailablebitrateATM service,IEEENetwork,Mar/Apr1995,Volume: 9,Issue: 2,pages: 25-39 [BG1992] Bertsekas,D.,Gallager,G.,Datanetworks,secondedition,PrenticeHall,1992 [BMO2006] Bhatia,M.,Manral,V.,Ohara,Y.,IS-ISandOSPFDifferenceDiscussions,workinprogress,Internet draft,Jan.2006 [BMvB2009] Bagnulo, M., Matthews, P., van Beijnum, I., NAT64: Network Address and Protocol Translation fromIPv6ClientstoIPv4Servers,Internetdraft,workinprogress,October2009, [BNT1997] Beech,W.,Nielsen,D.,Taylor,J.,AX.25LinkAccessProtocolforAmateurPacketRadio,version ‘2.2,Revision: July1998 [BOP1994] Brakmo, L. S., O’Malley, S. W., and Peterson, L. L., TCP Vegas: new techniques for congestion detectionandavoidance.InProceedingsoftheConferenceonCommunicationsArchitectures,Protocolsand Applications(London,UnitedKingdom,August31-September02,1994).SIGCOMM‘94.ACM,NewYork, NY,24-35.
[Benvenuti2005] Benvenuti,C.,UnderstandingLinuxNetworkInternals,O’ReillyMedia,2005 [Bush1945] Bush,V.AswemaythinkTheAtlanticMonthly176(July1945),pp.101–108 [Bush1993] Bush,R.,FidoNet: technology,tools,andhistory.Commun.ACM36,8(Aug.1993),31-35.
[Bux1989] Bux,W.,Token-ringlocal-areanetworksandtheirperformance,ProceedingsoftheIEEE,Vol77,No 2,p.238-259,Feb.1989 [BYL2008] Buford,J.,Yu,H.,Lua,E.K.,P2PNetworkingandApplications,MorganKaufmann,2008 [CB2003] Cheswick,WilliamR.,Bellovin,StevenM.,Rubin,AvielD.,Firewallsandinternetsecurity-Second edition-RepellingtheWilyHacker,Addison-Wesley2003 [CD2008] Calvert,K.,Donahoo,M.,TCP/IPSocketsinJava: PracticalGuideforProgrammers,MorganKauf- man,2008 [CJ1989] Chiu, D., Jain, R., Analysis of the Increase and Decrease Algorithms for Congestion Avoidance in ComputerNetworks,ComputerNetworksandISDNSystemsVol17,pp1-14,1989 [CK74] Cerf,V.,Kahn,R.,AProtocolforPacketNetworkIntercommunication,IEEETransactionsonCommu- nications,May1974 [CNPI09] Gont,F.,SecurityAssessmentoftheTransmissionControlProtocol(TCP),SecurityAssessmentofthe TransmissionControlProtocol(TCP),Internetdraft,workinprogress,Jan.2011 [COZ2008] Chi, Y., Oliveira, R., Zhang, L., Cyclops: The Internet AS-level Observatory, ACM SIGCOMM ComputerCommunicationReview(CCR),October2008 [CSP2009] Carr, B., Sury, O., Palet Martinez, J., Davidson, A., Evans, R., Yilmaz, F., Wijte, Y., IPv6 Address AllocationandAssignmentPolicy,RIPEdocumentripe-481,September2009 [CT1980] Crane,R.,Taft,E.,PracticalconsiderationsinEthernetlocalnetworkdesign,Proc.ofthe13thHawaii InternationalConferenceonSystemsSciences,Honolulu,January,1980,pp.166–174 [Cheshire2010] Cheshire,S.,Connect-By-NameforIPv6,presentationatIETF79th,November2010 [Cheswick1990] Cheswick, B., An Evening with Berferd In Which a Cracker is Lured, Endured, and Studied, Proc.WinterUSENIXConference,1990,pp.163-174 260 Bibliography Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [Clark88] Clark D., The Design Philosophy of the DARPA Internet Protocols, Computer Communications Re- view18:4,August1988,pp.106-114 [Comer1988] Comer,D.,InternetworkingwithTCP/IP:principles,protocols&architecture,PrenticeHall,1988 [Comer1991] Comer D., Internetworking With TCP/IP : Design Implementation and Internals, Prentice Hall, 1991 [Cohen1980] Cohen, D., On Holy Wars and a Plea for Peace, IEN 137, April 1980, http://www.ietf.org/rfc/ien/ien137.txt [DC2009] Donahoo,M.,Calvert,K.,TCP/IPSocketsinC:PracticalGuideforProgrammers,MorganKaufman, 2009, [DIX] Digital,Intel,Xerox,TheEthernet: alocalareanetwork: datalinklayerandphysicallayerspeciﬁcations.
SIGCOMMComput.Commun.Rev.11,3(Jul.1981),20-66.
[DKF+2007] Dimitropoulos,X.,Krioukov,D.,Fomenkov,M.,Huffaker,B.,Hyun,Y.,Claffy,K.,Riley,G.,AS Relationships: Inference and Validation, ACM SIGCOMM Computer Communication Review (CCR), Jan. 2007 [DP1981] Dalal, Y.K.andPrintis, R.S., 48-bitabsoluteinternetandEthernethostnumbers.InProceedingsof theSeventhSymposiumonDataCommunications(MexicoCity,Mexico,October27-29,1981).SIGCOMM ‘81.ACM,NewYork,NY,240-245.
[Dunkels2003] Dunkels,A.,FullTCP/IPfor8-BitArchitectures.InProceedingsoftheﬁrstinternationalconfer- enceonmobileapplications,systemsandservices(MOBISYS2003),SanFrancisco,May2003.
[DT2007] Donnet,B.andFriedman,T.,InternetTopologyDiscovery: aSurvey.IEEECommunicationsSurveys andTutorials,9(4):2-15,December2007 [DYGU2004] Davik, F. Yilmaz, M. Gjessing, S. Uzun, N., IEEE 802.17 resilient packet ring tutorial, IEEE CommunicationsMagazine,Mar2004,Vol42,N3,p.112-118 [Dijkstra1959] Dijkstra, E., A Note on Two Problems in Connection with Graphs.
Numerische Mathematik, 1:269-271,1959 [FDDI] ANSI.Informationsystems-FiberDistributedDataInterface(FDDI)-tokenringmediaaccesscontrol (MAC).ANSIX3.139-1987(R1997),1997 [Fletcher1982] Fletcher,J.,AnArithmeticChecksumforSerialTransmissions,Communications,IEEETransac- tionson,Jan.1982,Vol.30,N.1,pp.247-252 [FFEB2005] Francois,P.,Filsﬁls,C.,Evans,J.,andBonaventure,O.,Achievingsub-secondIGPconvergencein largeIPnetworks.SIGCOMMComput.Commun.Rev.35,3(Jul.2005),35-44.
[FJ1994] Floyd,S.,andJacobson,V.,TheSynchronizationofPeriodicRoutingMessages,IEEE/ACMTransac- tionsonNetworking,V.2N.2,p.122-136,April1994 [FLM2008] Fuller, V., Lear, E., Meyer, D., Reclassifying 240/4 as usable unicast address space, Internet draft, March2008,workinprogress [FRT2002] Fortz, B. Rexford, J. ,Thorup, M., Trafﬁc engineering with traditional IP routing protocols, IEEE CommunicationMagazine,October2002 [FTY99] TheodoreFaber,JoeTouch,andWeiYue,TheTIME-WAITstateinTCPandItsEffectonBusyServers, Proc.Infocom‘99,pp.1573 [Feldmeier95] Feldmeier,D.C.,Fastsoftwareimplementationoferrordetectioncodes.IEEE/ACMTrans.Netw.
3,6(Dec.1995),640-651.
[GAVE1999] Govindan, R., Alaettinoglu, C., Varadhan, K., Estrin, D., An Architecture for Stable, Analyzable InternetRouting,IEEENetworkMagazine,Vol.13,No.1,pp.29–35,January1999 [GC2000] Grier,D.,Campbell,M.,AsocialhistoryofBitnetandListserv,1985-1991,AnnalsoftheHistoryof Computing,IEEE,Volume22,Issue2,Apr-Jun2000,pp.32-41 [Genilloud1990] Genilloud, G., X.400 MHS: ﬁrst steps towards an EDI communication standard.
SIGCOMM Comput.Commun.Rev.20,2(Apr.1990),72-86.
Bibliography 261 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [GGR2001] Gao,L.,Grifﬁn,T.,Rexford,J.,InherentlysafebackuproutingwithBGP,Proc.IEEEINFOCOM, April2001 [GR2001] Gao,L.,Rexford,J.,StableInternetroutingwithoutglobalcoordination,IEEE/ACMTransactionson Networking,December2001,pp.681-692 [GSW2002] Grifﬁn,T.G.,Shepherd,F.B.,andWilfong,G.,Thestablepathsproblemandinterdomainrouting.
IEEE/ACMTrans.Netw.10,2(Apr.2002),232-243 [GW1999] Grifﬁn, T. G. and Wilfong, G., An analysis of BGP convergence properties.
SIGCOMM Comput.
Commun.Rev.29,4(Oct.1999),277-288.
[GW2002] Grifﬁn,T.andWilfong,G.T.,AnalysisoftheMEDOscillationProbleminBGP.InProceedingsofthe 10thIEEEinternationalConferenceonNetworkProtocols(November12-15,2002).ICNP.IEEEComputer Society,Washington,DC,90-99 [Garcia1993] Garcia-Lunes-Aceves,J.,Loop-FreeRoutingUsingDiffusingComputations,IEEE/ACMTransac- tionsonNetworking,Vol.1,No,1,Feb.1993 [Gast2002] Gast,M.,802.11WirelessNetworks: TheDeﬁnitiveGuide,O’Reilly,2002 [Gill2004] Gill,V.,LackofPriorityQueuingConsideredHarmful,ACMQueue,December2004 [Goralski2009] Goralski,W.,TheIllustratednetwork: HowTCP/IPworksinamodernnetwork,MorganKauf- mann,2009 [HFPMC2002] Huffaker,B.,Fomenkov,M.,Plummer,D.,Moore,D.,Claffy,K.,DistanceMetricsintheInternet, PresentedattheIEEEInternationalTelecommunicationsSymposium(ITS)in2002.
[HRX2008] Ha, S., Rhee, I., and Xu, L., CUBIC: a new TCP-friendly high-speed TCP variant.
SIGOPS Oper.
Syst.Rev.42,5(Jul.2008),64-74.
[ISO10589] Informationtechnology—Telecommunicationsandinformationexchangebetweensystems—In- termediate System to Intermediate System intra-domain routeing information exchange protocol for use in conjunctionwiththeprotocolforprovidingtheconnectionless-modenetworkservice(ISO8473),2002 [Jacobson1988] Jacobson, V., Congestion avoidance and control.
In Symposium Proceedings on Communica- tions Architectures and Protocols (Stanford, California, United States, August 16 - 18, 1988).
V. Cerf, Ed.
SIGCOMM‘88.ACM,NewYork,NY,314-329.
[JSBM2002] Jung,J.,Sit,E.,Balakrishnan,H.,andMorris,R.2002.DNSperformanceandtheeffectivenessof caching.IEEE/ACMTrans.Netw.10,5(Oct.2002),589-603.
[Kerrisk2010] Kerrisk,M.,TheLinuxProgrammingInterface,NoStarchPress,2010 [KM1995] Kent,C.A.andMogul,J.C.,Fragmentationconsideredharmful.SIGCOMMComput.Commun.Rev.
25,1(Jan.1995),75-87.
[KP91] Karn, P. and Partridge, C., Improving round-trip time estimates in reliable transport protocols.
ACM Trans.Comput.Syst.9,4(Nov.1991),364-373.
[KPD1985] Karn,P.,Price,H.,Diersing,R.,Packetradioinamateurservice,IEEEJournalonSelectedAreasin Communications,3,May,1985 [KPS2003] Kaufman, C., Perlman, R., and Sommerfeld, B. DoS protection for UDP-based protocols.
In Pro- ceedingsofthe10thACMConferenceonComputerandCommunicationsSecurity(WashingtonD.C.,USA, October27-30,2003).CCS‘03.ACM,NewYork,NY,2-7.
[KR1995] Kung, N.T.Morris, R., Credit-basedﬂowcontrolforATMnetworks, IEEENetwork, Mar/Apr1995, Volume: 9,Issue: 2,pages: 40-48 [KT1975] Kleinrock,L.,Tobagi,F.,PacketSwitchinginRadioChannels: PartI–CarrierSenseMultiple-Access Modes and their Throughput-Delay Characteristics, IEEE Transactions on Communications, Vol.
COM-23, No.12,pp.1400-1416,December1975.
[KW2009] Katz,D.,Ward,D.,BidirectionalForwardingDetection,RFC5880,June2010 [KZ1989] Khanna,A.andZinky,J.1989.TherevisedARPANETroutingmetric.SIGCOMMComput.Commun.
Rev.19,4(Aug.1989),45-56.
262 Bibliography Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [KuroseRoss09] Kurose J. and Ross K., Computer networking : a top-down approach featuring the Internet, Addison-Wesley,2009 [Licklider1963] Licklider,J.,MemorandumForMembersandAfﬁliatesoftheIntergalacticComputerNetwork, 1963 [LCCD09] Leiner,B.M.,Cerf,V.G.,Clark,D.D.,Kahn,R.E.,Kleinrock,L.,Lynch,D.C.,Postel,J.,Roberts, L.G., andWolff, S., Abriefhistoryoftheinternet.SIGCOMMComput.Commun.Rev.39, 5(Oct.2009), 22-31.
[LCP2005] EngKeongLua, Crowcroft, J., Pias, M., Sharma, R., Lim, S., Asurveyandcomparisonofpeer-to- peeroverlaynetworkschemes,CommunicationsSurveys&Tutorials,IEEE,Volume: 7,Issue: 2,2005,pp.
72-93 [LFJLMT] Lefﬂer, S., Fabry, R., Joy, W., Lapsley, P., Miller, S., Torek, C., An Advanced 4.4BSD Interprocess CommunicationTutorial,4.4BSDProgrammer’sSupplementaryDocumentation [LSP1982] Lamport, L., Shostak, R., and Pease, M., The Byzantine Generals Problem.
ACM Trans.
Program.
Lang.Syst.4,3(Jul.1982),382-401.
[Leboudec2008] Leboudec,J.-Y.,RateAdaptationCongestionControlandFairness: atutorial,Dec.2008 [Malamud1991] Malamud,C.,AnalyzingDECnet/OSIphaseV,VanNostrandReinhold,1991 [McFadyen1976] McFadyen,J.,SystemsNetworkArchitecture: Anoverview,IBMSystemsJournal,Vol.15,N.
1,pp.4-23,1976 [McKusick1999] McKusick, M., Twenty Years of Berkeley Unix : From AT&T-Owned to Freely Redistributable, in Open Sources: Voices from the Open Source Revolution, Oreilly, 1999, http://oreilly.com/catalog/opensources/book/toc.html [ML2011] Minei I. and Lucek J. ,‘MPLS-Enabled Applications: Emerging Developments and New Technologies <http://www.amazon.com/MPLS-Enabled-Applications-Developments-Technologies- Communications/dp/0470665459>‘_(WileySeriesonCommunicationsNetworking&DistributedSystems), Wiley,2011 [MRR1979] McQuillan, J. M., Richer, I., and Rosen, E. C., An overview of the new routing algorithm for the ARPANET.
In Proceedings of the Sixth Symposium on Data Communications (Paciﬁc Grove, California, UnitedStates,November27-29,1979).SIGCOMM‘79.ACM,NewYork,NY,63-68.
[MSMO1997] Mathis, M., Semke, J., Mahdavi, J., and Ott, T. 1997.
The macroscopic behavior of the TCP congestionavoidancealgorithm.SIGCOMMComput.Commun.Rev.27,3(Jul.1997),67-82.
[MSV1987] Molle,M.,Sohraby,K.,Venetsanopoulos,A.,Space-TimeModelsofAsynchronousCSMAProto- colsforLocalAreaNetworks,IEEEJournalonSelectedAreasinCommunications,Volume: 5Issue: 6,Jul 1987Page(s): 956-96 [MUF+2007] Mühlbauer,W.,Uhlig,S.,Fu,B.,Meulle,M.,andMaennel,O.,Insearchforanappropriategran- ularitytomodelroutingpolicies.InProceedingsofthe2007ConferenceonApplications,Technologies,Ar- chitectures,andProtocolsForComputerCommunications(Kyoto,Japan,August27-31,2007).SIGCOMM ‘07.ACM,NewYork,NY,145-156.
[Malkin1999] Malkin,G.,RIP:AnIntra-DomainRoutingProtocol,AddisonWesley,1999 [Metcalfe1976] Metcalfe R., Boggs, D., Ethernet: Distributed packet-switching for local computer networks.
CommunicationsoftheACM,19(7):395–404,1976.
[Mills2006] Mills, D.L., Computer Network Time Synchronization: the Network Time Protocol.
CRC Press, March2006,304pp.
[Miyakawa2008] Miyakawa,S.,FromIPv4onlyTov4/v6DualStack,IETF72IABTechnicalPlenary,July2008 [Mogul1995] Mogul,J.,Thecaseforpersistent-connectionHTTP.InProceedingsoftheConferenceonApplica- tions,Technologies,Architectures,andProtocolsForComputerCommunication(Cambridge,Massachusetts, UnitedStates, August28-September01, 1995).D.Oran, Ed.SIGCOMM‘95.ACM,NewYork, NY,299- 313.
[Moore] Moore,R.,Packetswitchinghistory,http://rogerdmoore.ca/PS/ Bibliography 263 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [Moy1998] Moy,J.,OSPF:AnatomyofanInternetRoutingProtocol,AddisonWesley,1998 [Myers1998] Myers, B.
A., A brief history of human-computer interaction technology.
interactions 5, 2 (Mar.
1998),44-54.
[Nelson1965] Nelson,T.H.,Complexinformationprocessing: aﬁlestructureforthecomplex,thechangingand the indeterminate.
In Proceedings of the 1965 20th National Conference (Cleveland, Ohio, United States, August24-26,1965).L.Winner,Ed.ACM‘65.ACM,NewYork,NY,84-100.
[Paxson99] Paxson, V. , End-to-end Internet packet dynamics.
SIGCOMM Comput.
Commun.
Rev.
27, 4 (Oct. 1997),139-152.
[Perlman1985] Perlman, R., An algorithm for distributed computation of a spanning tree in an extended LAN.
SIGCOMMComput.Commun.Rev.15,4(Sep.1985),44-53.
[Perlman2000] Perlman, R., Interconnections : Bridges, routers, switches and internetworking protocols, 2nd edition,AddisonWesley,2000 [Perlman2004] Perlman,R.,RBridges: TransparentRouting,Proc.IEEEInfocom,March2004.
[Pouzin1975] Pouzin, L., The CYCLADES Network - Present state and development trends, Symposium on ComputerNetworks,1975pp8-13.
[Rago1993] Rago,S.,UNIXSystemVnetworkprogramming,AddisonWesley,1993 [RE1989] Rochlis, J.A.andEichin, M.W., Withmicroscopeandtweezers: thewormfromMIT’sperspective.
Commun.ACM32,6(Jun.1989),689-698.
[RFC20] Cerf,V.,ASCIIformatfornetworkinterchange,RFC20,Oct.1969 [RFC768] Postel,J.,UserDatagramProtocol,RFC768,Aug.1980 [RFC789] Rosen,E.,Vulnerabilitiesofnetworkcontrolprotocols: Anexample,RFC789,July1981 [RFC791] Postel,J.,InternetProtocol,RFC791,Sep.1981 [RFC792] Postel,J.,InternetControlMessageProtocol,RFC792,Sep.1981 [RFC793] Postel,J.,TransmissionControlProtocol,RFC793,Sept.1981 [RFC813] Clark,D.,WindowandAcknowledgementStrategyinTCP,RFC813,July1982 [RFC819] Su,Z.andPostel,J.,DomainnamingconventionforInternetuserapplications,RFC819,Aug.1982 [RFC821] Postel,J.,SimpleMailTransferProtocol,RFC821,Aug.1982 [RFC822] Crocker,D.,StandardfortheformatofARPAInternettextmessages,:rfc:‘822,Aug.1982 [RFC826] Plummer,D.,‘‘EthernetAddressResolutionProtocol: OrConvertingNetworkProtocolAddressesto 48.bitEthernetAddressforTransmissiononEthernetHardware‘,RFC826,Nov.1982 [RFC879] Postel,J.,TCPmaximumsegmentsizeandrelatedtopics,RFC879,Nov.1983 [RFC893] Lefﬂer,S.andKarels,M.,Trailerencapsulations,RFC893,April1984 [RFC894] Hornig,C.,AStandardfortheTransmissionofIPDatagramsoverEthernetNetworks,RFC894,April 1984 [RFC896] Nagle,J.,CongestionControlinIP/TCPInternetworks,RFC896,Jan.1984 [RFC952] Harrenstien, K. and Stahl, M. and Feinler, E., DoD Internet host table speciﬁcation, RFC 952, Oct. 1985 [RFC959] Postel,J.andReynolds,J.,FileTransferProtocol,RFC959,Oct.1985 [RFC974] Partridge,C.,Mailroutingandthedomainsystem,RFC974,Jan.1986 [RFC1032] Stahl,M.,Domainadministratorsguide,RFC1032,Nov.1987 [RFC1035] Mockapteris,P.,Domainnames-implementationandspeciﬁcation,RFC1035,Nov.1987 [RFC1042] Postel,J.andReynolds,J.,StandardforthetransmissionofIPdatagramsoverIEEE802networks, RFC1042,Feb.1988 264 Bibliography Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [RFC1055] Romkey,J.,NonstandardfortransmissionofIPdatagramsoverseriallines: SLIP,RFC1055,June 1988 [RFC1071] Braden,R.,BormanD.andPartridge,C.,ComputingtheInternetchecksum,RFC1071,Sep.1988 [RFC1122] Braden,R.,RequirementsforInternetHosts-CommunicationLayers,RFC1122,Oct.1989 [RFC1144] Jacobson,V.,CompressingTCP/IPHeadersforLow-SpeedSerialLinks,RFC1144,Feb.1990 [RFC1149] Waitzman, D., Standard for the transmission of IP datagrams on avian carriers, RFC 1149, Apr.
1990 [RFC1169] Cerf,V.andMills,K.,ExplainingtheroleofGOSIP,RFC1169,Aug.1990 [RFC1191] Mogul,J.andDeering,S.,PathMTUdiscovery,RFC1191,Nov.1990 [RFC1195] Callon,R.,UseofOSIIS-ISforroutinginTCP/IPanddualenvironments,RFC1195,Dec.1990 [RFC1258] Kantor,B.,BSDRlogin,RFC1258,Sept.1991 [RFC1321] Rivest,R.,TheMD5Message-DigestAlgorithm,RFC1321,April1992 [RFC1323] Jacobson, V., Braden R. and Borman, D., TCP Extensions for High Performance, RFC 1323, May 1992 [RFC1347] Callon,R.,TCPandUDPwithBiggerAddresses(TUBA),ASimpleProposalforInternetAddressing andRouting,RFC1347,June1992 [RFC1518] Rekhter,Y.andLi,T.,AnArchitectureforIPAddressAllocationwithCIDR,RFC1518,Sept.1993 [RFC1519] FullerV.,LiT.,YuJ.andVaradhan,K.,ClasslessInter-DomainRouting(CIDR):anAddressAssign- mentandAggregationStrategy,RFC1519,Sept.1993 [RFC1542] Wimer,W.,ClariﬁcationsandExtensionsfortheBootstrapProtocol,RFC1542,Oct.1993 [RFC1548] Simpson,W.,ThePoint-to-PointProtocol(PPP),RFC1548,Dec.1993 [RFC1550] Bradner,S.andMankin,A.,IP:NextGeneration(IPng)WhitePaperSolicitation,RFC1550,Dec.
1993 [RFC1561] Piscitello,D.,UseofISOCLNPinTUBAEnvironments,RFC1561,Dec.1993 [RFC1621] Francis,P.,PIPNear-termarchitecture,RFC1621,May1994 [RFC1624] Risjsighani, A., Computation of the Internet Checksum via Incremental Update, RFC 1624, May 1994 [RFC1631] EgevangK.andFrancis,P.,TheIPNetworkAddressTranslator(NAT),RFC1631,May1994 [RFC1661] Simpson,W.,ThePoint-to-PointProtocol(PPP),RFC1661,Jul.1994 [RFC1662] Simpson,W.,PPPinHDLC-likeFraming,RFC1662,July1994 [RFC1710] Hinden,R.,SimpleInternetProtocolPlusWhitePaper,RFC1710,Oct.1994 [RFC1738] Berners-Lee,T.,Masinter,L.,andMcCahillM.,UniformResourceLocators(URL),RFC1738,Dec.
1994 [RFC1752] Bradner,S.andMankin,A.,TheRecommendationfortheIPNextGenerationProtocol,RFC1752, Jan.1995 [RFC1812] Baker,F.,RequirementsforIPVersion4Routers,RFC1812,June1995 [RFC1819] Delgrossi, L., Berger, L., InternetStreamProtocolVersion2(ST2)ProtocolSpeciﬁcation-Version ST2+,RFC1819,Aug.1995 [RFC1889] SchulzrinneH.,CasnerS.,Frederick,R.andJacobson,V.,RTP:ATransportProtocolforReal-Time Applications,RFC1889,Jan.1996 [RFC1896] ResnickP.,WalkerA.,Thetext/enrichedMIMEContent-type,RFC1896,Feb.1996 [RFC1918] RekhterY.,MoskowitzB.,KarrenbergD.,deGrootG.andLear,E.,AddressAllocationforPrivate Internets,RFC1918,Feb.1996 Bibliography 265 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [RFC1939] Myers,J.andRose,M.,PostOfﬁceProtocol-Version3,RFC1939,May1996 [RFC1945] Berners-Lee,T.,Fielding,R.andFrystyk,H.,HypertextTransferProtocol–HTTP/1.0,RFC1945, May1996 [RFC1948] Bellovin,S.,DefendingAgainstSequenceNumberAttacks,RFC1948,May1996 [RFC1951] Deutsch,P.,DEFLATECompressedDataFormatSpeciﬁcationversion1.3,RFC1951,May1996 [RFC1981] McCann,J.,Deering,S.andMogul,J.,PathMTUDiscoveryforIPversion6,RFC1981,Aug.1996 [RFC2003] Perkins,C.,IPEncapsulationwithinIP,RFC2003,Oct.1996 [RFC2018] Mathis,M.,Mahdavi,J.,Floyd,S.andRomanow,A.,TCPSelectiveAcknowledgmentOptions,RFC 2018,Oct.1996 [RFC2045] Freed, N. andBorenstein, N., Multipurpose InternetMail Extensions(MIME) PartOne: Format of InternetMessageBodies,RFC2045,Nov.1996 [RFC2046] Freed,N.andBorenstein,N.,MultipurposeInternetMailExtensions(MIME)PartTwo:MediaTypes, RFC2046,Nov.1996 [RFC2050] Hubbard,K.andKosters,M.andConrad,D.andKarrenberg,D.andPostel,J.,InternetRegistryIP AllocationGuidelines,RFC2050,Nov.1996 [RFC2080] Malkin,G.andMinnear,R.,RIPngforIPv6,RFC2080,Jan.1997 [RFC2082] Baker,F.andAtkinson,R.,RIP-2MD5Authentication,RFC2082,Jan.1997 [RFC2131] Droms,R.,DynamicHostConﬁgurationProtocol,RFC2131,March1997 [RFC2140] Touch,J.,TCPControlBlockInterdependence,RFC2140,April1997 [RFC2225] Laubach,M.,Halpern,J.,ClassicalIPandARPoverATM,RFC2225,April1998 [RFC2328] Moy,J.,OSPFVersion2,RFC2328,April1998 [RFC2332] Luciani,J.andKatz,D.andPiscitello,D.andCole,B.andDoraswamy,N.,NBMANextHopReso- lutionProtocol(NHRP),RFC2332,April1998 [RFC2364] Gross, G.andKaycee, M.andLi, A.andMalis, A.andStephens, J., PPPOverAAL5, RFC2364, July1998 [RFC2368] Hoffman,P.andMasinter,L.andZawinski,J.,ThemailtoURLscheme,RFC2368,July1998 [RFC2453] Malkin,G.,RIPVersion2,RFC2453,Nov.1998 [RFC2460] DeeringS.,Hinden,R.,InternetProtocol,Version6(IPv6)Speciﬁcation,RFC2460,Dec.1998 [RFC2464] Crawford,M.,TransmissionofIPv6PacketsoverEthernetNetworks,RFC2464,Dec.1998 [RFC2507] Degermark,M.andNordgren,B.andPink,S.,IPHeaderCompression,RFC2507,Feb.1999 [RFC2516] Mamakos,L.andLidl,K.andEvarts,J.andCarrel,J.andSimone,D.andWheeler,R.,AMethodfor TransmittingPPPOverEthernet(PPPoE),RFC2516,Feb.1999 [RFC2581] Allman,M.andPaxson,V.andStevens,W.,TCPCongestionControl,RFC2581,April1999 [RFC2616] Fielding,R.andGettys,J.andMogul,J.andFrystyk,H.andMasinter,L.andLeach,P.andBerners- Lee,T.,HypertextTransferProtocol–HTTP/1.1,RFC2616,June1999 [RFC2617] Franks, J. and Hallam-Baker, P. and Hostetler, J. and Lawrence, S. and Leach, P. and Luotonen, A. andStewart,L.,HTTPAuthentication: BasicandDigestAccessAuthentication,RFC2617,June1999 [RFC2622] Alaettinoglu,C.andVillamizar,C.andGerich,E.andKessens,D.andMeyer,D.andBates,T.and Karrenberg,D.andTerpstra,M.,RoutingPolicySpeciﬁcationLanguage(RPSL),RFC2622,June1999 [RFC2675] Tsirtsis, G. and Srisuresh, P., Network Address Translation - Protocol Translation (NAT-PT), RFC 2766,Feb.2000 [RFC2854] Connolly,D.andMasinter,L.,The‘text/html’MediaType,RFC2854,June2000 [RFC2965] Kristol,D.andMontulli,L.,HTTPStateManagementMechanism,RFC2965,Oct.2000 266 Bibliography Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [RFC2988] Paxson,V.andAllman,M.,ComputingTCP’sRetransmissionTimer,RFC2988,Nov.2000 [RFC2991] Thaler,D.andHopps,C.,MultipathIssuesinUnicastandMulticastNext-HopSelection,RFC2991, Nov.2000 [RFC3021] Retana,A.andWhite,R.andFuller,V.andMcPherson,D.,Using31-BitPreﬁxesonIPv4Point-to- PointLinks,RFC3021,Dec.2000 [RFC3022] Srisuresh,P.,Egevang,K.,TraditionalIPNetworkAddressTranslator(TraditionalNAT),RFC3022, Jan.2001 [RFC3031] Rosen, E. and Viswanathan, A. and Callon, R., Multiprotocol Label Switching Architecture, RFC 3031,Jan.2001 [RFC3168] Ramakrishnan, K. and Floyd, S. and Black, D., The Addition of Explicit Congestion Notiﬁcation (ECN)toIP,RFC3168,Sept.2001 [RFC3243] Carpenter,B.andBrim,S.,Middleboxes: TaxonomyandIssues,RFC3234,Feb.2002 [RFC3235] Senie, D., Network Address Translator (NAT)-Friendly Application Design Guidelines, RFC 3235, Jan.2002 [RFC3309] Stone, J. and Stewart, R. and Otis, D., Stream Control Transmission Protocol (SCTP) Checksum Change,RFC3309,Sept.2002 [RFC3315] Droms,R.andBound,J.andVolz,B.andLemon,T.andPerkins,C.andCarney,M.,DynamicHost ConﬁgurationProtocolforIPv6(DHCPv6),RFC3315,July2003 [RFC3330] IANA,Special-UseIPv4Addresses,RFC3330,Sept.2002 [RFC3360] Floyd,S.,InappropriateTCPResetsConsideredHarmful,RFC3360,Aug.2002 [RFC3390] Allman,M.andFloyd,S.andPartridge,C.,IncreasingTCP’sInitialWindow,RFC3390,Oct.2002 [RFC3490] Faltstrom, P. and Hoffman, P. and Costello, A., Internationalizing Domain Names in Applications (IDNA),RFC3490,March2003 [RFC3501] Crispin,M.,InternetMessageAccessProtocol-Version4rev1,RFC3501,March2003 [RFC3513] Hinden,R.andDeering,S.,InternetProtocolVersion6(IPv6)AddressingArchitecture,RFC3513, April2003 [RFC3596] Thomson,S.andHuitema,C.andKsinant,V.andSouissi,M.,DNSExtensionstoSupportIPVersion 6,RFC3596,October2003 [RFC3748] Aboba,B.andBlunk,L.andVollbrecht,J.andCarlson,J.andLevkowetz,H.,ExtensibleAuthenti- cationProtocol(EAP),RFC3748,June2004 [RFC3819] Karn,P.andBormann,C.andFairhurst,G.andGrossman,D.andLudwig,R.andMahdavi,J.and Montenegro,G.andTouch,J.andWood,L.,AdviceforInternetSubnetworkDesigners,RFC3819,July2004 [RFC3828] Larzon,L-A.andDegermark,M.andPink,S.andJonsson,L-E.andFairhurst,G.,TheLightweight UserDatagramProtocol(UDP-Lite),RFC3828,July2004 [RFC3927] Cheshire,S.andAboba,B.andGuttman,E.,DynamicConﬁgurationofIPv4Link-LocalAddresses, RFC3927,May2005 [RFC3931] Lau,J.andTownsley,M.andGoyret,I.,LayerTwoTunnelingProtocol-Version3(L2TPv3),RFC 3931,March2005 [RFC3971] Arkko, J. and Kempf, J. and Zill, B. and Nikander, P., SEcure Neighbor Discovery (SEND), RFC 3971,March2005 [RFC3972] Aura,T.,CryptographicallyGeneratedAddresses(CGA),RFC3972,March2005 [RFC3986] Berners-Lee,T.andFielding,R.andMasinter,L.,UniformResourceIdentiﬁer(URI):GenericSyn- tax,RFC3986,January2005 [RFC4033] Arends,R.andAustein,R.andLarson,M.andMassey,D.andRose,S.,DNSSecurityIntroduction andRequirements,RFC4033,March2005 Bibliography 267 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [RFC4193] Hinden,R.andHaberman,B.,UniqueLocalIPv6UnicastAddresses,RFC4193,Oct.2005 [RFC4251] Ylonen,T.andLonvick,C.,TheSecureShell(SSH)ProtocolArchitecture,RFC4251,Jan.2006 [RFC4264] Grifﬁn,T.andHuston,G.,BGPWedgies,RFC4264,Nov.2005 [RFC4271] Rekhter,Y.andLi,T.andHares,S.,ABorderGatewayProtocol4(BGP-4),RFC4271,Jan.2006 [RFC4291] Hinden,R.andDeering,S.,IPVersion6AddressingArchitecture,RFC4291,Feb.2006 [RFC4301] Kent,S.andSeo,K.,SecurityArchitecturefortheInternetProtocol,RFC4301,Dec.2005 [RFC4302] Kent,S.,IPAuthenticationHeader,RFC4302,Dec.2005 [RFC4303] Kent,S.,IPEncapsulatingSecurityPayload(ESP),RFC4303,Dec.2005 [RFC4340] Kohler, E. and Handley, M. and Floyd, S., Datagram Congestion Control Protocol (DCCP), RFC 4340,March2006 [RFC4443] Conta,A.andDeering,S.andGupta,M.,InternetControlMessageProtocol(ICMPv6)fortheInter- netProtocolVersion6(IPv6)Speciﬁcation,RFC4443,March2006 [RFC4451] McPherson, D. and Gill, V., BGP MULTI_EXIT_DISC (MED) Considerations, RFC 4451, March 2006 [RFC4456] Bates,T.andChen,E.andChandra,R.,BGPRouteReﬂection: AnAlternativetoFullMeshInternal BGP(IBGP),RFC4456,April2006 [RFC4614] Duke,M.andBraden,R.andEddy,W.andBlanton,E.,ARoadmapforTransmissionControlProto- col(TCP)SpeciﬁcationDocuments,RFC4614,Oct.2006 [RFC4648] Josefsson,S.,TheBase16,Base32,andBase64DataEncodings,RFC4648,Oct.2006 [RFC4822] Atkinson,R.andFanto,M.,RIPv2CryptographicAuthentication,RFC4822,Feb.2007 [RFC4838] Cerf, V.andBurleigh, S.andHooke, A.andTorgerson, L.andDurst, R.andScott, K.andFall, K. andWeiss,H.,Delay-TolerantNetworkingArchitecture,RFC4838,April2007 [RFC4861] Narten,T.andNordmark,E.andSimpson,W.andSoliman,H.,‘NeighborDiscoveryforIPversion6 (IPv6)‘,RFC4861,Sept.2007 [RFC4862] Thomson, S. and Narten, T. and Jinmei, T., IPv6 Stateless Address Autoconﬁguration, RFC 4862, Sept.2007 [RFC4870] Delany, M., Domain-Based Email Authentication Using Public Keys Advertised in the DNS (Do- mainKeys),RFC4870,May2007 [RFC4871] Allman,E.andCallas,J.andDelany,M.andLibbey,M.andFenton,J.andThomas,M.,DomainKeys IdentiﬁedMail(DKIM)Signatures,RFC4871,May2007 [RFC4941] Narten,T.andDraves,R.andKrishnan,S.,PrivacyExtensionsforStatelessAddressAutoconﬁgura- tioninIPv6,RFC4941,Sept.2007 [RFC4944] Montenegro, G.andKushalnagar, N.andHui, J.andCuller, D., TransmissionofIPv6Packetsover IEEE802.15.4Networks,RFC4944,Sept.2007 [RFC4952] Klensin,J.andKo,Y.,OverviewandFrameworkforInternationalizedEmail,RFC4952,July2007 [RFC4953] Touch,J.,DefendingTCPAgainstSpooﬁngAttacks,RFC4953,July2007 [RFC4954] Simeborski,R.andMelnikov,A.,SMTPServiceExtensionforAuthentication,RFC4954,July2007 [RFC4963] Heffner,J.andMathis,M.andChandler,B.,IPv4ReassemblyErrorsatHighDataRates,RFC4963, July2007 [RFC4966] Aoun, C. and Davies, E., Reasons to Move the Network Address Translator - Protocol Translator (NAT-PT)toHistoricStatus,RFC4966,July2007 [RFC4987] Eddy,W.,TCPSYNFloodingAttacksandCommonMitigations,RFC4987,Aug.2007 [RFC5004] Chen,E.andSangli,S.,AvoidBGPBestPathTransitionsfromOneExternaltoAnother,RFC5004, Sept.2007 268 Bibliography Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [RFC5065] Traina, P. and McPherson, D. and Scudder, J., Autonomous System Confederations for BGP, RFC 5065,Aug.2007 [RFC5068] Hutzler,C.andCrocker,D.andResnick,P.andAllman,E.andFinch,T.,EmailSubmissionOpera- tions: AccessandAccountabilityRequirements,RFC5068,Nov.2007 [RFC5072] Varada,S.andHaskins,D.andAllen,E.,IPVersion6overPPP,RFC5072,Sept.2007 [RFC5095] Abley,J.andSavola,P.andNeville-Neil,G.,DeprecationofType0RoutingHeadersinIPv6,RFC 5095,Dec.2007 [RFC5227] Cheshire,S.,IPv4AddressConﬂictDetection,RFC5227,July2008 [RFC5234] Crocker,D.andOverell,P.,AugmentedBNFforSyntaxSpeciﬁcations: ABNF,RFC5234,Jan.2008 [RFC5321] Klensin,J.,SimpleMailTransferProtocol,RFC5321,Oct.2008 [RFC5322] Resnick,P.,InternetMessageFormat,RFC5322,Oct.2008 [RFC5340] Coltun,R.andFerguson,D.andMoy,J.andLindem,A.,OSPFforIPv6,RFC5340,July2008 [RFC5598] Crocker,D.,InternetMailArchitecture,RFC5598,July2009 [RFC5646] Phillips,A.andDavis,M.,TagsforIdentifyingLanguages,RFC5646,Sept.2009 [RFC5681] Allman,M.andPaxson,V.andBlanton,E.,TCPcongestioncontrol,RFC5681,Sept.2009 [RFC5735] Cotton,M.andVegoda,L.,SpecialUseIPv4Addresses,RFC5735,January2010 [RFC5795] Sandlund,K.andPelletier,G.andJonsson,L-E.,TheRObustHeaderCompression(ROHC)Frame- work,RFC5795,March2010 [RFC6068] Duerst,M.,Masinter,L.andZawinski,J.,The‘mailto’URIScheme,RFC6068,October2010 [RFC6144] Baker,F.andLi,X.andBao,X.andYin,K.,FrameworkforIPv4/IPv6Translation,RFC6144,April 2011 [RFC6265] Barth,A.,HTTPStateManagementMechanism,RFC6265,April2011 [RFC6274] Gont,F.,SecurityAssessmentoftheInternetProtocolVersion4,RFC6274,July2011 [RG2010] Rhodes,B.andGoerzen,J.,FoundationsofPythonNetworkProgramming:TheComprehensiveGuide toBuildingNetworkApplicationswithPython,SecondEdition,AcademicPress,2004 [RJ1995] Ramakrishnan, K. K. and Jain, R., A binary feedback scheme for congestion avoidance in computer networks with a connectionless network layer.
SIGCOMM Comput.
Commun.
Rev.
25, 1 (Jan. 1995), 138- 156.
[RY1994] Ramakrishnan, K.K.andHenryYang, TheEthernetCaptureEffect: AnalysisandSolution, Proceed- ingsofIEEE19thConferenceonLocalComputerNetworks,MN,Oct.1994.
[Roberts1975] Roberts, L., ALOHA packet system with and without slots and capture.
SIGCOMM Comput.
Commun.Rev.5,2(Apr.1975),28-42.
[Ross1989] Ross,F.,AnoverviewofFDDI:Theﬁberdistributeddatainterface,IEEEJ.SelectedAreasinComm., vol.7,no.7,pp.1043-1051,Sept.1989 [Russel06] RussellA.,RoughConsensusandRunningCodeandtheInternet-OSIStandardsWar,IEEEAnnals oftheHistoryofComputing,July-September2006 [SAO1990] Sidhu,G.,Andrews,R.,Oppenheimer,A.,InsideAppleTalk,Addison-Wesley,1990 [SARK2002] Subramanian, L., Agarwal, S., Rexford, J., Katz, R.. Characterizing the Internet hierarchy from multiplevantagepoints.InIEEEINFOCOM,2002 [Sechrest] Sechrest, S., An Introductory 4.4BSD Interprocess Communication Tutorial, 4.4BSD Programmer’s SupplementaryDocumentation [SG1990] Scheiﬂer, R., Gettys, J., X Window System: The Complete Reference to Xlib, X Protocol, ICCCM, XLFD,XVersion11,Release4,DigitalPress Bibliography 269 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [SGP98] Stone,J.,Greenwald,M.,Partridge,C.,andHughes,J.,PerformanceofchecksumsandCRC’soverreal data.IEEE/ACMTrans.Netw.6,5(Oct.1998),529-543.
[SH1980] Shoch,J.F.andHupp,J.A.,MeasuredperformanceofanEthernetlocalnetwork.Commun.ACM23, 12(Dec.1980),711-721.
[SH2004] Senapathi,S.,Hernandez,R.,IntroductiontoTCPOfﬂoadEngines,March2004 [SMKKB2001] Stoica, I., Morris, R., Karger, D., Kaashoek, F., and Balakrishnan, H., Chord: A scalable peer- to-peerlookupserviceforinternetapplications.InProceedingsofthe2001conferenceonApplications,tech- nologies,architectures,andprotocolsforcomputercommunications(SIGCOMM‘01).ACM,NewYork,NY, USA,149-160 [SMM1998] Semke,J.,Mahdavi,J.,andMathis,M.,AutomaticTCPbuffertuning.SIGCOMMComput.Com- mun.Rev.28,4(Oct.1998),315-323.
[SPMR09] Stigge,M.,Plotz,H.,Muller,W.,Redlich,J.,ReversingCRC-TheoryandPractice.Berlin:Humboldt UniversityBerlin.pp.24.
[STBT2009] Sridharan, M., Tan, K., Bansal, D., Thaler, D., Compound TCP: A New TCP Congestion Control forHigh-SpeedandLongDistanceNetworks,Internetdraft,workinprogress,April2009 [Seifert2008] Seifert,R.,Edwards,J.,TheAll-NewSwitchBook: ThecompleteguidetoLANswitchingtech- nology,Wiley,2008 [Selinger] Selinger,P.,MD5collisiondemo,http://www.mscs.dal.ca/~selinger/md5collision/ [SFR2004] StevensR.andFenner,andRudoff,A.,UNIXNetworkProgramming: ThesocketsnetworkingAPI, AddisonWesley,2004 [Sklower89] Sklower,K.1989.ImprovingtheefﬁciencyoftheOSIchecksumcalculation.SIGCOMMComput.
Commun.Rev.19,5(Oct.1989),32-43.
[Smm98] Semke,J.,Mahdavi,J.,andMathis,M.,AutomaticTCPbuffertuning.SIGCOMMComput.Commun.
Rev.28,4(Oct.1998),315-323.
[Stevens1994] Stevens,R.,TCP/IPIllustrated: theProtocols,Addison-Wesley,1994 [Stevens1998] Stevens,R.,UNIXNetworkProgramming,Volume1,SecondEdition:NetworkingAPIs:Sockets andXTI,PrenticeHall,1998 [Stewart1998] Stewart,J.,BGP4: Inter-DomainRoutingInTheInternet,Addison-Wesley,1998 [Stoll1988] Stoll,C.,Stalkingthewilyhacker,Commun.ACM31,5(May.1988),484-497.
[TE1993] Tsuchiya, P. F. and Eng, T., Extending the IP internet through address reuse.
SIGCOMM Comput.
Commun.Rev.23,1(Jan.1993),16-33.
[Thomborson1992] Thomborson, C., The V.42bis Standard for Data-Compressing Modems, IEEE Micro, September/October1992(vol.12no.5),pp.41-53 [Unicode] The Unicode Consortium.
The Unicode Standard, Version 5.0.0, deﬁned by: The Unicode Standard, Version5.0(Boston,MA,Addison-Wesley,2007 [VPD2004] Vasseur,J.,Pickavet,M.,andDemeester,P.,NetworkRecovery: ProtectionandRestorationofOpti- cal,SONET-SDH,IP,andMPLS.MorganKaufmannPublishersInc.,2004 [Varghese2005] Varghese, G., Network Algorithmics: An Interdisciplinary Approach to Designing Fast Net- workedDevices,MorganKaufmann,2005 [Vyncke2007] Vyncke,E.,Paggen,C.,LANSwitchSecurity: WhatHackersKnowAboutYourSwitches,Cisco Press,2007 [WB2008] Waserman,M.,Baker,F.,IPv6-to-IPv6NetworkAddressTranslation(NAT66),Internetdraft,Novem- ber2008,http://tools.ietf.org/html/draft-mrw-behave-nat66-02 [WMH2008] Wilson, P., Michaelson, G., Huston, G., Redesignation of 240/4 from “Future Use” to “Private Use”,Internetdraft,September2008,workinprogress,http://tools.ietf.org/html/draft-wilson-class-e-02 [WMS2004] White,R.,McPherson,D.,Srihari,S.,PracticalBGP,Addison-Wesley,2004 270 Bibliography Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 [Watson1981] Watson, R., Timer-Based Mechanisms in Reliable Transport Protocol Connection Management.
ComputerNetworks5: 47-56(1981) [Williams1993] Williams, R. A painless guide to CRC error detection algorithms, August 1993, unpublished manuscript,http://www.ross.net/crc/download/crc_v3.txt [Winston2003] Winston,G.,NetBIOSSpeciﬁcation,2003 [WY2011] Wing,D.andYourtchenko,A.,HappyEyeballs: SuccesswithDual-StackHosts,Internetdraft,work inprogress,July2011,http://tools.ietf.org/html/draft-ietf-v6ops-happy-eyeballs-03 [X200] ITU-T,recommendationX.200,OpenSystemsInterconnection-ModelandNotation,1994 [X224] ITU-T, recommendation X.224, Information technology - Open Systems Interconnection - Protocol for providingtheconnection-modetransportservice,1995 [XNS] Xerox,XeroxNetworkSystemsArchitecture,XNSG058504,1985 [Zimmermann80] Zimmermann, H., OSIReferenceModel-TheISOModelofArchitectureforOpenSystems Interconnection,IEEETransactionsonCommunications,vol.28,no.4,April1980,pp.425-432.
Bibliography 271 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 272 Bibliography Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationIndex Symbols beaconframe(802.11),245 BGP,178,249 ::,160 BGPAdj-RIB-In,181 ::1,160 BGPAdj-RIB-Out,181 0.0.0.0,146,155 BGPdecisionprocess,187 100BaseTX,234 BGPKEEPALIVE,180 10Base2,233 BGPlocal-preference,187 10Base5,233 BGPnexthop,183 10BaseT,233 BGPNOTIFICATION,180 127.0.0.1,146 BGPOPEN,180 255.255.255.255,155 BGPpeer,179 802.11frameformat,242 BGPRIB,181 802.5dataframe,227 BGPUPDATE,180 802.5tokenframe,227 binaryexponentialback-off(CSMA/CD),221 A bitstufﬁng,212 BNF,249 abruptconnectionrelease,18,86 BorderGatewayProtocol,178 AdditiveIncreaseMultiplicativeDecrease(AIMD),109 bridge,234 address,11 broadcast,249 addresslearning,235 BSS,242 AddressResolutionProtocol,154 adhocnetwork,242 C AF_INET,56 AF_INET6,56 CarrierSenseMultipleAccess,217 AF_UNSPEC,56 Carrier Sense Multiple Access with Collision Avoid- AIMD,249 ance,222 ALG,169 Carrier Sense Multiple Access with Collision Detec- ALOHA,216 tion,218 AlternatingBitProtocol,72 characterstufﬁng,213 anycast,249 Checksumcomputation,88 API,249 CIDR,249 Applicationlayer,23 ClassAIPv4address,142 ApplicationLevelGateway,169 ClassBIPv4address,142 ARP,154,249 ClassCIPv4address,142 ARPcache,154 ClasslessInterdomainRouting,144 ARPANET,249 ClearToSend,225 ascii,249 Coldpotatorouting,191 ASN.1,249 collision,215 ATM,249 collisiondetection,219 collisiondomain,233 B conﬁrmedconnectionlessservice,13 Base64encoding,41 congestioncollapse,107 BasicServiceSet(BSS),242 connectionestablishment,16 273 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 connection-orientedservice,16 framing,212 Connectionlessservice,12 FrequencyDivisionMultiplexing,215 connectionlessservice,13 FTP,250 counttoinﬁnity,135 ftp,250 CSMA,217 G CSMA(non-persistent),218 CSMA(persistent),217 getaddrinfo,56 CSMA/CA,222 go-back-n,75 CSMA/CD,218 gracefulconnectionrelease,19,86 CTS,225 CTSframe(802.11),244 H cumulativeacknowledgements,76 Hellomessage,137 customer-providerpeeringrelationship,177 hiddenstationproblem,225 hop-by-hopforwarding,129 D hosts.txt,32,250 datagram,129 Hotpotatorouting,190 Datalinklayer,22 HTML,250 delayedacknowledgements,102 HTTP,250 DenialofService,93 hub,250 DHCP,155 DHCPv6,166 I dial-upline,249 IANA,250 DIFS,222 iBGP,185,250 Distancevector,133 ICANN,250 Distributed Coordination Function Inter Frame Space, ICMP,150 222 IETF,250 DNS,249 IGP,250 DNSmessageformat,34 IGRP,250 DynamicHostConﬁgurationProtocol,155 IMAP,250 importpolicy,178 E independentnetwork,242 EAP,229 infrastructurenetwork,242 eBGP,185,250 interdomainroutingpolicy,178 EGP,250 Internet,250 EIFS,222 internet,250 EIGRP,250 InternetControlMessageProtocol,150 electricalcable,20 inversequery,250 emailmessageformat,38 IP,250 EndingDelimiter(TokenRing),227 IPoptions,150 Ethernetbridge,234 IPpreﬁx,142 EthernetDIXframeformat,231 IPsubnet,142 Ethernethub,233 IPv4,250 Ethernetswitch,234 IPv4fragmentationandreassembly,149 EthernetTypeﬁeld,230 IPv6,251 EtherType,230 IPv6fragmentation,163 exponentialbackoff,102 IS-IS,251 exportpolicy,178 ISN,251 ExtendedInterFrameSpace,222 ISO,251 ExtensibleAuthenticationProtocol,229 ISO-3166,251 ISP,251 F ITU,251 Fairness,107 IXP,251 FastEthernet,234 J FDM,215 ﬁrewall,166 jamming,219 Fivelayersreferencemodel,20 jumbogram,162 frame,22,250 Frame-Relay,250 274 Index Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 L opticalﬁber,20 orderingofSDUs,13 label,131 OrganisationUniqueIdentiﬁer,230 LAN,251 OSI,252 largewindow,99 OSIreferencemodel,23 leasedline,251 OSPF,172,252 LinkLocaladdress,160 OSPFarea,172 linklocalIPv4addresses,146 OSPFDesignatedRouter,173 link-staterouting,137 OUI,230 LLC,232 LogicalLinkControl(LLC),232 P loopbackinterface,185 packet,22,252 M packetradio,216 packetsizedistribution,99 MACaddresslearning,235 PathMTUdiscovery,153 MACaddresstable(Ethernetswitch),235 PBL,252 MAN,251 peer-to-peer,30 man-in-the-middleattack,155 persistencetimer,79 Manchesterencoding,212 persistentCSMA,217 max-minfairness,107 Physicallayer,22 MaximumSegmentLifetime(MSL),83 piggybacking,81 maximumsegmentlifetime(MSL),79 ping,152 MaximumSegmentSize,94 ping6,165 MaximumTransmissionUnit,148 Point-to-PointProtocol,228 MaximumTransmissionUnit(MTU),149 POP,252 message-modedatatransfer,17 PostOfﬁceProtocol,45 Middlebox,166 PPP,228 MIME,251 privateIPv4addresses,146 MIMEdocument,251 ProviderAggregatableaddress,159 minicomputer,251 ProviderIndependentaddress,159 modem,251 provisionofabytestreamservice,81 Monitorstation,228 monomodeopticalﬁber,20 R MSS,94,251 MTU,148 Referencemodels,20 Multi-ExitDiscriminator(MED),191 reliableconnectionlessservice,13 multicast,251 RequestToSend,225 multihomedhost,142 resolver,252 multihomednetwork,145 RFC multimodeopticalﬁber,20 RFC1032,32,264 RFC1035,33–35,249,264 N RFC1042,245,264 Naglealgorithm,98 RFC1055,229,265 nameserver,251 RFC1071,88,114,265 NAT,168,251 RFC1094,252 NAT66,169 RFC1122,23,90,91,95,103,231,265 NBMA,128,251 RFC1144,229,265 NeighbourDiscoveryProtocol,166 RFC1149,81,265 NetworkAddressTranslation,168 RFC1169,5,265 NetworkInformationCenter,32 RFC1191,153,265 Networklayer,22 RFC1195,172,265 network-byteorder,251 RFC1258,92,265 NFS,252 RFC1305,252 Non-BroadcastMulti-AccessNetworks,128 RFC1321,114,265 non-persistentCSMA,218 RFC1323,95,99–101,105,265 NTP,252 RFC1347,158,265 RFC1350,116 O RFC1518,144,249,265 RFC1519,143,145,265 OpenShortestPathFirst,172 Index 275 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release–163,266 RFC4614,89,268 RFC2464,232,266 RFC4632,249 RFC2507,162,266 RFC4634,114 RFC2516,230,266 RFC4648,41,42,268 RFC2581,104,266 RFC4822,171,268 RFC2616,44,50–53,65,250,266 RFC4838,6,268 RFC2617,54,266 RFC4861,166,268 RFC2622,178,266 RFC4862,166,268 RFC2675,162 RFC4870,45,268 RFC2711,163 RFC4871,45,268 RFC2766,169,266 RFC4941,166,268 RFC2821,43 RFC4944,148,162,268 RFC2854,41,266 RFC4952,41,268 RFC2920,114 RFC4953,95,268 RFC2965,266 RFC4954,43,45,268 RFC2988,94,100–102,267 RFC4963,153,157,268 RFC2991,267 RFC4966,169,268 RFC3021,143,267 RFC4987,94,268 RFC3022,168,267 RFC5004,191,268 276 Index Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 RFC5065,185,269 selectiverepeat,77 RFC5068,45,269 sendto,56 RFC5072,229,269 sequencenumber,72 RFC5095,163,269 SerialLineIP,228 RFC5227,155,269 serviceaccesspoint,11 RFC5234,29,249,269 ServiceDataUnit,12 RFC5246,253 serviceprimitives,12 RFC5321,43,44,63,269 ServiceSetIdentity(SSID),245 RFC5322,38,39,43,269 shared-costpeeringrelationship,178 RFC5340,172,252,269 ShortInterFrameSpacing,222 RFC5531,252 siblingpeeringrelationship,178 RFC5598,38,269 SIFS,222 RFC5646,65,269 SLAC,166 RFC5681,110,111,125,269 slottime(Ethernet),221 RFC5735,146,269 slottedALOHA,217 RFC5795,229,269 slotTime(CSMA/CA),223 RFC5880,262 SMTP,252 RFC5890,33,41 SNMP,252 RFC6068,48,269 SOCK_DGRAM,56 RFC6144,169,269 SOCK_STREAM,56 RFC6265,55,269 socket,56,252 RFC6274,150,269 socket.bind,59 RFC768,87,264 socket.close,57 RFC789,138,264 socket.connect,57 RFC 791, 29, 91, 107, 141, 142, 144, 147, 148, socket.recv,57 150,156,264 socket.recvfrom,59 RFC792,151,264 socket.send,57 RFC 793, 81, 89–91, 95, 97–99, 101, 102, 124, socket.shutdown,57 264 sourcerouting,131 RFC813,103,264 speedoflight,218 RFC819,32,264 splithorizon,136 RFC821,63,252,264 splithorizonwithpoisonreverse,136 RFC822,40 spoofedpacket,252 RFC826,154,249,264 SSH,252 RFC854,253 SSID,245 RFC879,94,264 standardquery,252 RFC893,231,264 StartingDelimiter(TokenRing),227 RFC894,232,245,264 StatelessAddressConﬁguration,166 RFC896,98,107,264 stream-modedatatransfer,17 RFC952,32,264 stubdomain,175 RFC959,44,46,169,250,264 stufﬁng(bit),212 RFC974,62,264 stufﬁng(character),213 RIP,170,252 subnetmask,142 RIR,252 switch,234,252 Robustnessprinciple,96 SYNcookie,252 rootnameserver,252 SYNcookies,93 round-trip-time,252 T router,252 RoutingInformationProtocol,170 TCB,252 RPC,252 TCP,89,252 RTS,225 TCPConnectionestablishment,90 RTSframe(802.11),244 TCPconnectionrelease,95 TCPfastretransmit,103 S TCPheader,89 SDU,12 TCPInitialSequenceNumber,91 SDU(ServiceDataUnit),252 TCPMSS,94 segment,23,252 TCPOptions,94 selectiveacknowledgements,78 TCPRST,92 Index 277 Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor FoundationComputerNetworking: Principles,ProtocolsandPractice,Release0.25 TCPSACK,104 TCPselectiveacknowledgements,104 TCPselfclocking,105 TCPSYN,90 TCPSYN+ACK,90 TCP/IP,252 TCP/IPreferencemodel,23 telnet,253 Tier-1ISP,194 TimeDivisionMultiplexing,216 TimeToLive(IP),147 time-sequencediagram,12 TLD,253 TLS,253 TokenHoldingTime,228 TokenRingdataframe,227 TokenRingMonitor,227 TokenRingtokenframe,227 traceroute,153 traceroute6,165 transitdomain,175 TransmissionControlBlock,97 transportclock,83 Transportlayer,23 two-wayconnectivity,140 U UDP,86,253 UDPChecksum,88 UDPsegment,87 unicast,253 UniqueLocalUnicastIPv6,160 unreliableconnectionlessservice,13 V virtualcircuit,129 VirtualLAN,240 VLAN,240 vnc,253 W W3C,253 WAN,253 WavelengthDivisionMultiplexing,215 WDM,215 WiFi,241 X X.25,253 X11,253 XML,253 278 Index Saylor URL: http://www.saylor.org/courses/cs402/ The Saylor Foundation
